   Compiling compiler_builtins v0.1.85
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85 CARGO_PKG_AUTHORS='Jorge Aparicio <japaricious@gmail.com>' CARGO_PKG_DESCRIPTION='Compiler intrinsics used by the Rust compiler. Also available for other targets
if necessary'\!'
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/compiler-builtins' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=compiler_builtins CARGO_PKG_REPOSITORY='https://github.com/rust-lang/compiler-builtins' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.85 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=85 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name build_script_build /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="compiler-builtins"' --cfg 'feature="core"' --cfg 'feature="default"' --cfg 'feature="rustc-dep-of-std"' -C metadata=2fd03a75166107a2 -C extra-filename=-2fd03a75166107a2 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/compiler_builtins-2fd03a75166107a2 -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/build.rs
     Running `/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/compiler_builtins-2fd03a75166107a2/build-script-build`
[compiler_builtins 0.1.85] cargo:rerun-if-changed=build.rs
[compiler_builtins 0.1.85] cargo:compiler-rt=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/compiler-rt
[compiler_builtins 0.1.85] cargo:rustc-cfg=feature="unstable"
[compiler_builtins 0.1.85] cargo:rustc-cfg=feature="mem-unaligned"
   Compiling core v0.0.0 (/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core)
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=core CARGO_MANIFEST_DIR=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='The Rust Core Library' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=core CARGO_PKG_REPOSITORY='https://github.com/rust-lang/rust.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.0.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name core --edition=2021 /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=24c9f4c168d410c9 -C extra-filename=-24c9f4c168d410c9 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --cap-lints warn`
Path /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/lib.rs
   Compiling rustc-std-workspace-core v1.99.0 (/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core)
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustc_std_workspace_core CARGO_MANIFEST_DIR=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Hack for the compiler'\''s own build system
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustc-std-workspace-core CARGO_PKG_REPOSITORY='' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.99.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=99 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name rustc_std_workspace_core --edition=2021 /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=806e9b447dbecf25 -C extra-filename=-806e9b447dbecf25 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcore-24c9f4c168d410c9.rmeta --cap-lints warn`
Path /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core/lib.rs
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=compiler_builtins CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85 CARGO_PKG_AUTHORS='Jorge Aparicio <japaricious@gmail.com>' CARGO_PKG_DESCRIPTION='Compiler intrinsics used by the Rust compiler. Also available for other targets
if necessary'\!'
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/compiler-builtins' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=compiler_builtins CARGO_PKG_REPOSITORY='https://github.com/rust-lang/compiler-builtins' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.85 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=85 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/build/compiler_builtins-b9bc9710e8cde696/out RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name compiler_builtins /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="compiler-builtins"' --cfg 'feature="core"' --cfg 'feature="default"' --cfg 'feature="rustc-dep-of-std"' -C metadata=9aef164463dc9f01 -C extra-filename=-9aef164463dc9f01 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn --cfg 'feature="unstable"' --cfg 'feature="mem-unaligned"'`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/lib.rs
error[E0152]: duplicate lang item in crate `core` (which `alloc` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `rustc_std_workspace_core` depends on)
  = note: first definition in `core` loaded from /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcore-24c9f4c168d410c9.rmeta
  = note: second definition in `core` loaded from /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-05898138a596088a.rlib

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/mod.rs:107:24
    |
107 |         impl Float for $ty {
    |                        ^^^ doesn't have a size known at compile-time
...
174 | float_impl!(f32, u32, i32, i16, 32, 23);
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `f32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `f32`
    = note: required for `f32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `f32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `float::Float`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/mod.rs:18:5
    |
17  | pub(crate) trait Float:
    |                  ----- required by a bound in this
18  |     Copy
    |     ^^^^ required by this bound in `Float`
    = note: this error originates in the macro `float_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/mod.rs:107:24
    |
107 |         impl Float for $ty {
    |                        ^^^ doesn't have a size known at compile-time
...
175 | float_impl!(f64, u64, i64, i16, 64, 52);
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `f64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `f64`
    = note: required for `f64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `f64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `float::Float`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/mod.rs:18:5
    |
17  | pub(crate) trait Float:
    |                  ----- required by a bound in this
18  |     Copy
    |     ^^^^ required by this bound in `Float`
    = note: this error originates in the macro `float_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
 --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/add.rs:9:5
  |
9 |     i32: CastInto<F::Int>,
  |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
  |
  = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
  = help: see issue #48214
  = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u32` cannot be known at compilation time
 --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/add.rs:7:5
  |
7 |     u32: CastInto<F::Int>,
  |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
  |
  = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
  = help: see issue #48214
  = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `float::cmp::Result` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/cmp.rs:6:10
    |
6   | #[derive(Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `float::cmp::Result`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `float::cmp::Result` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/cmp.rs:6:17
    |
6   | #[derive(Clone, Copy)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `float::cmp::Result`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `float::cmp::Result`
    = note: required for `float::cmp::Result` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/div.rs:12:5
   |
12 |     i32: CastInto<F::Int>,
   |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
   = help: see issue #48214
   = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/div.rs:10:5
   |
10 |     u32: CastInto<F::Int>,
   |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
   = help: see issue #48214
   = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/div.rs:217:5
    |
217 |     i64: CastInto<F::Int>,
    |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: see issue #48214
    = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/div.rs:215:5
    |
215 |     u64: CastInto<F::Int>,
    |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: see issue #48214
    = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/div.rs:213:5
    |
213 |     i32: CastInto<F::Int>,
    |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: see issue #48214
    = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/div.rs:211:5
    |
211 |     u32: CastInto<F::Int>,
    |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: see issue #48214
    = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/extend.rs:12:5
   |
12 |     u64: CastInto<R::Int>,
   |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
   = help: see issue #48214
   = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u32` cannot be known at compilation time
 --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/extend.rs:9:5
  |
9 |     u32: CastInto<R::Int>,
  |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
  |
  = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
  = help: see issue #48214
  = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `i32` cannot be known at compilation time
 --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/mul.rs:8:5
  |
8 |     i32: CastInto<F::Int>,
  |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
  |
  = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
  = help: see issue #48214
  = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u32` cannot be known at compilation time
 --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/mul.rs:6:5
  |
6 |     u32: CastInto<F::Int>,
  |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
  |
  = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
  = help: see issue #48214
  = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/trunc.rs:12:5
   |
12 |     u32: CastInto<R::Int>,
   |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
   = help: see issue #48214
   = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `u64` cannot be known at compilation time
 --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/float/trunc.rs:8:5
  |
8 |     u64: CastInto<F::Int>,
  |     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
  |
  = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
  = help: see issue #48214
  = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:26:7
    |
26  |     + ops::ShlAssign<i32>
    |       ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
note: required by a bound in `rustc_std_workspace_core::ops::ShlAssign`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:919:21
    |
919 | pub trait ShlAssign<Rhs = Self> {
    |                     ^^^^^^^^^^ required by this bound in `ShlAssign`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:27:7
     |
27   |     + ops::ShrAssign<u32>
     |       ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::ops::ShrAssign`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:1003:21
     |
1003 | pub trait ShrAssign<Rhs = Self> {
     |                     ^^^^^^^^^^ required by this bound in `ShrAssign`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:252:18
    |
252 | int_impl!(isize, usize);
    |                  ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:252:11
    |
252 | int_impl!(isize, usize);
    |           ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:253:15
    |
253 | int_impl!(i8, u8);
    |               ^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:253:11
    |
253 | int_impl!(i8, u8);
    |           ^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:254:16
    |
254 | int_impl!(i16, u16);
    |                ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:254:11
    |
254 | int_impl!(i16, u16);
    |           ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:255:16
    |
255 | int_impl!(i32, u32);
    |                ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:255:11
    |
255 | int_impl!(i32, u32);
    |           ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:256:16
    |
256 | int_impl!(i64, u64);
    |                ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:256:11
    |
256 | int_impl!(i64, u64);
    |           ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:257:17
    |
257 | int_impl!(i128, u128);
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:257:11
    |
257 | int_impl!(i128, u128);
    |           ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:17:5
    |
16  | pub(crate) trait Int:
    |                  --- required by a bound in this
17  |     Copy
    |     ^^^^ required by this bound in `Int`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:301:27
    |
301 |             impl DInt for $D {
    |                           ^^ doesn't have a size known at compile-time
...
347 | impl_d_int!(u8 u16, u16 u32, u32 u64, u64 u128, i8 i16, i16 i32, i32 i64, i64 i128);
    | ----------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `int::Int` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u16` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:24
    |
262 | pub(crate) trait DInt: Int {
    |                        ^^^ required by this bound in `DInt`
    = note: this error originates in the macro `impl_d_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:301:27
    |
301 |             impl DInt for $D {
    |                           ^^ doesn't have a size known at compile-time
...
347 | impl_d_int!(u8 u16, u16 u32, u32 u64, u64 u128, i8 i16, i16 i32, i32 i64, i64 i128);
    | ----------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `int::Int` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u32` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:24
    |
262 | pub(crate) trait DInt: Int {
    |                        ^^^ required by this bound in `DInt`
    = note: this error originates in the macro `impl_d_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:301:27
    |
301 |             impl DInt for $D {
    |                           ^^ doesn't have a size known at compile-time
...
347 | impl_d_int!(u8 u16, u16 u32, u32 u64, u64 u128, i8 i16, i16 i32, i32 i64, i64 i128);
    | ----------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `int::Int` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u64` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:24
    |
262 | pub(crate) trait DInt: Int {
    |                        ^^^ required by this bound in `DInt`
    = note: this error originates in the macro `impl_d_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:301:27
    |
301 |             impl DInt for $D {
    |                           ^^ doesn't have a size known at compile-time
...
347 | impl_d_int!(u8 u16, u16 u32, u32 u64, u64 u128, i8 i16, i16 i32, i32 i64, i64 i128);
    | ----------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::Int` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u128` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:24
    |
262 | pub(crate) trait DInt: Int {
    |                        ^^^ required by this bound in `DInt`
    = note: this error originates in the macro `impl_d_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:301:27
    |
301 |             impl DInt for $D {
    |                           ^^ doesn't have a size known at compile-time
...
347 | impl_d_int!(u8 u16, u16 u32, u32 u64, u64 u128, i8 i16, i16 i32, i32 i64, i64 i128);
    | ----------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `int::Int` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i16` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:24
    |
262 | pub(crate) trait DInt: Int {
    |                        ^^^ required by this bound in `DInt`
    = note: this error originates in the macro `impl_d_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:301:27
    |
301 |             impl DInt for $D {
    |                           ^^ doesn't have a size known at compile-time
...
347 | impl_d_int!(u8 u16, u16 u32, u32 u64, u64 u128, i8 i16, i16 i32, i32 i64, i64 i128);
    | ----------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `int::Int` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i32` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:24
    |
262 | pub(crate) trait DInt: Int {
    |                        ^^^ required by this bound in `DInt`
    = note: this error originates in the macro `impl_d_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:301:27
    |
301 |             impl DInt for $D {
    |                           ^^ doesn't have a size known at compile-time
...
347 | impl_d_int!(u8 u16, u16 u32, u32 u64, u64 u128, i8 i16, i16 i32, i32 i64, i64 i128);
    | ----------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `int::Int` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i64` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:24
    |
262 | pub(crate) trait DInt: Int {
    |                        ^^^ required by this bound in `DInt`
    = note: this error originates in the macro `impl_d_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:301:27
    |
301 |             impl DInt for $D {
    |                           ^^ doesn't have a size known at compile-time
...
347 | impl_d_int!(u8 u16, u16 u32, u32 u64, u64 u128, i8 i16, i16 i32, i32 i64, i64 i128);
    | ----------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `int::Int` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i128` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:24
    |
262 | pub(crate) trait DInt: Int {
    |                        ^^^ required by this bound in `DInt`
    = note: this error originates in the macro `impl_d_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:324:27
    |
324 |               impl HInt for $H {
    |                             ^^ doesn't have a size known at compile-time
...
348 | / impl_h_int!(
349 | |     u8 u8 u16,
350 | |     u16 u16 u32,
351 | |     u32 u32 u64,
...   |
356 | |     i64 u64 i128
357 | | );
    | |_- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `int::Int` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u8` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::HInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:280:24
    |
280 | pub(crate) trait HInt: Int {
    |                        ^^^ required by this bound in `HInt`
    = note: this error originates in the macro `impl_h_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:324:27
    |
324 |               impl HInt for $H {
    |                             ^^ doesn't have a size known at compile-time
...
348 | / impl_h_int!(
349 | |     u8 u8 u16,
350 | |     u16 u16 u32,
351 | |     u32 u32 u64,
...   |
356 | |     i64 u64 i128
357 | | );
    | |_- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `int::Int` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u16` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::HInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:280:24
    |
280 | pub(crate) trait HInt: Int {
    |                        ^^^ required by this bound in `HInt`
    = note: this error originates in the macro `impl_h_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:324:27
    |
324 |               impl HInt for $H {
    |                             ^^ doesn't have a size known at compile-time
...
348 | / impl_h_int!(
349 | |     u8 u8 u16,
350 | |     u16 u16 u32,
351 | |     u32 u32 u64,
...   |
356 | |     i64 u64 i128
357 | | );
    | |_- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `int::Int` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u32` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::HInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:280:24
    |
280 | pub(crate) trait HInt: Int {
    |                        ^^^ required by this bound in `HInt`
    = note: this error originates in the macro `impl_h_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:324:27
    |
324 |               impl HInt for $H {
    |                             ^^ doesn't have a size known at compile-time
...
348 | / impl_h_int!(
349 | |     u8 u8 u16,
350 | |     u16 u16 u32,
351 | |     u32 u32 u64,
...   |
356 | |     i64 u64 i128
357 | | );
    | |_- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `int::Int` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u64` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::HInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:280:24
    |
280 | pub(crate) trait HInt: Int {
    |                        ^^^ required by this bound in `HInt`
    = note: this error originates in the macro `impl_h_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:324:27
    |
324 |               impl HInt for $H {
    |                             ^^ doesn't have a size known at compile-time
...
348 | / impl_h_int!(
349 | |     u8 u8 u16,
350 | |     u16 u16 u32,
351 | |     u32 u32 u64,
...   |
356 | |     i64 u64 i128
357 | | );
    | |_- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `int::Int` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i8` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::HInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:280:24
    |
280 | pub(crate) trait HInt: Int {
    |                        ^^^ required by this bound in `HInt`
    = note: this error originates in the macro `impl_h_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:324:27
    |
324 |               impl HInt for $H {
    |                             ^^ doesn't have a size known at compile-time
...
348 | / impl_h_int!(
349 | |     u8 u8 u16,
350 | |     u16 u16 u32,
351 | |     u32 u32 u64,
...   |
356 | |     i64 u64 i128
357 | | );
    | |_- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `int::Int` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i16` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::HInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:280:24
    |
280 | pub(crate) trait HInt: Int {
    |                        ^^^ required by this bound in `HInt`
    = note: this error originates in the macro `impl_h_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:324:27
    |
324 |               impl HInt for $H {
    |                             ^^ doesn't have a size known at compile-time
...
348 | / impl_h_int!(
349 | |     u8 u8 u16,
350 | |     u16 u16 u32,
351 | |     u32 u32 u64,
...   |
356 | |     i64 u64 i128
357 | | );
    | |_- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `int::Int` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i32` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::HInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:280:24
    |
280 | pub(crate) trait HInt: Int {
    |                        ^^^ required by this bound in `HInt`
    = note: this error originates in the macro `impl_h_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:324:27
    |
324 |               impl HInt for $H {
    |                             ^^ doesn't have a size known at compile-time
...
348 | / impl_h_int!(
349 | |     u8 u8 u16,
350 | |     u16 u16 u32,
351 | |     u32 u32 u64,
...   |
356 | |     i64 u64 i128
357 | | );
    | |_- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `int::Int` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i64` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required by a bound in `int::HInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:280:24
    |
280 | pub(crate) trait HInt: Int {
    |                        ^^^ required by this bound in `HInt`
    = note: this error originates in the macro `impl_h_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:379:12
    |
379 | cast_into!(usize);
    |            ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | cast_into!(usize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:380:12
    |
380 | cast_into!(isize);
    |            ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
380 | cast_into!(isize);
    | ----------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:381:12
    |
381 | cast_into!(u8);
    |            ^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
381 | cast_into!(u8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:382:12
    |
382 | cast_into!(i8);
    |            ^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
382 | cast_into!(i8);
    | -------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:383:12
    |
383 | cast_into!(u16);
    |            ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | cast_into!(u16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:384:12
    |
384 | cast_into!(i16);
    |            ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
384 | cast_into!(i16);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:385:12
    |
385 | cast_into!(u32);
    |            ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | cast_into!(u32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:386:12
    |
386 | cast_into!(i32);
    |            ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | cast_into!(i32);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:387:12
    |
387 | cast_into!(u64);
    |            ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | cast_into!(u64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:388:12
    |
388 | cast_into!(i64);
    |            ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | cast_into!(i64);
    | --------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:389:12
    |
389 | cast_into!(u128);
    |            ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | cast_into!(u128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:390:12
    |
390 | cast_into!(i128);
    |            ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:37
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                                     ^^^^ required by this bound in `CastInto`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `isize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `isize`
    = note: required for `isize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `isize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u8`
    = note: required for `u8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i8`
    = note: required for `i8` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i8` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u16`
    = note: required for `u16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i16`
    = note: required for `i16` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i16` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:371:14
    |
371 |         impl CastInto<$into> for $ty {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | cast_into!(i128);
    | ---------------- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `int::CastInto`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:361:30
    |
361 | pub(crate) trait CastInto<T: Copy>: Copy {
    |                              ^^^^ required by this bound in `CastInto`
    = note: this error originates in the macro `cast_into` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Self` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:81:46
   |
81 |     fn overflowing_add(self, other: Self) -> (Self, bool);
   |                                              ^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = note: only the last element of a tuple may have a dynamically sized type
help: consider further restricting `Self`
   |
81 |     fn overflowing_add(self, other: Self) -> (Self, bool) where Self: core::marker::Sized;
   |                                                           +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:21:18
    |
21  | impl UAddSub for u128 {}
    |                  ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::DInt` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u128` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `u128` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::addsub::UAddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:3:16
    |
3   | trait UAddSub: DInt {
    |                ^^^^ required by this bound in `UAddSub`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:35:17
    |
35  | impl AddSub for u128 {}
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::addsub::UAddSub` is implemented for `u128`
    = note: required for `<u128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `<u128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::addsub::UAddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:3:7
    |
3   | trait UAddSub: DInt {
    |       ^^^^^^^
note: required by a bound in `int::addsub::AddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:25:33
    |
23  | trait AddSub: Int
    |       ------ required by a bound in this
24  | where
25  |     <Self as Int>::UnsignedInt: UAddSub,
    |                                 ^^^^^^^ required by this bound in `AddSub`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:36:6
    |
36  | impl AddSub for i128 {}
    |      ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::addsub::UAddSub` is implemented for `u128`
    = note: required for `<i128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `<i128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::addsub::UAddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:3:7
    |
3   | trait UAddSub: DInt {
    |       ^^^^^^^
note: required by a bound in `int::addsub::AddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:25:33
    |
23  | trait AddSub: Int
    |       ------ required by a bound in this
24  | where
25  |     <Self as Int>::UnsignedInt: UAddSub,
    |                                 ^^^^^^^ required by this bound in `AddSub`

error[E0277]: the size for values of type `i128` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:36:17
   |
36 | impl AddSub for i128 {}
   |                 ^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
   = help: the trait `int::Int` is implemented for `i128`
   = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i128` to implement `int::Int`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
   |
16 | pub(crate) trait Int:
   |                  ^^^
note: required by a bound in `int::addsub::AddSub`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:23:15
   |
23 | trait AddSub: Int
   |               ^^^ required by this bound in `AddSub`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:48:6
    |
48  | impl Addo for i128 {}
    |      ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::addsub::UAddSub` is implemented for `u128`
    = note: required for `<i128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `<i128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::addsub::UAddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:3:7
    |
3   | trait UAddSub: DInt {
    |       ^^^^^^^
note: required by a bound in `int::addsub::Addo`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:40:33
    |
38  | trait Addo: AddSub
    |       ---- required by a bound in this
39  | where
40  |     <Self as Int>::UnsignedInt: UAddSub,
    |                                 ^^^^^^^ required by this bound in `Addo`

error[E0277]: the size for values of type `i128` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:48:15
   |
48 | impl Addo for i128 {}
   |               ^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
   = help: the trait `int::addsub::AddSub` is implemented for `i128`
   = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i128` to implement `int::Int`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
   |
16 | pub(crate) trait Int:
   |                  ^^^
note: required for `i128` to implement `int::addsub::AddSub`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:23:7
   |
23 | trait AddSub: Int
   |       ^^^^^^
note: required by a bound in `int::addsub::Addo`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:38:13
   |
38 | trait Addo: AddSub
   |             ^^^^^^ required by this bound in `Addo`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:49:15
    |
49  | impl Addo for u128 {}
    |               ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::addsub::UAddSub` is implemented for `u128`
    = note: required for `<u128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `<u128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::addsub::UAddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:3:7
    |
3   | trait UAddSub: DInt {
    |       ^^^^^^^
note: required by a bound in `int::addsub::Addo`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:40:33
    |
38  | trait Addo: AddSub
    |       ---- required by a bound in this
39  | where
40  |     <Self as Int>::UnsignedInt: UAddSub,
    |                                 ^^^^^^^ required by this bound in `Addo`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:61:6
    |
61  | impl Subo for i128 {}
    |      ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::addsub::UAddSub` is implemented for `u128`
    = note: required for `<i128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `<i128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required for `<i128 as int::Int>::UnsignedInt` to implement `int::addsub::UAddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:3:7
    |
3   | trait UAddSub: DInt {
    |       ^^^^^^^
note: required by a bound in `int::addsub::Subo`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:53:33
    |
51  | trait Subo: AddSub
    |       ---- required by a bound in this
52  | where
53  |     <Self as Int>::UnsignedInt: UAddSub,
    |                                 ^^^^^^^ required by this bound in `Subo`

error[E0277]: the size for values of type `i128` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:61:15
   |
61 | impl Subo for i128 {}
   |               ^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
   = help: the trait `int::addsub::AddSub` is implemented for `i128`
   = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i128` to implement `int::Int`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
   |
16 | pub(crate) trait Int:
   |                  ^^^
note: required for `i128` to implement `int::addsub::AddSub`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:23:7
   |
23 | trait AddSub: Int
   |       ^^^^^^
note: required by a bound in `int::addsub::Subo`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:51:13
   |
51 | trait Subo: AddSub
   |             ^^^^^^ required by this bound in `Subo`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:62:15
    |
62  | impl Subo for u128 {}
    |               ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::addsub::UAddSub` is implemented for `u128`
    = note: required for `<u128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `<u128 as int::Int>::UnsignedInt` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required for `<u128 as int::Int>::UnsignedInt` to implement `int::addsub::UAddSub`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:3:7
    |
3   | trait UAddSub: DInt {
    |       ^^^^^^^
note: required by a bound in `int::addsub::Subo`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:53:33
    |
51  | trait Subo: AddSub
    |       ---- required by a bound in this
52  | where
53  |     <Self as Int>::UnsignedInt: UAddSub,
    |                                 ^^^^^^^ required by this bound in `Subo`

error[E0277]: the size for values of type `Self` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:42:35
   |
42 |     fn addo(self, other: Self) -> (Self, bool) {
   |                                   ^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = note: only the last element of a tuple may have a dynamically sized type
help: consider further restricting `Self`
   |
42 |     fn addo(self, other: Self) -> (Self, bool) where Self: core::marker::Sized {
   |                                                +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `Self` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/addsub.rs:55:35
   |
55 |     fn subo(self, other: Self) -> (Self, bool) {
   |                                   ^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = note: only the last element of a tuple may have a dynamically sized type
help: consider further restricting `Self`
   |
55 |     fn subo(self, other: Self) -> (Self, bool) where Self: core::marker::Sized {
   |                                                +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:30:6
    |
30  | impl Mul for u64 {}
    |      ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the following other types implement trait `int::DInt`:
              i128
              i16
              i32
              i64
              u128
              u16
              u32
              u64
    = note: required for `<u64 as int::DInt>::H` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `<u64 as int::DInt>::H` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `<u64 as int::DInt>::H` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `<u64 as int::DInt>::H` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::mul::Mul`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:5:14
    |
3   | trait Mul: DInt
    |       --- required by a bound in this
4   | where
5   |     Self::H: DInt,
    |              ^^^^ required by this bound in `Mul`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:30:14
    |
30  | impl Mul for u64 {}
    |              ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `int::DInt` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u64` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `u64` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::mul::Mul`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:3:12
    |
3   | trait Mul: DInt
    |            ^^^^ required by this bound in `Mul`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:31:6
    |
31  | impl Mul for i128 {}
    |      ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the following other types implement trait `int::DInt`:
              i128
              i16
              i32
              i64
              u128
              u16
              u32
              u64
    = note: required for `<i128 as int::DInt>::H` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `<i128 as int::DInt>::H` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `<i128 as int::DInt>::H` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `<i128 as int::DInt>::H` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::mul::Mul`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:5:14
    |
3   | trait Mul: DInt
    |       --- required by a bound in this
4   | where
5   |     Self::H: DInt,
    |              ^^^^ required by this bound in `Mul`

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:31:14
    |
31  | impl Mul for i128 {}
    |              ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `int::DInt` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i128` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `i128` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::mul::Mul`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:3:12
    |
3   | trait Mul: DInt
    |            ^^^^ required by this bound in `Mul`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:56:16
   |
56 | impl UMulo for u32 {}
   |                ^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
   = help: the trait `int::Int` is implemented for `u32`
   = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u32` to implement `int::Int`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
   |
16 | pub(crate) trait Int:
   |                  ^^^
note: required by a bound in `int::mul::UMulo`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:33:25
   |
33 | pub(crate) trait UMulo: Int + DInt {
   |                         ^^^ required by this bound in `UMulo`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:57:16
   |
57 | impl UMulo for u64 {}
   |                ^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
   = help: the trait `int::Int` is implemented for `u64`
   = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u64` to implement `int::Int`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
   |
16 | pub(crate) trait Int:
   |                  ^^^
note: required by a bound in `int::mul::UMulo`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:33:25
   |
33 | pub(crate) trait UMulo: Int + DInt {
   |                         ^^^ required by this bound in `UMulo`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:58:16
   |
58 | impl UMulo for u128 {}
   |                ^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
   = help: the trait `int::Int` is implemented for `u128`
   = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u128` to implement `int::Int`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
   |
16 | pub(crate) trait Int:
   |                  ^^^
note: required by a bound in `int::mul::UMulo`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:33:25
   |
33 | pub(crate) trait UMulo: Int + DInt {
   |                         ^^^ required by this bound in `UMulo`

error[E0277]: the size for values of type `Self` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mul.rs:34:33
   |
34 |     fn mulo(self, rhs: Self) -> (Self, bool) {
   |                                 ^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = note: only the last element of a tuple may have a dynamically sized type
help: consider further restricting `Self`
   |
34 |     fn mulo(self, rhs: Self) -> (Self, bool) where Self: core::marker::Sized {
   |                                              +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:21:15
    |
21  | impl Ashl for u32 {}
    |               ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `int::DInt` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u32` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `u32` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Ashl`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:3:13
    |
3   | trait Ashl: DInt {
    |             ^^^^ required by this bound in `Ashl`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:22:15
    |
22  | impl Ashl for u64 {}
    |               ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `int::DInt` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u64` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `u64` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Ashl`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:3:13
    |
3   | trait Ashl: DInt {
    |             ^^^^ required by this bound in `Ashl`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:23:15
    |
23  | impl Ashl for u128 {}
    |               ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::DInt` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u128` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `u128` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Ashl`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:3:13
    |
3   | trait Ashl: DInt {
    |             ^^^^ required by this bound in `Ashl`

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:46:15
    |
46  | impl Ashr for i32 {}
    |               ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
    = help: the trait `int::DInt` is implemented for `i32`
    = note: required for `i32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i32` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i32` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `i32` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Ashr`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:25:13
    |
25  | trait Ashr: DInt {
    |             ^^^^ required by this bound in `Ashr`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:47:15
    |
47  | impl Ashr for i64 {}
    |               ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
    = help: the trait `int::DInt` is implemented for `i64`
    = note: required for `i64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i64` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `i64` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Ashr`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:25:13
    |
25  | trait Ashr: DInt {
    |             ^^^^ required by this bound in `Ashr`

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:48:15
    |
48  | impl Ashr for i128 {}
    |               ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i128`
    = help: the trait `int::DInt` is implemented for `i128`
    = note: required for `i128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `i128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `i128` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `i128` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Ashr`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:25:13
    |
25  | trait Ashr: DInt {
    |             ^^^^ required by this bound in `Ashr`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:67:15
    |
67  | impl Lshr for u32 {}
    |               ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
    = help: the trait `int::DInt` is implemented for `u32`
    = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u32` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `u32` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Lshr`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:50:13
    |
50  | trait Lshr: DInt {
    |             ^^^^ required by this bound in `Lshr`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:68:15
    |
68  | impl Lshr for u64 {}
    |               ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
    = help: the trait `int::DInt` is implemented for `u64`
    = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u64` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `u64` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Lshr`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:50:13
    |
50  | trait Lshr: DInt {
    |             ^^^^ required by this bound in `Lshr`

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:69:15
    |
69  | impl Lshr for u128 {}
    |               ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u128`
    = help: the trait `int::DInt` is implemented for `u128`
    = note: required for `u128` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `u128` to implement `rustc_std_workspace_core::marker::Copy`
note: required for `u128` to implement `int::Int`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:16:18
    |
16  | pub(crate) trait Int:
    |                  ^^^
note: required for `u128` to implement `int::DInt`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/mod.rs:262:18
    |
262 | pub(crate) trait DInt: Int {
    |                  ^^^^
note: required by a bound in `int::shift::Lshr`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/shift.rs:50:13
    |
50  | trait Lshr: DInt {
    |             ^^^^ required by this bound in `Lshr`

error[E0277]: the size for values of type `&mut u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/udiv.rs:24:57
    |
24  |     pub extern "C" fn __udivmodsi4(n: u32, d: u32, rem: Option<&mut u32>) -> u32 {
    |                                                         ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&mut u32`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&mut u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/udiv.rs:49:57
    |
49  |     pub extern "C" fn __udivmoddi4(n: u64, d: u64, rem: Option<&mut u64>) -> u64 {
    |                                                         ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&mut u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&mut u128` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/int/udiv.rs:89:59
    |
89  |     pub extern "C" fn __udivmodti4(n: u128, d: u128, rem: Option<&mut u128>) -> u128 {
    |                                                           ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&mut u128`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/mem/mod.rs:116:15
    |
116 |     T: Copy + From<u8> + Shl<u32, Output = T> + BitOr<T, Output = T>,
    |               ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/mem/mod.rs:116:26
    |
116 |     T: Copy + From<u8> + Shl<u32, Output = T> + BitOr<T, Output = T>,
    |                          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::ops::Shl`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:453:15
    |
453 | pub trait Shl<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shl`

error[E0277]: the size for values of type `(*const U, *const U, usize)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/mem/x86_64.rs:140:12
    |
140 |         F: FnOnce(*const U, *const U, usize) -> i32,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(*const U, *const U, usize)`
note: required by a bound in `rustc_std_workspace_core::ops::FnOnce`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:242:18
    |
242 | pub trait FnOnce<Args: Tuple> {
    |                  ^^^^ required by this bound in `FnOnce`

error[E0277]: `(*const U, *const U, usize)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/compiler_builtins-0.1.85/src/mem/x86_64.rs:140:12
    |
140 |         F: FnOnce(*const U, *const U, usize) -> i32,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(*const U, *const U, usize)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnOnce`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:242:24
    |
242 | pub trait FnOnce<Args: Tuple> {
    |                        ^^^^^ required by this bound in `FnOnce`

Some errors have detailed explanations: E0152, E0277.
For more information about an error, try `rustc --explain E0152`.
   Compiling alloc v0.0.0 (/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc)
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=alloc CARGO_MANIFEST_DIR=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='The Rust core allocation and collections library' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=alloc CARGO_PKG_REPOSITORY='https://github.com/rust-lang/rust.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.0.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name alloc --edition=2021 /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=0bd2fecf25ba329c -C extra-filename=-0bd2fecf25ba329c --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcore-24c9f4c168d410c9.rmeta --cap-lints warn`
Path /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/lib.rs
error: extern location for compiler_builtins does not exist: /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta

error[E0152]: duplicate lang item in crate `core` (which `alloc` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `alloc` depends on)
  = note: first definition in `core` loaded from /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcore-24c9f4c168d410c9.rmeta
  = note: second definition in `core` loaded from /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-05898138a596088a.rlib

error[E0152]: found duplicate lang item `exchange_malloc`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs:324:1
    |
324 | unsafe fn exchange_malloc(size: usize, align: usize) -> *mut u8 {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: the lang item is first defined in crate `alloc` (which `rustyrts_dynamic_rlib` depends on)
    = note: first definition in `alloc` loaded from /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-cb19371b39fc63d8.rlib
    = note: second definition in the local crate (`alloc`)

error[E0152]: found duplicate lang item `box_free`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs:340:1
    |
340 | / pub(crate) const unsafe fn box_free<T: ?Sized, A: ~const Allocator + ~const Destruct>(
341 | |     ptr: Unique<T>,
342 | |     alloc: A,
343 | | ) {
    | |_^
    |
    = note: the lang item is first defined in crate `alloc` (which `rustyrts_dynamic_rlib` depends on)
    = note: first definition in `alloc` loaded from /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-cb19371b39fc63d8.rlib
    = note: second definition in the local crate (`alloc`)

error[E0152]: found duplicate lang item `owned_box`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:198:1
    |
198 | / pub struct Box<
199 | |     T: ?Sized,
200 | |     #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global,
201 | | >(Unique<T>, A);
    | |_^
    |
    = note: the lang item is first defined in crate `alloc` (which `rustyrts_dynamic_rlib` depends on)
    = note: first definition in `alloc` loaded from /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-cb19371b39fc63d8.rlib
    = note: second definition in the local crate (`alloc`)

error[E0152]: found duplicate lang item `String`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs:367:1
    |
367 | pub struct String {
    | ^^^^^^^^^^^^^^^^^
    |
    = note: the lang item is first defined in crate `alloc` (which `rustyrts_dynamic_rlib` depends on)
    = note: first definition in `alloc` loaded from /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-cb19371b39fc63d8.rlib
    = note: second definition in the local crate (`alloc`)

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:199:5
    |
199 |     T: ?Sized,
    |     ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:290:14
    |
290 | struct RcBox<T: ?Sized> {
    |              ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:325:17
    |
325 | struct ArcInner<T: ?Sized> {
    |                 ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:34:20
   |
34 | pub struct ThinBox<T: ?Sized> {
   |                    ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:43:13
   |
43 | unsafe impl<T: ?Sized + Send> Send for ThinBox<T> {}
   |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:47:13
   |
47 | unsafe impl<T: ?Sized + Sync> Sync for ThinBox<T> {}
   |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:71:6
   |
71 | impl<Dyn: ?Sized> ThinBox<Dyn> {
   |      ^^^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:95:6
   |
95 | impl<T: ?Sized + Debug> Debug for ThinBox<T> {
   |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:102:6
    |
102 | impl<T: ?Sized + Display> Display for ThinBox<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:109:6
    |
109 | impl<T: ?Sized> Deref for ThinBox<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:121:6
    |
121 | impl<T: ?Sized> DerefMut for ThinBox<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:131:6
    |
131 | impl<T: ?Sized> Drop for ThinBox<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:142:6
    |
142 | impl<T: ?Sized> ThinBox<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:298:6
    |
298 | impl<T: ?Sized + Error> Error for ThinBox<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:912:6
    |
912 | impl<T: ?Sized> Box<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:962:6
    |
962 | impl<T: ?Sized, A: Allocator> Box<T, A> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1235:27
     |
1235 | unsafe impl<#[may_dangle] T: ?Sized, A: Allocator> Drop for Box<T, A> {
     |                           ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1336:6
     |
1336 | impl<T: ?Sized + PartialEq, A: Allocator> PartialEq for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1347:6
     |
1347 | impl<T: ?Sized + PartialOrd, A: Allocator> PartialOrd for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1370:6
     |
1370 | impl<T: ?Sized + Ord, A: Allocator> Ord for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1377:6
     |
1377 | impl<T: ?Sized + Eq, A: Allocator> Eq for Box<T, A> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1380:6
     |
1380 | impl<T: ?Sized + Hash, A: Allocator> Hash for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1387:6
     |
1387 | impl<T: ?Sized + Hasher, A: Allocator> Hasher for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1461:6
     |
1461 | impl<T: ?Sized, A: Allocator> const From<Box<T, A>> for Pin<Box<T, A>>
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1874:6
     |
1874 | impl<T: fmt::Display + ?Sized, A: Allocator> fmt::Display for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1881:6
     |
1881 | impl<T: fmt::Debug + ?Sized, A: Allocator> fmt::Debug for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1888:6
     |
1888 | impl<T: ?Sized, A: Allocator> fmt::Pointer for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1899:6
     |
1899 | impl<T: ?Sized, A: Allocator> const Deref for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1909:6
     |
1909 | impl<T: ?Sized, A: Allocator> const DerefMut for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1916:6
     |
1916 | impl<T: ?Sized, A: Allocator> Receiver for Box<T, A> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1919:6
     |
1919 | impl<I: Iterator + ?Sized, A: Allocator> Iterator for Box<I, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1962:6
     |
1962 | impl<I: DoubleEndedIterator + ?Sized, A: Allocator> DoubleEndedIterator for Box<I, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1971:6
     |
1971 | impl<I: ExactSizeIterator + ?Sized, A: Allocator> ExactSizeIterator for Box<I, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1981:6
     |
1981 | impl<I: FusedIterator + ?Sized, A: Allocator> FusedIterator for Box<I, A> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1984:19
     |
1984 | impl<Args: Tuple, F: FnOnce<Args> + ?Sized, A: Allocator> FnOnce<Args> for Box<F, A> {
     |                   ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1993:19
     |
1993 | impl<Args: Tuple, F: FnMut<Args> + ?Sized, A: Allocator> FnMut<Args> for Box<F, A> {
     |                   ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:19
     |
2000 | impl<Args: Tuple, F: Fn<Args> + ?Sized, A: Allocator> Fn<Args> for Box<F, A> {
     |                   ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2007:6
     |
2007 | impl<T: ?Sized + Unsize<U>, U: ?Sized, A: Allocator> CoerceUnsized<Box<U, A>> for Box<T, A> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2007:29
     |
2007 | impl<T: ?Sized + Unsize<U>, U: ?Sized, A: Allocator> CoerceUnsized<Box<U, A>> for Box<T, A> {}
     |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2010:6
     |
2010 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Box<U>> for Box<T, Global> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2010:29
     |
2010 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Box<U>> for Box<T, Global> {}
     |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2038:6
     |
2038 | impl<T: ?Sized, A: Allocator> borrow::Borrow<T> for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2045:6
     |
2045 | impl<T: ?Sized, A: Allocator> borrow::BorrowMut<T> for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2052:6
     |
2052 | impl<T: ?Sized, A: Allocator> AsRef<T> for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2059:6
     |
2059 | impl<T: ?Sized, A: Allocator> AsMut<T> for Box<T, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2088:6
     |
2088 | impl<T: ?Sized, A: Allocator> Unpin for Box<T, A> where A: 'static {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2091:6
     |
2091 | impl<G: ?Sized + Generator<R> + Unpin, R, A: Allocator> Generator<R> for Box<G, A>
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2104:6
     |
2104 | impl<G: ?Sized + Generator<R>, R, A: Allocator> Generator<R> for Pin<Box<G, A>>
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2117:6
     |
2117 | impl<F: ?Sized + Future + Unpin, A: Allocator> Future for Box<F, A>
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2129:6
     |
2129 | impl<S: ?Sized + AsyncIterator + Unpin> AsyncIterator for Box<S> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:21:10
   |
21 | impl<'a, B: ?Sized> Borrow<B> for Cow<'a, B>
   |          ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:179:18
    |
179 | pub enum Cow<'a, B: ?Sized + 'a>
    |                  ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:193:6
    |
193 | impl<B: ?Sized + ToOwned> Clone for Cow<'_, B> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:212:6
    |
212 | impl<B: ?Sized + ToOwned> Cow<'_, B> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:332:6
    |
332 | impl<B: ?Sized + ToOwned> const Deref for Cow<'_, B>
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:347:6
    |
347 | impl<B: ?Sized> Eq for Cow<'_, B> where B: Eq + ToOwned {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:350:6
    |
350 | impl<B: ?Sized> Ord for Cow<'_, B>
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:361:14
    |
361 | impl<'a, 'b, B: ?Sized, C: ?Sized> PartialEq<Cow<'b, C>> for Cow<'a, B>
    |              ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:361:25
    |
361 | impl<'a, 'b, B: ?Sized, C: ?Sized> PartialEq<Cow<'b, C>> for Cow<'a, B>
    |                         ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:373:10
    |
373 | impl<'a, B: ?Sized> PartialOrd for Cow<'a, B>
    |          ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:384:6
    |
384 | impl<B: ?Sized> fmt::Debug for Cow<'_, B>
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:397:6
    |
397 | impl<B: ?Sized> fmt::Display for Cow<'_, B>
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:410:6
    |
410 | impl<B: ?Sized> Default for Cow<'_, B>
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:421:6
    |
421 | impl<B: ?Sized> Hash for Cow<'_, B>
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:432:6
    |
432 | impl<T: ?Sized + ToOwned> AsRef<T> for Cow<'_, T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:658:16
    |
658 |     pub fn get<Q: ?Sized>(&self, key: &Q) -> Option<&V>
    |                ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:686:26
    |
686 |     pub fn get_key_value<Q: ?Sized>(&self, k: &Q) -> Option<(&K, &V)>
    |                          ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:887:25
    |
887 |     pub fn contains_key<Q: ?Sized>(&self, key: &Q) -> bool
    |                         ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:916:20
    |
916 |     pub fn get_mut<Q: ?Sized>(&mut self, key: &Q) -> Option<&mut V>
    |                    ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:1021:19
     |
1021 |     pub fn remove<Q: ?Sized>(&mut self, key: &Q) -> Option<V>
     |                   ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:1048:25
     |
1048 |     pub fn remove_entry<Q: ?Sized>(&mut self, key: &Q) -> Option<(K, V)>
     |                         ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:1183:18
     |
1183 |     pub fn range<T: ?Sized, R>(&self, range: R) -> Range<'_, K, V>
     |                  ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:1225:22
     |
1225 |     pub fn range_mut<T: ?Sized, R>(&mut self, range: R) -> RangeMut<'_, K, V>
     |                      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:1320:22
     |
1320 |     pub fn split_off<Q: ?Sized + Ord>(&mut self, key: &Q) -> Self
     |                      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:2202:9
     |
2202 | impl<K, Q: ?Sized, V, A: Allocator + Clone> Index<&Q> for BTreeMap<K, V, A>
     |         ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/set.rs:400:18
    |
400 |     pub fn range<K: ?Sized, R>(&self, range: R) -> Range<'_, T>
    |                  ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/set.rs:616:21
    |
616 |     pub fn contains<Q: ?Sized>(&self, value: &Q) -> bool
    |                     ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/set.rs:641:16
    |
641 |     pub fn get<Q: ?Sized>(&self, value: &Q) -> Option<&T>
    |                ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/set.rs:955:19
    |
955 |     pub fn remove<Q: ?Sized>(&mut self, value: &Q) -> bool
    |                   ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/set.rs:980:17
    |
980 |     pub fn take<Q: ?Sized>(&mut self, value: &Q) -> Option<T>
    |                 ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/set.rs:1079:22
     |
1079 |     pub fn split_off<Q: ?Sized + Ord>(&mut self, value: &Q) -> Self
     |                      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:318:15
    |
318 | pub struct Rc<T: ?Sized> {
    |               ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:324:6
    |
324 | impl<T: ?Sized> !marker::Send for Rc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:332:6
    |
332 | impl<T: ?Sized> !marker::Sync for Rc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:335:6
    |
335 | impl<T: RefUnwindSafe + ?Sized> UnwindSafe for Rc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:337:6
    |
337 | impl<T: RefUnwindSafe + ?Sized> RefUnwindSafe for Rc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:340:6
    |
340 | impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Rc<U>> for Rc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:340:29
    |
340 | impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Rc<U>> for Rc<T> {}
    |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:343:6
    |
343 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Rc<U>> for Rc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:343:29
    |
343 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Rc<U>> for Rc<T> {}
    |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:345:6
    |
345 | impl<T: ?Sized> Rc<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:830:6
    |
830 | impl<T: ?Sized> Rc<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1367:6
     |
1367 | impl<T: ?Sized> Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1549:6
     |
1549 | impl<T: ?Sized> Deref for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1559:6
     |
1559 | impl<T: ?Sized> Receiver for Rc<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1562:27
     |
1562 | unsafe impl<#[may_dangle] T: ?Sized> Drop for Rc<T> {
     |                           ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1608:6
     |
1608 | impl<T: ?Sized> Clone for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1697:6
     |
1697 | impl<T: ?Sized + PartialEq> PartialEq for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1745:6
     |
1745 | impl<T: ?Sized + Eq> Eq for Rc<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1748:6
     |
1748 | impl<T: ?Sized + PartialOrd> PartialOrd for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1842:6
     |
1842 | impl<T: ?Sized + Ord> Ord for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1864:6
     |
1864 | impl<T: ?Sized + Hash> Hash for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1871:6
     |
1871 | impl<T: ?Sized + fmt::Display> fmt::Display for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1878:6
     |
1878 | impl<T: ?Sized + fmt::Debug> fmt::Debug for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1885:6
     |
1885 | impl<T: ?Sized> fmt::Pointer for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1971:6
     |
1971 | impl<T: ?Sized> From<Box<T>> for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2013:10
     |
2013 | impl<'a, B> From<Cow<'a, B>> for Rc<B>
     |          ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2178:17
     |
2178 | pub struct Weak<T: ?Sized> {
     |                 ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2189:6
     |
2189 | impl<T: ?Sized> !marker::Send for Weak<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2191:6
     |
2191 | impl<T: ?Sized> !marker::Sync for Weak<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2194:6
     |
2194 | impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Weak<U>> for Weak<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2194:29
     |
2194 | impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Weak<U>> for Weak<T> {}
     |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2197:6
     |
2197 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Weak<U>> for Weak<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2197:29
     |
2197 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Weak<U>> for Weak<T> {}
     |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2232:6
     |
2232 | impl<T: ?Sized> Weak<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2502:27
     |
2502 | unsafe impl<#[may_dangle] T: ?Sized> Drop for Weak<T> {
     |                           ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2542:6
     |
2542 | impl<T: ?Sized> Clone for Weak<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2564:6
     |
2564 | impl<T: ?Sized> fmt::Debug for Weak<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2696:6
     |
2696 | impl<T: ?Sized> borrow::Borrow<T> for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2703:6
     |
2703 | impl<T: ?Sized> AsRef<T> for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2710:6
     |
2710 | impl<T: ?Sized> Unpin for Rc<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs:555:19
    |
555 |     pub fn concat<Item: ?Sized>(&self) -> <Self as Concat<Item>>::Output
    |                   ^^^^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs:681:18
    |
681 | pub trait Concat<Item: ?Sized> {
    |                  ^^^^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs:2526:6
     |
2526 | impl<T: fmt::Display + ?Sized> ToString for T {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:244:16
    |
244 | pub struct Arc<T: ?Sized> {
    |                ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:250:13
    |
250 | unsafe impl<T: ?Sized + Sync + Send> Send for Arc<T> {}
    |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:252:13
    |
252 | unsafe impl<T: ?Sized + Sync + Send> Sync for Arc<T> {}
    |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:255:6
    |
255 | impl<T: RefUnwindSafe + ?Sized> UnwindSafe for Arc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:258:6
    |
258 | impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Arc<U>> for Arc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:258:29
    |
258 | impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Arc<U>> for Arc<T> {}
    |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:261:6
    |
261 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Arc<U>> for Arc<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:261:29
    |
261 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Arc<U>> for Arc<T> {}
    |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:263:6
    |
263 | impl<T: ?Sized> Arc<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:294:17
    |
294 | pub struct Weak<T: ?Sized> {
    |                 ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:305:13
    |
305 | unsafe impl<T: ?Sized + Sync + Send> Send for Weak<T> {}
    |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:307:13
    |
307 | unsafe impl<T: ?Sized + Sync + Send> Sync for Weak<T> {}
    |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:310:6
    |
310 | impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Weak<U>> for Weak<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:310:29
    |
310 | impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Weak<U>> for Weak<T> {}
    |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:312:6
    |
312 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Weak<U>> for Weak<T> {}
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:312:29
    |
312 | impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Weak<U>> for Weak<T> {}
    |                             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:315:6
    |
315 | impl<T: ?Sized> fmt::Debug for Weak<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:836:6
    |
836 | impl<T: ?Sized> Arc<T> {
    |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1154:6
     |
1154 | impl<T: ?Sized> Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1337:6
     |
1337 | impl<T: ?Sized> Clone for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1386:6
     |
1386 | impl<T: ?Sized> Deref for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1396:6
     |
1396 | impl<T: ?Sized> Receiver for Arc<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1541:6
     |
1541 | impl<T: ?Sized> Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1679:27
     |
1679 | unsafe impl<#[may_dangle] T: ?Sized> Drop for Arc<T> {
     |                           ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1855:6
     |
1855 | impl<T: ?Sized> Weak<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1995:6
     |
1995 | impl<T: ?Sized> Weak<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2156:6
     |
2156 | impl<T: ?Sized> Clone for Weak<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2212:27
     |
2212 | unsafe impl<#[may_dangle] T: ?Sized> Drop for Weak<T> {
     |                           ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2294:6
     |
2294 | impl<T: ?Sized + PartialEq> PartialEq for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2340:6
     |
2340 | impl<T: ?Sized + PartialOrd> PartialOrd for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2428:6
     |
2428 | impl<T: ?Sized + Ord> Ord for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2448:6
     |
2448 | impl<T: ?Sized + Eq> Eq for Arc<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2451:6
     |
2451 | impl<T: ?Sized + fmt::Display> fmt::Display for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2458:6
     |
2458 | impl<T: ?Sized + fmt::Debug> fmt::Debug for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2465:6
     |
2465 | impl<T: ?Sized> fmt::Pointer for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2490:6
     |
2490 | impl<T: ?Sized + Hash> Hash for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2577:6
     |
2577 | impl<T: ?Sized> From<Box<T>> for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2619:10
     |
2619 | impl<'a, B> From<Cow<'a, B>> for Arc<B>
     |          ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2763:6
     |
2763 | impl<T: ?Sized> borrow::Borrow<T> for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2770:6
     |
2770 | impl<T: ?Sized> AsRef<T> for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2777:6
     |
2777 | impl<T: ?Sized> Unpin for Arc<T> {}
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2802:6
     |
2802 | impl<T: core::error::Error + ?Sized> core::error::Error for Arc<T> {
     |      ^

error[E0282]: type annotations needed
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/in_place_collect.rs:223:27
    |
223 |             debug_assert!(sink.dst as *const _ <= src_end, "InPlaceIterable contract violation");
    |                           ^^^^ cannot infer type

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs:340:37
    |
340 | pub(crate) const unsafe fn box_free<T: ?Sized, A: ~const Allocator + ~const Destruct>(
    |                                     ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1940:6
     |
1940 | impl<I: Iterator + ?Sized, A: Allocator> BoxIter for Box<I, A> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs:228:20
    |
228 |     unsafe fn drop<T: ?Sized>(&self, value: *mut T) {
    |                    ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/mod.rs:17:15
   |
17 | trait Recover<Q: ?Sized> {
   |               ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs:291:9
    |
291 | impl<K, Q: ?Sized, A: Allocator + Clone> super::Recover<Q> for BTreeMap<K, SetValZST, A>
    |         ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/navigate.rs:252:46
    |
252 |     unsafe fn find_leaf_edges_spanning_range<Q: ?Sized, R>(
    |                                              ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/navigate.rs:304:25
    |
304 |     pub fn range_search<Q, R>(self, range: R) -> LeafRange<marker::Immut<'a>, K, V>
    |                         ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/navigate.rs:330:25
    |
330 |     pub fn range_search<Q, R>(self, range: R) -> LeafRange<marker::ValMut<'a>, K, V>
    |                         ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rs:461:31
    |
461 |     unsafe fn key_area_mut<I, Output: ?Sized>(&mut self, index: I) -> &mut Output
    |                               ^^^^^^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rs:475:31
    |
475 |     unsafe fn val_area_mut<I, Output: ?Sized>(&mut self, index: I) -> &mut Output
    |                               ^^^^^^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rs:491:32
    |
491 |     unsafe fn edge_area_mut<I, Output: ?Sized>(&mut self, index: I) -> &mut Output
    |                                ^^^^^^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs:48:24
   |
48 |     pub fn search_tree<Q: ?Sized>(
   |                        ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs:82:44
   |
82 |     pub fn search_tree_for_bifurcation<'r, Q: ?Sized, R>(
   |                                            ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs:158:38
    |
158 |     pub fn find_lower_bound_edge<'r, Q>(
    |                                      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs:172:38
    |
172 |     pub fn find_upper_bound_edge<'r, Q>(
    |                                      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs:194:24
    |
194 |     pub fn search_node<Q: ?Sized>(self, key: &Q) -> SearchResult<BorrowType, K, V, Type, Type>
    |                        ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs:213:30
    |
213 |     unsafe fn find_key_index<Q: ?Sized>(&self, key: &Q, start_index: usize) -> IndexResult
    |                              ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs:236:35
    |
236 |     fn find_lower_bound_index<'r, Q>(
    |                                   ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs:263:42
    |
263 |     unsafe fn find_upper_bound_index<'r, Q>(
    |                                          ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/split.rs:32:22
   |
32 |     pub fn split_off<Q: ?Sized + Ord, A: Allocator + Clone>(&mut self, key: &Q, alloc: A) -> Self
   |                      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1652:17
     |
1652 | trait RcEqIdent<T: ?Sized + PartialEq> {
     |                 ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1658:6
     |
1658 | impl<T: ?Sized + PartialEq> RcEqIdent<T> for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:1684:6
     |
1684 | impl<T: ?Sized + MarkerEq> RcEqIdent<T> for Rc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2221:27
     |
2221 | pub(crate) fn is_dangling<T: ?Sized>(ptr: *mut T) -> bool {
     |                           ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2671:6
     |
2671 | impl<T: ?Sized> RcInnerPtr for RcBox<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/rc.rs:2718:23
     |
2718 | unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> usize {
     |                       ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/str.rs:129:22
    |
129 | fn join_generic_copy<B, T, S>(slice: &[S], sep: &[T]) -> Vec<T>
    |                      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:345:13
    |
345 | unsafe impl<T: ?Sized + Sync + Send> Send for ArcInner<T> {}
    |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:346:13
    |
346 | unsafe impl<T: ?Sized + Sync + Send> Sync for ArcInner<T> {}
    |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2256:18
     |
2256 | trait ArcEqIdent<T: ?Sized + PartialEq> {
     |                  ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2262:6
     |
2262 | impl<T: ?Sized + PartialEq> ArcEqIdent<T> for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2281:6
     |
2281 | impl<T: ?Sized + crate::rc::MarkerEq> ArcEqIdent<T> for Arc<T> {
     |      ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2785:23
     |
2785 | unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> usize {
     |                       ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/is_zero.rs:104:13
    |
104 | unsafe impl<T: ?Sized> IsZero for Option<&T> {
    |             ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/is_zero.rs:111:13
    |
111 | unsafe impl<T: ?Sized> IsZero for Option<Box<T>> {
    |             ^

error[E0119]: conflicting implementations of trait `boxed::BoxIter` for type `boxed::Box<_, _>`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1955:1
     |
1940 | impl<I: Iterator + ?Sized, A: Allocator> BoxIter for Box<I, A> {
     | -------------------------------------------------------------- first implementation here
...
1955 | impl<I: Iterator, A: Allocator> BoxIter for Box<I, A> {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `boxed::Box<_, _>`

Some errors have detailed explanations: E0119, E0152, E0282.
For more information about an error, try `rustc --explain E0119`.
warning: `alloc` (lib) generated 201 warnings
   Compiling rustc-std-workspace-alloc v1.99.0 (/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-alloc)
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustc_std_workspace_alloc CARGO_MANIFEST_DIR=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-alloc CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Hack for the compiler'\''s own build system
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustc-std-workspace-alloc CARGO_PKG_REPOSITORY='' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.99.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=99 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name rustc_std_workspace_alloc --edition=2021 /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-alloc/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=c7009d4820688a57 -C extra-filename=-c7009d4820688a57 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern alloc=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/liballoc-0bd2fecf25ba329c.rmeta --cap-lints warn`
Path /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-alloc/lib.rs
error: extern location for alloc does not exist: /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/liballoc-0bd2fecf25ba329c.rmeta
 --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-alloc/lib.rs:7:1
  |
7 | extern crate alloc as foo;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^

   Compiling libc v0.2.138
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138 CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Raw FFI bindings to platform libraries like libc.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/libc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libc CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libc' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.138 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=138 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name build_script_build /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="align"' --cfg 'feature="rustc-dep-of-std"' --cfg 'feature="rustc-std-workspace-core"' -C metadata=aff36da4b9ea64df -C extra-filename=-aff36da4b9ea64df --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/libc-aff36da4b9ea64df -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138/build.rs
     Running `/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/libc-aff36da4b9ea64df/build-script-build`
[libc 0.2.138] cargo:rerun-if-changed=build.rs
[libc 0.2.138] cargo:rustc-cfg=freebsd11
[libc 0.2.138] cargo:rustc-cfg=libc_priv_mod_use
[libc 0.2.138] cargo:rustc-cfg=libc_union
[libc 0.2.138] cargo:rustc-cfg=libc_const_size_of
[libc 0.2.138] cargo:rustc-cfg=libc_align
[libc 0.2.138] cargo:rustc-cfg=libc_int128
[libc 0.2.138] cargo:rustc-cfg=libc_core_cvoid
[libc 0.2.138] cargo:rustc-cfg=libc_packedN
[libc 0.2.138] cargo:rustc-cfg=libc_cfg_target_vendor
[libc 0.2.138] cargo:rustc-cfg=libc_non_exhaustive
[libc 0.2.138] cargo:rustc-cfg=libc_ptr_addr_of
[libc 0.2.138] cargo:rustc-cfg=libc_underscore_const_names
[libc 0.2.138] cargo:rustc-cfg=libc_thread_local
[libc 0.2.138] cargo:rustc-cfg=libc_const_extern_fn
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=libc CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138 CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Raw FFI bindings to platform libraries like libc.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/libc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libc CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libc' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.138 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=138 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/build/libc-f0db5ad63ee9c828/out RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name libc /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="align"' --cfg 'feature="rustc-dep-of-std"' --cfg 'feature="rustc-std-workspace-core"' -C metadata=cdcc6d4683405d01 -C extra-filename=-cdcc6d4683405d01 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern rustc_std_workspace_core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn --cfg freebsd11 --cfg libc_priv_mod_use --cfg libc_union --cfg libc_const_size_of --cfg libc_align --cfg libc_int128 --cfg libc_core_cvoid --cfg libc_packedN --cfg libc_cfg_target_vendor --cfg libc_non_exhaustive --cfg libc_ptr_addr_of --cfg libc_underscore_const_names --cfg libc_thread_local --cfg libc_const_extern_fn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138/src/lib.rs
error[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `alloc` depends on)
  = note: first definition in `core` loaded from /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-05898138a596088a.rlib
  = note: second definition in `core` loaded from /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcore-24c9f4c168d410c9.rmeta

error[E0034]: multiple applicable items in scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138/src/unix/linux_like/mod.rs:1511:14
     |
1511 |         cmsg.offset(1) as *mut ::c_uchar
     |              ^^^^^^ multiple `offset` found
     |
     = note: candidate #1 is defined in an impl for the type `*const T`
     = note: candidate #2 is defined in an impl for the type `*const T`

error[E0034]: multiple applicable items in scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138/src/unix/linux_like/linux/mod.rs:3601:18
     |
3601 |         if (next.offset(1)) as usize > max ||
     |                  ^^^^^^ multiple `offset` found
     |
     = note: candidate #1 is defined in an impl for the type `*mut T`
     = note: candidate #2 is defined in an impl for the type `*mut T`

error[E0034]: multiple applicable items in scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138/src/unix/linux_like/linux/mod.rs:3648:20
     |
3648 |             s += i.count_ones();
     |                    ^^^^^^^^^^ multiple `count_ones` found
     |
     = note: candidate #1 is defined in an impl for the type `u64`
     = note: candidate #2 is defined in an impl for the type `u64`

error[E0034]: multiple applicable items in scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.138/src/unix/linux_like/linux/mod.rs:3696:12
     |
3696 |         ee.offset(1) as *mut ::sockaddr
     |            ^^^^^^ multiple `offset` found
     |
     = note: candidate #1 is defined in an impl for the type `*const T`
     = note: candidate #2 is defined in an impl for the type `*const T`

Some errors have detailed explanations: E0034, E0152.
For more information about an error, try `rustc --explain E0034`.
   Compiling cfg-if v1.0.0
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=cfg_if CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-1.0.0 CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='A macro to ergonomically define an item depending on a large number of #[cfg]
parameters. Structured like an if-else chain, the first matching branch is the
item that gets emitted.
' CARGO_PKG_HOMEPAGE='https://github.com/alexcrichton/cfg-if' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=cfg-if CARGO_PKG_REPOSITORY='https://github.com/alexcrichton/cfg-if' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name cfg_if --edition=2018 /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-1.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="compiler_builtins"' --cfg 'feature="core"' --cfg 'feature="rustc-dep-of-std"' -C metadata=934634a21cbffb0a -C extra-filename=-934634a21cbffb0a --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-1.0.0/src/lib.rs
   Compiling cc v1.0.76
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=cc CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.76 CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='A build-time dependency for Cargo build scripts to assist in invoking the native
C compiler to compile native C code into a static archive to be linked into Rust
code.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/cc-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=cc CARGO_PKG_REPOSITORY='https://github.com/rust-lang/cc-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.76 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=76 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name cc --edition=2018 /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.76/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=e6a02df08ce2fd3e -C extra-filename=-e6a02df08ce2fd3e --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.76/src/lib.rs
   Compiling unwind v0.0.0 (/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind)
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=unwind CARGO_PKG_REPOSITORY='https://github.com/rust-lang/rust.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.0.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name build_script_build --edition=2021 /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C metadata=4948addcf327bdf8 -C extra-filename=-4948addcf327bdf8 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/unwind-4948addcf327bdf8 -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern cc=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps/libcc-e6a02df08ce2fd3e.rlib --cap-lints warn`
Path /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind/build.rs
   Compiling memchr v2.5.0
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0 CARGO_PKG_AUTHORS='Andrew Gallant <jamslam@gmail.com>:bluss' CARGO_PKG_DESCRIPTION='Safe interface to memchr.' CARGO_PKG_HOMEPAGE='https://github.com/BurntSushi/memchr' CARGO_PKG_LICENSE=Unlicense/MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=memchr CARGO_PKG_REPOSITORY='https://github.com/BurntSushi/memchr' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.5.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name build_script_build --edition=2018 /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="compiler_builtins"' --cfg 'feature="core"' --cfg 'feature="rustc-dep-of-std"' -C metadata=77aff840238afe33 -C extra-filename=-77aff840238afe33 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/memchr-77aff840238afe33 -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs
     Running `/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/memchr-77aff840238afe33/build-script-build`
[memchr 2.5.0] cargo:rustc-cfg=memchr_runtime_simd
[memchr 2.5.0] cargo:rustc-cfg=memchr_runtime_sse2
[memchr 2.5.0] cargo:rustc-cfg=memchr_runtime_sse42
[memchr 2.5.0] cargo:rustc-cfg=memchr_runtime_avx
     Running `/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/unwind-4948addcf327bdf8/build-script-build`
[unwind 0.0.0] cargo:rerun-if-changed=build.rs
[unwind 0.0.0] cargo:rerun-if-env-changed=CARGO_CFG_MIRI
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=unwind CARGO_MANIFEST_DIR=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=unwind CARGO_PKG_REPOSITORY='https://github.com/rust-lang/rust.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.0.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/build/unwind-8462d49650d892ac/out RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name unwind --edition=2021 /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=bcdb63c364704d13 -C extra-filename=-bcdb63c364704d13 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern cfg_if=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcfg_if-934634a21cbffb0a.rmeta --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcore-24c9f4c168d410c9.rmeta --extern libc=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/liblibc-cdcc6d4683405d01.rmeta --cap-lints warn`
Path /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind/src/lib.rs
error: extern location for cfg_if does not exist: /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcfg_if-934634a21cbffb0a.rmeta
 --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind/src/lib.rs:9:1
  |
9 | cfg_if::cfg_if! {
  | ^^^^^^

error: cannot determine resolution for the macro `cfg_if::cfg_if`
 --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind/src/lib.rs:9:1
  |
9 | cfg_if::cfg_if! {
  | ^^^^^^^^^^^^^^
  |
  = note: import resolution is stuck, try simplifying macro imports

     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=memchr CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0 CARGO_PKG_AUTHORS='Andrew Gallant <jamslam@gmail.com>:bluss' CARGO_PKG_DESCRIPTION='Safe interface to memchr.' CARGO_PKG_HOMEPAGE='https://github.com/BurntSushi/memchr' CARGO_PKG_LICENSE=Unlicense/MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=memchr CARGO_PKG_REPOSITORY='https://github.com/BurntSushi/memchr' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.5.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/build/memchr-d6fe9a40028a729f/out RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name memchr --edition=2018 /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="compiler_builtins"' --cfg 'feature="core"' --cfg 'feature="rustc-dep-of-std"' -C metadata=6700e12b9ac3d565 -C extra-filename=-6700e12b9ac3d565 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn --cfg memchr_runtime_simd --cfg memchr_runtime_sse2 --cfg memchr_runtime_sse42 --cfg memchr_runtime_avx`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs
warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:190:26
    |
190 | pub fn find_iter<'h, 'n, N: 'n + ?Sized + AsRef<[u8]>>(
    |                          ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:224:27
    |
224 | pub fn rfind_iter<'h, 'n, N: 'n + ?Sized + AsRef<[u8]>>(
    |                           ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:456:16
    |
456 |     pub fn new<B: ?Sized + AsRef<[u8]>>(needle: &'n B) -> Finder<'n> {
    |                ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:583:16
    |
583 |     pub fn new<B: ?Sized + AsRef<[u8]>>(needle: &'n B) -> FinderRev<'n> {
    |                ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:711:30
    |
711 |     pub fn build_forward<'n, B: ?Sized + AsRef<[u8]>>(
    |                              ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:720:30
    |
720 |     pub fn build_reverse<'n, B: ?Sized + AsRef<[u8]>>(
    |                              ^

warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/cow.rs:38:16
   |
38 |     pub fn new<B: ?Sized + AsRef<[u8]>>(bytes: &'a B) -> CowBytes<'a> {
   |                ^

error[E0277]: the size for values of type `cow::CowBytes<'a>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/cow.rs:9:10
    |
9   | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `cow::CowBytes<'a>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `cow::Imp<'a>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/cow.rs:23:10
    |
23  | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `cow::Imp<'a>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/cow.rs:9:17
    |
9   | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/cow.rs:9:17
    |
9   | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/cow.rs:23:17
    |
23  | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/cow.rs:23:17
    |
23  | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memchr::iter::Memchr<'_>` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:40:53
   |
40 | pub fn memrchr_iter(needle: u8, haystack: &[u8]) -> Rev<Memchr<'_>> {
   |                                                     ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memchr::iter::Memchr<'_>`
note: required by a bound in `rustc_std_workspace_core::iter::Rev`
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/rev.rs:14:16
   |
14 | pub struct Rev<T> {
   |                ^ required by this bound in `Rev`

error[E0277]: the size for values of type `memchr::iter::Memchr2<'_>` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:50:6
   |
50 | ) -> Rev<Memchr2<'_>> {
   |      ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memchr::iter::Memchr2<'_>`
note: required by a bound in `rustc_std_workspace_core::iter::Rev`
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/rev.rs:14:16
   |
14 | pub struct Rev<T> {
   |                ^ required by this bound in `Rev`

error[E0277]: the size for values of type `memchr::iter::Memchr3<'_>` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:61:6
   |
61 | ) -> Rev<Memchr3<'_>> {
   |      ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memchr::iter::Memchr3<'_>`
note: required by a bound in `rustc_std_workspace_core::iter::Rev`
  --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/rev.rs:14:16
   |
14 | pub struct Rev<T> {
   |                ^ required by this bound in `Rev`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:87:47
    |
87  | pub fn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {
    |                                               ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:96:40
    |
96  |     fn imp(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:151:62
    |
151 | pub fn memchr2(needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:160:48
    |
160 |     fn imp(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:209:6
    |
209 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:218:56
    |
218 |     fn imp(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
    |                                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:260:48
    |
260 | pub fn memrchr(needle: u8, haystack: &[u8]) -> Option<usize> {
    |                                                ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:269:40
    |
269 |     fn imp(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:325:63
    |
325 | pub fn memrchr2(needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                               ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:334:48
    |
334 |     fn imp(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:383:6
    |
383 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/mod.rs:392:56
    |
392 |     fn imp(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
    |                                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:46:43
    |
46  | pub fn memchr(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:85:52
    |
85  | pub fn memchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:125:60
    |
125 | pub fn memchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
    |                                                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:168:44
    |
168 | pub fn memrchr(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:206:53
    |
206 | pub fn memrchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:245:61
    |
245 | pub fn memrchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
    |                                                             ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `(u8,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:287:29
    |
287 | unsafe fn forward_search<F: Fn(u8) -> bool>(
    |                             ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(u8,)`
note: required by a bound in `rustc_std_workspace_core::ops::Fn`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:76:14
    |
76  | pub trait Fn<Args: Tuple>: FnMut<Args> {
    |              ^^^^ required by this bound in `Fn`

error[E0277]: `(u8,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:287:29
    |
287 | unsafe fn forward_search<F: Fn(u8) -> bool>(
    |                             ^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(u8,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::Fn`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:76:20
    |
76  | pub trait Fn<Args: Tuple>: FnMut<Args> {
    |                    ^^^^^ required by this bound in `Fn`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:292:6
    |
292 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `(u8,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:306:29
    |
306 | unsafe fn reverse_search<F: Fn(u8) -> bool>(
    |                             ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(u8,)`
note: required by a bound in `rustc_std_workspace_core::ops::Fn`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:76:14
    |
76  | pub trait Fn<Args: Tuple>: FnMut<Args> {
    |              ^^^^ required by this bound in `Fn`

error[E0277]: `(u8,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:306:29
    |
306 | unsafe fn reverse_search<F: Fn(u8) -> bool>(
    |                             ^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(u8,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::Fn`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:76:20
    |
76  | pub trait Fn<Args: Tuple>: FnMut<Args> {
    |                    ^^^^^ required by this bound in `Fn`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/fallback.rs:311:6
    |
311 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:54:27
    |
54  |     fn next(&mut self) -> Option<usize> {
    |                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:59:36
    |
59  |     fn size_hint(&self) -> (usize, Option<usize>) {
    |                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:66:32
    |
66  |     fn next_back(&mut self) -> Option<Self::Item> {
    |                                ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:98:27
    |
98  |     fn next(&mut self) -> Option<usize> {
    |                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:103:36
    |
103 |     fn size_hint(&self) -> (usize, Option<usize>) {
    |                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:110:32
    |
110 |     fn next_back(&mut self) -> Option<Self::Item> {
    |                                ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:152:27
    |
152 |     fn next(&mut self) -> Option<usize> {
    |                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:160:36
    |
160 |     fn size_hint(&self) -> (usize, Option<usize>) {
    |                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/iter.rs:167:32
    |
167 |     fn next_back(&mut self) -> Option<Self::Item> {
    |                                ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/naive.rs:3:43
    |
3   | pub fn memchr(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/naive.rs:7:52
    |
7   | pub fn memchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/naive.rs:11:60
    |
11  | pub fn memchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
    |                                                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/naive.rs:15:44
    |
15  | pub fn memrchr(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/naive.rs:19:53
    |
19  | pub fn memrchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/naive.rs:23:61
    |
23  | pub fn memrchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
    |                                                             ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/mod.rs:95:43
    |
95  | pub fn memchr(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/mod.rs:100:52
    |
100 | pub fn memchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/mod.rs:111:60
    |
111 | pub fn memchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
    |                                                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/mod.rs:123:44
    |
123 | pub fn memrchr(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/mod.rs:128:53
    |
128 | pub fn memrchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/mod.rs:139:61
    |
139 | pub fn memrchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
    |                                                             ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:16:50
    |
16  | pub unsafe fn memchr(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                                  ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:190:59
    |
190 | pub unsafe fn memchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:264:6
    |
264 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:342:51
    |
342 | pub unsafe fn memrchr(n1: u8, haystack: &[u8]) -> Option<usize> {
    |                                                   ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:421:60
    |
421 | pub unsafe fn memrchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
    |                                                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:493:6
    |
493 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:574:6
    |
574 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:595:6
    |
595 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:620:6
    |
620 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:646:6
    |
646 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:667:6
    |
667 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memchr/x86/sse2.rs:692:6
    |
692 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:259:48
    |
259 | pub fn find(haystack: &[u8], needle: &[u8]) -> Option<usize> {
    |                                                ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:296:49
    |
296 | pub fn rfind(haystack: &[u8], needle: &[u8]) -> Option<usize> {
    |                                                 ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:381:10
    |
381 |     pos: Option<usize>,
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `memmem::Finder<'n>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:448:10
    |
448 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::Finder<'n>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::FinderRev<'n>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:575:10
    |
575 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::FinderRev<'n>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::FinderBuilder` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:698:10
    |
698 | #[derive(Clone, Debug, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::FinderBuilder`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::FinderBuilder` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:698:24
    |
698 | #[derive(Clone, Debug, Default)]
    |                        ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::FinderBuilder`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::prefilter::PrefilterFn` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:757:12
    |
757 |     prefn: Option<PrefilterFn>,
    |            ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::prefilter::PrefilterFn`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `memmem::Searcher<'n>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:743:10
    |
743 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::Searcher<'n>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::NeedleInfo` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:766:10
    |
766 | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::NeedleInfo`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::NeedleInfo` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:766:17
    |
766 | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::NeedleInfo`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::NeedleInfo`
    = note: required for `memmem::NeedleInfo` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::SearcherConfig` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:792:10
    |
792 | #[derive(Clone, Copy, Debug, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::SearcherConfig`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::SearcherConfig` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:792:17
    |
792 | #[derive(Clone, Copy, Debug, Default)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::SearcherConfig`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::SearcherConfig`
    = note: required for `memmem::SearcherConfig` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::SearcherConfig` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:792:30
    |
792 | #[derive(Clone, Copy, Debug, Default)]
    |                              ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::SearcherConfig`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::SearcherKind` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:799:10
    |
799 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::SearcherKind`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::SearcherRev<'n>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:1028:10
     |
1028 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::SearcherRev<'n>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::SearcherRevKind` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:1038:10
     |
1038 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::SearcherRevKind`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:310:10
    |
310 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:310:10
    |
310 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:350:27
    |
350 |     fn next(&mut self) -> Option<usize> {
    |                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:375:10
    |
375 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:375:10
    |
375 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:415:27
    |
415 |     fn next(&mut self) -> Option<usize> {
    |                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:448:17
    |
448 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:448:17
    |
448 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:484:44
    |
484 |     pub fn find(&self, haystack: &[u8]) -> Option<usize> {
    |                                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:575:17
    |
575 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:575:17
    |
575 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:614:57
    |
614 |     pub fn rfind<B: AsRef<[u8]>>(&self, haystack: B) -> Option<usize> {
    |                                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:698:17
    |
698 | #[derive(Clone, Debug, Default)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:698:17
    |
698 | #[derive(Clone, Debug, Default)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:743:17
    |
743 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:743:17
    |
743 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:766:23
    |
766 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:766:23
    |
766 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:792:23
    |
792 | #[derive(Clone, Copy, Debug, Default)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:792:23
    |
792 | #[derive(Clone, Copy, Debug, Default)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:799:17
    |
799 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:799:17
    |
799 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:934:10
    |
934 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:996:10
    |
996 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:1028:17
     |
1028 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:1028:17
     |
1028 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:1038:17
     |
1038 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:1038:17
     |
1038 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/mod.rs:1109:41
     |
1109 |     fn rfind(&self, haystack: &[u8]) -> Option<usize> {
     |                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `memmem::genericsimd::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/genericsimd.rs:55:10
    |
55  | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::genericsimd::Forward`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::genericsimd::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/genericsimd.rs:55:17
    |
55  | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::genericsimd::Forward`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::genericsimd::Forward`
    = note: required for `memmem::genericsimd::Forward` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/genericsimd.rs:107:6
    |
107 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/genericsimd.rs:225:6
    |
225 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/genericsimd.rs:55:23
    |
55  | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/genericsimd.rs:55:23
    |
55  | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::genericsimd::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/genericsimd.rs:64:61
    |
64  |     pub(crate) fn new(ninfo: &NeedleInfo, needle: &[u8]) -> Option<Forward> {
    |                                                             ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::genericsimd::Forward`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:74:31
    |
74  | pub(crate) struct PrefilterFn(PrefilterFnTy);
    |                               ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `memmem::prefilter::PrefilterFn` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:73:10
    |
73  | #[derive(Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::prefilter::PrefilterFn`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::prefilter::PrefilterFn` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:73:17
    |
73  | #[derive(Clone, Copy)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::prefilter::PrefilterFn`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::prefilter::PrefilterFn`
    = note: required for `memmem::prefilter::PrefilterFn` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:105:6
    |
105 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `memmem::prefilter::Prefilter` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:168:10
    |
168 | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::prefilter::Prefilter`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::prefilter::Prefilter` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:168:17
    |
168 | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::prefilter::Prefilter`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::prefilter::Prefilter`
    = note: required for `memmem::prefilter::Prefilter` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::prefilter::Prefilter` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:179:18
    |
179 | impl Default for Prefilter {
    |                  ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::prefilter::Prefilter`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `memmem::prefilter::PrefilterState` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:203:10
    |
203 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::prefilter::PrefilterState`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::prefilter::PrefilterFn` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:294:6
    |
294 | ) -> Option<PrefilterFn> {
    |      ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::prefilter::PrefilterFn`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:38:10
    |
38  |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:119:37
    |
119 |     pub(crate) unsafe fn new(prefn: PrefilterFnTy) -> PrefilterFn {
    |                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:130:10
    |
130 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:138:52
    |
138 |     fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {
    |                                                    ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:138:52
    |
138 |     fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {
    |                                                    ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:168:23
    |
168 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:168:23
    |
168 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:203:17
    |
203 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/mod.rs:203:17
    |
203 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/fallback.rs:37:10
    |
37  | const _: PrefilterFnTy = find;
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/fallback.rs:54:6
    |
54  | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/genericsimd.rs:49:15
    |
49  |     fallback: PrefilterFnTy,
    |               ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/genericsimd.rs:126:6
    |
126 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/genericsimd.rs:160:6
    |
160 | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/x86/sse.rs:9:10
    |
9   | const _: PrefilterFnTy = find;
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/prefilter/x86/sse.rs:23:6
    |
23  | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:40:55
    |
40  | pub(crate) fn find(haystack: &[u8], needle: &[u8]) -> Option<usize> {
    |                                                       ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:50:6
    |
50  | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:71:56
    |
71  | pub(crate) fn rfind(haystack: &[u8], needle: &[u8]) -> Option<usize> {
    |                                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:81:6
    |
81  | ) -> Option<usize> {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `memmem::rabinkarp::NeedleHash` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:104:10
    |
104 | #[derive(Clone, Copy, Debug, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rabinkarp::NeedleHash`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::rabinkarp::NeedleHash` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:104:17
    |
104 | #[derive(Clone, Copy, Debug, Default)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rabinkarp::NeedleHash`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::rabinkarp::NeedleHash`
    = note: required for `memmem::rabinkarp::NeedleHash` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::rabinkarp::NeedleHash` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:104:30
    |
104 | #[derive(Clone, Copy, Debug, Default)]
    |                              ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rabinkarp::NeedleHash`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::rabinkarp::Hash` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:154:10
    |
154 | #[derive(Clone, Copy, Debug, Default, Eq, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rabinkarp::Hash`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::rabinkarp::Hash` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:154:17
    |
154 | #[derive(Clone, Copy, Debug, Default, Eq, PartialEq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rabinkarp::Hash`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::rabinkarp::Hash`
    = note: required for `memmem::rabinkarp::Hash` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::rabinkarp::Hash` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:154:30
    |
154 | #[derive(Clone, Copy, Debug, Default, Eq, PartialEq)]
    |                              ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rabinkarp::Hash`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:104:23
    |
104 | #[derive(Clone, Copy, Debug, Default)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:104:23
    |
104 | #[derive(Clone, Copy, Debug, Default)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:154:23
    |
154 | #[derive(Clone, Copy, Debug, Default, Eq, PartialEq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rabinkarp.rs:154:23
    |
154 | #[derive(Clone, Copy, Debug, Default, Eq, PartialEq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::rarebytes::RareNeedleBytes` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rarebytes.rs:14:10
    |
14  | #[derive(Clone, Copy, Debug, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rarebytes::RareNeedleBytes`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::rarebytes::RareNeedleBytes` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rarebytes.rs:14:17
    |
14  | #[derive(Clone, Copy, Debug, Default)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rarebytes::RareNeedleBytes`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::rarebytes::RareNeedleBytes`
    = note: required for `memmem::rarebytes::RareNeedleBytes` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::rarebytes::RareNeedleBytes` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rarebytes.rs:14:30
    |
14  | #[derive(Clone, Copy, Debug, Default)]
    |                              ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::rarebytes::RareNeedleBytes`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rarebytes.rs:14:23
    |
14  | #[derive(Clone, Copy, Debug, Default)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/rarebytes.rs:14:23
    |
14  | #[derive(Clone, Copy, Debug, Default)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:6:10
    |
6   | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::Forward`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:6:17
    |
6   | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::Forward`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::twoway::Forward`
    = note: required for `memmem::twoway::Forward` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::Reverse` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:10:10
    |
10  | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::Reverse`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::Reverse` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:10:17
    |
10  | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::Reverse`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::twoway::Reverse`
    = note: required for `memmem::twoway::Reverse` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::TwoWay` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:48:10
    |
48  | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::TwoWay`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::TwoWay` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:48:17
    |
48  | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::TwoWay`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::twoway::TwoWay`
    = note: required for `memmem::twoway::TwoWay` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::Shift` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:423:10
    |
423 | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::Shift`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::Shift` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:423:17
    |
423 | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::Shift`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::twoway::Shift`
    = note: required for `memmem::twoway::Shift` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::SuffixKind` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:586:10
    |
586 | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::SuffixKind`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::SuffixKind` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:586:17
    |
586 | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::SuffixKind`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::twoway::SuffixKind`
    = note: required for `memmem::twoway::SuffixKind` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::SuffixOrdering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:605:10
    |
605 | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::SuffixOrdering`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::SuffixOrdering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:605:17
    |
605 | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::SuffixOrdering`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::twoway::SuffixOrdering`
    = note: required for `memmem::twoway::SuffixOrdering` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::ApproximateByteSet` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:647:10
    |
647 | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::ApproximateByteSet`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::twoway::ApproximateByteSet` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:647:17
    |
647 | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::twoway::ApproximateByteSet`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::twoway::ApproximateByteSet`
    = note: required for `memmem::twoway::ApproximateByteSet` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:6:23
    |
6   | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:6:23
    |
6   | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:10:23
    |
10  | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:10:23
    |
10  | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:48:23
    |
48  | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:48:23
    |
48  | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&mut memmem::prefilter::Pre<'_>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:109:14
    |
109 |         pre: Option<&mut Pre<'_>>,
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&mut memmem::prefilter::Pre<'_>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:112:10
    |
112 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&mut memmem::prefilter::Pre<'_>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:154:18
    |
154 |         mut pre: Option<&mut Pre<'_>>,
    |                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&mut memmem::prefilter::Pre<'_>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:158:10
    |
158 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&mut memmem::prefilter::Pre<'_>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:203:18
    |
203 |         mut pre: Option<&mut Pre<'_>>,
    |                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&mut memmem::prefilter::Pre<'_>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:207:10
    |
207 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:279:10
    |
279 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:316:10
    |
316 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:354:10
    |
354 |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:423:23
    |
423 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:423:23
    |
423 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:478:10
    |
478 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:478:10
    |
478 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:586:23
    |
586 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:586:23
    |
586 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:605:23
    |
605 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:605:23
    |
605 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:647:23
    |
647 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/twoway.rs:647:23
    |
647 | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::arch::x86_64::__m128i` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/vector.rs:39:21
   |
39 |     impl Vector for __m128i {
   |                     ^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::arch::x86_64::__m128i`
   = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `rustc_std_workspace_core::arch::x86_64::__m128i`
   = note: required for `rustc_std_workspace_core::arch::x86_64::__m128i` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `rustc_std_workspace_core::arch::x86_64::__m128i` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `memmem::vector::Vector`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/vector.rs:21:26
   |
21 | pub(crate) trait Vector: Copy + core::fmt::Debug {
   |                          ^^^^ required by this bound in `Vector`

error[E0277]: the size for values of type `memmem::x86::avx::nostd::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/avx.rs:78:14
    |
78  |     #[derive(Clone, Copy, Debug)]
    |              ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::x86::avx::nostd::Forward`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::x86::avx::nostd::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/avx.rs:78:21
    |
78  |     #[derive(Clone, Copy, Debug)]
    |                     ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::x86::avx::nostd::Forward`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::x86::avx::nostd::Forward`
    = note: required for `memmem::x86::avx::nostd::Forward` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/avx.rs:78:27
    |
78  |     #[derive(Clone, Copy, Debug)]
    |                           ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/avx.rs:78:27
    |
78  |     #[derive(Clone, Copy, Debug)]
    |                           ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::x86::avx::nostd::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/avx.rs:85:14
    |
85  |         ) -> Option<Forward> {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::x86::avx::nostd::Forward`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/avx.rs:97:14
    |
97  |         ) -> Option<usize> {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `memmem::x86::sse::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/sse.rs:7:10
    |
7   | #[derive(Clone, Copy, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::x86::sse::Forward`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::x86::sse::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/sse.rs:7:17
    |
7   | #[derive(Clone, Copy, Debug)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::x86::sse::Forward`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `memmem::x86::sse::Forward`
    = note: required for `memmem::x86::sse::Forward` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/sse.rs:7:23
    |
7   | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/sse.rs:7:23
    |
7   | #[derive(Clone, Copy, Debug)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `memmem::x86::sse::Forward` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/sse.rs:13:61
    |
13  |     pub(crate) fn new(ninfo: &NeedleInfo, needle: &[u8]) -> Option<Forward> {
    |                                                             ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `memmem::x86::sse::Forward`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/sse.rs:33:10
    |
33  |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/memmem/x86/sse.rs:51:10
    |
51  |     ) -> Option<usize> {
    |          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

warning: `memchr` (lib) generated 7 warnings
   Compiling gimli v0.26.2
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=gimli CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2 CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A library for reading and writing the DWARF debugging format.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=gimli CARGO_PKG_REPOSITORY='https://github.com/gimli-rs/gimli' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.26.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=26 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name gimli --edition=2018 /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="alloc"' --cfg 'feature="compiler_builtins"' --cfg 'feature="core"' --cfg 'feature="read"' --cfg 'feature="read-core"' --cfg 'feature="rustc-dep-of-std"' -C metadata=0da8bfc6daf04f14 -C extra-filename=-0da8bfc6daf04f14 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern alloc=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_alloc-c7009d4820688a57.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/lib.rs
error: extern location for alloc does not exist: /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_alloc-c7009d4820688a57.rmeta
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/lib.rs:42:1
   |
42 | extern crate alloc;
   | ^^^^^^^^^^^^^^^^^^^

error: cannot find macro `format` in this scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
     |
86   |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
     |                                  ^^^^^^
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:553:28
    |
553 |                     return format!(
    |                            ^^^^^^

error: cannot find macro `format` in this scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
     |
86   |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
     |                                  ^^^^^^
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
     |
86   |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
     |                                  ^^^^^^
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
     |
86   |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
     |                                  ^^^^^^
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
     |
86   |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
     |                                  ^^^^^^
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
     |
86   |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
     |                                  ^^^^^^
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
     |
86   |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
     |                                  ^^^^^^
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
     |
86   |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
     |                                  ^^^^^^
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot find macro `format` in this scope
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:86:32
    |
86  |                           f.pad(&format!("Unknown {}: {}", stringify!($struct_name), self.0))
    |                                  ^^^^^^
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Format` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:2:17
    |
2   | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Format`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Format` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:2:24
    |
2   | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Format`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::Format`
    = note: required for `common::Format` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Encoding` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:33:17
    |
33  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Encoding`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Encoding` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:33:24
    |
33  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Encoding`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::Encoding`
    = note: required for `common::Encoding` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::LineEncoding` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:51:17
    |
51  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::LineEncoding`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::LineEncoding` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:51:24
    |
51  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::LineEncoding`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::LineEncoding`
    = note: required for `common::LineEncoding` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::LineEncoding` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:70:18
    |
70  | impl Default for LineEncoding {
    |                  ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::LineEncoding`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `common::Register` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:87:17
    |
87  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Register`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Register` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:87:24
    |
87  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Register`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::Register`
    = note: required for `common::Register` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugAbbrevOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:91:17
    |
91  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugAbbrevOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugAbbrevOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:91:24
    |
91  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugAbbrevOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugAbbrevOffset<T>`
    = note: required for `common::DebugAbbrevOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugAddrBase<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:95:17
    |
95  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugAddrBase<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugAddrBase<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:95:24
    |
95  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugAddrBase<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugAddrBase<T>`
    = note: required for `common::DebugAddrBase<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugAddrIndex<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:99:17
    |
99  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugAddrIndex<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugAddrIndex<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:99:24
    |
99  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugAddrIndex<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugAddrIndex<T>`
    = note: required for `common::DebugAddrIndex<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugArangesOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:103:17
    |
103 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugArangesOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugArangesOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:103:24
    |
103 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugArangesOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugArangesOffset<T>`
    = note: required for `common::DebugArangesOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugInfoOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:107:17
    |
107 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugInfoOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugInfoOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:107:24
    |
107 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugInfoOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugInfoOffset<T>`
    = note: required for `common::DebugInfoOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugLineOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:111:17
    |
111 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugLineOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugLineOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:111:24
    |
111 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugLineOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugLineOffset<T>`
    = note: required for `common::DebugLineOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugLineStrOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:115:17
    |
115 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugLineStrOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugLineStrOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:115:24
    |
115 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugLineStrOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugLineStrOffset<T>`
    = note: required for `common::DebugLineStrOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::LocationListsOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:120:17
    |
120 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::LocationListsOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::LocationListsOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:120:24
    |
120 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::LocationListsOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::LocationListsOffset<T>`
    = note: required for `common::LocationListsOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugLocListsBase<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:124:17
    |
124 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugLocListsBase<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugLocListsBase<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:124:24
    |
124 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugLocListsBase<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugLocListsBase<T>`
    = note: required for `common::DebugLocListsBase<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugLocListsIndex<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:128:17
    |
128 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugLocListsIndex<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugLocListsIndex<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:128:24
    |
128 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugLocListsIndex<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugLocListsIndex<T>`
    = note: required for `common::DebugLocListsIndex<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugMacinfoOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:132:17
    |
132 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugMacinfoOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugMacinfoOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:132:24
    |
132 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugMacinfoOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugMacinfoOffset<T>`
    = note: required for `common::DebugMacinfoOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugMacroOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:136:17
    |
136 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugMacroOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugMacroOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:136:24
    |
136 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugMacroOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugMacroOffset<T>`
    = note: required for `common::DebugMacroOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::RawRangeListsOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:144:17
    |
144 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::RawRangeListsOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::RawRangeListsOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:144:24
    |
144 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::RawRangeListsOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::RawRangeListsOffset<T>`
    = note: required for `common::RawRangeListsOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::RangeListsOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:149:17
    |
149 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::RangeListsOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::RangeListsOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:149:24
    |
149 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::RangeListsOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::RangeListsOffset<T>`
    = note: required for `common::RangeListsOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugRngListsBase<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:153:17
    |
153 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugRngListsBase<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugRngListsBase<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:153:24
    |
153 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugRngListsBase<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugRngListsBase<T>`
    = note: required for `common::DebugRngListsBase<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugRngListsIndex<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:157:17
    |
157 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugRngListsIndex<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugRngListsIndex<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:157:24
    |
157 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugRngListsIndex<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugRngListsIndex<T>`
    = note: required for `common::DebugRngListsIndex<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugStrOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:161:17
    |
161 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugStrOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugStrOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:161:24
    |
161 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugStrOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugStrOffset<T>`
    = note: required for `common::DebugStrOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugStrOffsetsBase<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:165:17
    |
165 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugStrOffsetsBase<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugStrOffsetsBase<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:165:24
    |
165 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugStrOffsetsBase<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugStrOffsetsBase<T>`
    = note: required for `common::DebugStrOffsetsBase<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugStrOffsetsIndex<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:169:17
    |
169 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugStrOffsetsIndex<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugStrOffsetsIndex<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:169:24
    |
169 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugStrOffsetsIndex<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugStrOffsetsIndex<T>`
    = note: required for `common::DebugStrOffsetsIndex<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugTypesOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:173:17
    |
173 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugTypesOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugTypesOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:173:24
    |
173 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugTypesOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugTypesOffset<T>`
    = note: required for `common::DebugTypesOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugTypeSignature` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:177:17
    |
177 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugTypeSignature`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugTypeSignature` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:177:24
    |
177 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugTypeSignature`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugTypeSignature`
    = note: required for `common::DebugTypeSignature` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugFrameOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:181:17
    |
181 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugFrameOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugFrameOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:181:24
    |
181 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugFrameOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DebugFrameOffset<T>`
    = note: required for `common::DebugFrameOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:184:9
    |
184 | impl<T> From<T> for DebugFrameOffset<T> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `T`
    |
184 | impl<T: rustc_std_workspace_core::marker::Sized> From<T> for DebugFrameOffset<T> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `common::DebugFrameOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:184:21
    |
184 | impl<T> From<T> for DebugFrameOffset<T> {
    |                     ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugFrameOffset<T>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `common::EhFrameOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:192:17
    |
192 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::EhFrameOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::EhFrameOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:192:24
    |
192 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::EhFrameOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::EhFrameOffset<T>`
    = note: required for `common::EhFrameOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:195:9
    |
195 | impl<T> From<T> for EhFrameOffset<T> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `T`
    |
195 | impl<T: rustc_std_workspace_core::marker::Sized> From<T> for EhFrameOffset<T> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `common::EhFrameOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:195:21
    |
195 | impl<T> From<T> for EhFrameOffset<T> {
    |                     ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::EhFrameOffset<T>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `common::UnitSectionOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:203:17
    |
203 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::UnitSectionOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::UnitSectionOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:203:24
    |
203 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::UnitSectionOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::UnitSectionOffset<T>`
    = note: required for `common::UnitSectionOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugInfoOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:211:9
    |
211 | impl<T> From<DebugInfoOffset<T>> for UnitSectionOffset<T> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugInfoOffset<T>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`

error[E0277]: the size for values of type `common::UnitSectionOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:211:38
    |
211 | impl<T> From<DebugInfoOffset<T>> for UnitSectionOffset<T> {
    |                                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::UnitSectionOffset<T>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `common::DebugTypesOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:217:9
    |
217 | impl<T> From<DebugTypesOffset<T>> for UnitSectionOffset<T> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugTypesOffset<T>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`

error[E0277]: the size for values of type `common::UnitSectionOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:217:39
    |
217 | impl<T> From<DebugTypesOffset<T>> for UnitSectionOffset<T> {
    |                                       ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::UnitSectionOffset<T>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `common::SectionId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:244:17
    |
244 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::SectionId`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::SectionId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:244:24
    |
244 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::SectionId`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::SectionId`
    = note: required for `common::SectionId` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DwoId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:345:17
    |
345 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DwoId`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DwoId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:345:24
    |
345 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DwoId`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DwoId`
    = note: required for `common::DwoId` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DwarfFileType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:350:17
    |
350 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DwarfFileType`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DwarfFileType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:350:24
    |
350 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DwarfFileType`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `common::DwarfFileType`
    = note: required for `common::DwarfFileType` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DwarfFileType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:359:18
    |
359 | impl Default for DwarfFileType {
    |                  ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DwarfFileType`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:2:10
    |
2   | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:2:10
    |
2   | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:33:10
    |
33  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:33:10
    |
33  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:51:10
    |
51  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:51:10
    |
51  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:87:10
    |
87  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:87:10
    |
87  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:87:51
    |
87  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                   ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:91:10
    |
91  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:91:10
    |
91  | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:95:10
    |
95  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:95:10
    |
95  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:99:10
    |
99  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:99:10
    |
99  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:103:10
    |
103 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:103:10
    |
103 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:107:10
    |
107 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:107:10
    |
107 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:107:50
    |
107 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:111:10
    |
111 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:111:10
    |
111 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:115:10
    |
115 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:115:10
    |
115 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:120:10
    |
120 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:120:10
    |
120 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:124:10
    |
124 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:124:10
    |
124 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:128:10
    |
128 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:128:10
    |
128 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:132:10
    |
132 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:132:10
    |
132 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:136:10
    |
136 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:136:10
    |
136 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:144:10
    |
144 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:144:10
    |
144 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:149:10
    |
149 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:149:10
    |
149 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:153:10
    |
153 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:153:10
    |
153 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:157:10
    |
157 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:157:10
    |
157 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:161:10
    |
161 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:161:10
    |
161 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:165:10
    |
165 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:165:10
    |
165 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:169:10
    |
169 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:169:10
    |
169 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:173:10
    |
173 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:173:10
    |
173 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:173:50
    |
173 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:177:10
    |
177 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:177:10
    |
177 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:181:10
    |
181 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:181:10
    |
181 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:192:10
    |
192 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:192:10
    |
192 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:203:10
    |
203 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:203:10
    |
203 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:203:50
    |
203 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugInfoOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:228:43
    |
228 |     pub fn as_debug_info_offset(&self) -> Option<DebugInfoOffset<T>> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugInfoOffset<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `common::DebugTypesOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:235:44
    |
235 |     pub fn as_debug_types_offset(&self) -> Option<DebugTypesOffset<T>> {
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugTypesOffset<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:244:10
    |
244 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:244:10
    |
244 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:244:50
    |
244 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:322:30
    |
322 |     pub fn dwo_name(self) -> Option<&'static str> {
    |                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:345:10
    |
345 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:345:10
    |
345 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:350:10
    |
350 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/common.rs:350:10
    |
350 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::Arm` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:48:17
    |
48  | #[derive(Debug, Clone, Copy)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::Arm`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::Arm` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:48:24
    |
48  | #[derive(Debug, Clone, Copy)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::Arm`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `arch::Arm`
    = note: required for `arch::Arm` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::AArch64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:223:17
    |
223 | #[derive(Debug, Clone, Copy)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::AArch64`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::AArch64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:223:24
    |
223 | #[derive(Debug, Clone, Copy)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::AArch64`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `arch::AArch64`
    = note: required for `arch::AArch64` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::RiscV` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:297:17
    |
297 | #[derive(Debug, Clone, Copy)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::RiscV`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::RiscV` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:297:24
    |
297 | #[derive(Debug, Clone, Copy)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::RiscV`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `arch::RiscV`
    = note: required for `arch::RiscV` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::X86` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:438:17
    |
438 | #[derive(Debug, Clone, Copy)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::X86`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::X86` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:438:24
    |
438 | #[derive(Debug, Clone, Copy)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::X86`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `arch::X86`
    = note: required for `arch::X86` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::X86_64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:500:17
    |
500 | #[derive(Debug, Clone, Copy)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::X86_64`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `arch::X86_64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:500:24
    |
500 | #[derive(Debug, Clone, Copy)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `arch::X86_64`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `arch::X86_64`
    = note: required for `arch::X86_64` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:48:10
    |
48  | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:48:10
    |
48  | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:20:57
    |
20  |               pub fn register_name(register: Register) -> Option<&'static str> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
51  | / registers!(Arm, {
52  | |     R0 = (0, "R0"),
53  | |     R1 = (1, "R1"),
54  | |     R2 = (2, "R2"),
...   |
217 | |     S31 = (271, "S31"),
218 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Register` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:30:46
    |
30  |           pub fn name_to_register(value: &str) -> Option<Register> {
    |                                                   ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
51  | / registers!(Arm, {
52  | |     R0 = (0, "R0"),
53  | |     R1 = (1, "R1"),
54  | |     R2 = (2, "R2"),
...   |
217 | |     S31 = (271, "S31"),
218 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Register`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:223:10
    |
223 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:223:10
    |
223 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:20:57
    |
20  |               pub fn register_name(register: Register) -> Option<&'static str> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
226 | / registers!(AArch64, {
227 | |     X0 = (0, "X0"),
228 | |     X1 = (1, "X1"),
229 | |     X2 = (2, "X2"),
...   |
291 | |     V31 = (95, "V31"),
292 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Register` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:30:46
    |
30  |           pub fn name_to_register(value: &str) -> Option<Register> {
    |                                                   ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
226 | / registers!(AArch64, {
227 | |     X0 = (0, "X0"),
228 | |     X1 = (1, "X1"),
229 | |     X2 = (2, "X2"),
...   |
291 | |     V31 = (95, "V31"),
292 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Register`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:297:10
    |
297 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:297:10
    |
297 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:20:57
    |
20  |               pub fn register_name(register: Register) -> Option<&'static str> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
300 | / registers!(RiscV, {
301 | |     X0 = (0, "x0"),
302 | |     X1 = (1, "x1"),
303 | |     X2 = (2, "x2"),
...   |
432 | |     FT11 = (63, "ft11"),
433 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Register` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:30:46
    |
30  |           pub fn name_to_register(value: &str) -> Option<Register> {
    |                                                   ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
300 | / registers!(RiscV, {
301 | |     X0 = (0, "x0"),
302 | |     X1 = (1, "x1"),
303 | |     X2 = (2, "x2"),
...   |
432 | |     FT11 = (63, "ft11"),
433 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Register`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:438:10
    |
438 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:438:10
    |
438 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:20:57
    |
20  |               pub fn register_name(register: Register) -> Option<&'static str> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
441 | / registers!(X86, {
442 | |     EAX = (0, "eax"),
443 | |     ECX = (1, "ecx"),
444 | |     EDX = (2, "edx"),
...   |
494 | |     GS_BASE = (94, "gs.base"),
495 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Register` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:30:46
    |
30  |           pub fn name_to_register(value: &str) -> Option<Register> {
    |                                                   ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
441 | / registers!(X86, {
442 | |     EAX = (0, "eax"),
443 | |     ECX = (1, "ecx"),
444 | |     EDX = (2, "edx"),
...   |
494 | |     GS_BASE = (94, "gs.base"),
495 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Register`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:500:10
    |
500 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:500:10
    |
500 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:20:57
    |
20  |               pub fn register_name(register: Register) -> Option<&'static str> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
503 | / registers!(X86_64, {
504 | |     RAX = (0, "rax"),
505 | |     RDX = (1, "rdx"),
506 | |     RCX = (2, "rcx"),
...   |
602 | |     K7 = (125, "k7"),
603 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::Register` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/arch.rs:30:46
    |
30  |           pub fn name_to_register(value: &str) -> Option<Register> {
    |                                                   ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
503 | / registers!(X86_64, {
504 | |     RAX = (0, "rax"),
505 | |     RDX = (1, "rdx"),
506 | |     RCX = (2, "rcx"),
...   |
602 | |     K7 = (125, "k7"),
603 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Register`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `registers` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwSect` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwSect`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwSect` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwSect`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwSect`
    = note: required for `constants::DwSect` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwSectV2` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwSectV2`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwSectV2` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwSectV2`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwSectV2`
    = note: required for `constants::DwSectV2` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwUt` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwUt`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwUt` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwUt`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwUt`
    = note: required for `constants::DwUt` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwCfa` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwCfa`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwCfa` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwCfa`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwCfa`
    = note: required for `constants::DwCfa` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwChildren` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwChildren`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwChildren` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwChildren`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwChildren`
    = note: required for `constants::DwChildren` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwTag` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwTag`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwTag` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwTag`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwTag`
    = note: required for `constants::DwTag` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwAt` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwAt`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwAt` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwAt`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwAt`
    = note: required for `constants::DwAt` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwForm` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwForm`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwForm` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwForm`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwForm`
    = note: required for `constants::DwForm` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwAte` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwAte`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwAte` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwAte`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwAte`
    = note: required for `constants::DwAte` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLle` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLle`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLle` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLle`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwLle`
    = note: required for `constants::DwLle` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwDs` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwDs`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwDs` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwDs`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwDs`
    = note: required for `constants::DwDs` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwEnd` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEnd`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwEnd` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEnd`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwEnd`
    = note: required for `constants::DwEnd` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwAccess` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwAccess`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwAccess` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwAccess`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwAccess`
    = note: required for `constants::DwAccess` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwVis` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwVis`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwVis` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwVis`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwVis`
    = note: required for `constants::DwVis` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwVirtuality` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwVirtuality`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwVirtuality` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwVirtuality`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwVirtuality`
    = note: required for `constants::DwVirtuality` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLang` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLang`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLang` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLang`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwLang`
    = note: required for `constants::DwLang` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwAddr` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwAddr`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwAddr` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwAddr`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwAddr`
    = note: required for `constants::DwAddr` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwId`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwId`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwId`
    = note: required for `constants::DwId` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwCc` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwCc`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwCc` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwCc`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwCc`
    = note: required for `constants::DwCc` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwInl` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwInl`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwInl` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwInl`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwInl`
    = note: required for `constants::DwInl` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwOrd` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwOrd`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwOrd` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwOrd`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwOrd`
    = note: required for `constants::DwOrd` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwDsc` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwDsc`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwDsc` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwDsc`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwDsc`
    = note: required for `constants::DwDsc` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwIdx` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                           ^^^^^ doesn't have a size known at compile-time
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwIdx`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwIdx` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                  ^^^^ doesn't have a size known at compile-time
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwIdx`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwIdx`
    = note: required for `constants::DwIdx` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwDefaulted` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                           ^^^^^ doesn't have a size known at compile-time
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwDefaulted`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwDefaulted` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                  ^^^^ doesn't have a size known at compile-time
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwDefaulted`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwDefaulted`
     = note: required for `constants::DwDefaulted` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLns` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                           ^^^^^ doesn't have a size known at compile-time
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLns`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLns` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                  ^^^^ doesn't have a size known at compile-time
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLns`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwLns`
     = note: required for `constants::DwLns` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLne` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                           ^^^^^ doesn't have a size known at compile-time
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLne`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLne` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                  ^^^^ doesn't have a size known at compile-time
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLne`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwLne`
     = note: required for `constants::DwLne` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLnct` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                           ^^^^^ doesn't have a size known at compile-time
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLnct`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwLnct` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                  ^^^^ doesn't have a size known at compile-time
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwLnct`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwLnct`
     = note: required for `constants::DwLnct` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwMacro` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                           ^^^^^ doesn't have a size known at compile-time
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwMacro`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwMacro` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                  ^^^^ doesn't have a size known at compile-time
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwMacro`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwMacro`
     = note: required for `constants::DwMacro` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwRle` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                           ^^^^^ doesn't have a size known at compile-time
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwRle`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwRle` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                  ^^^^ doesn't have a size known at compile-time
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwRle`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwRle`
     = note: required for `constants::DwRle` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwOp` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                           ^^^^^ doesn't have a size known at compile-time
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwOp`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwOp` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                  ^^^^ doesn't have a size known at compile-time
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwOp`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwOp`
     = note: required for `constants::DwOp` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwEhPe` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:25
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                           ^^^^^ doesn't have a size known at compile-time
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEhPe`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwEhPe` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:32
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                  ^^^^ doesn't have a size known at compile-time
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEhPe`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `constants::DwEhPe`
     = note: required for `constants::DwEhPe` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
98  | / dw!(
99  | | /// The section type field in a `.dwp` unit index.
100 | | ///
101 | | /// This is used for version 5 and later.
...   |
111 | |     DW_SECT_RNGLISTS = 8,
112 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
114 | / dw!(
115 | | /// The section type field in a `.dwp` unit index with version 2.
116 | | DwSectV2(u32) {
117 | |     DW_SECT_V2_INFO = 1,
...   |
124 | |     DW_SECT_V2_MACRO = 8,
125 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
127 | / dw!(
128 | | /// The unit type field in a unit header.
129 | | ///
130 | | /// See Section 7.5.1, Table 7.2.
...   |
139 | |     DW_UT_hi_user = 0xff,
140 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
142 | / dw!(
143 | | /// The opcode for a call frame instruction.
144 | | ///
145 | | /// Section 7.24:
...   |
184 | |     DW_CFA_GNU_negative_offset_extended = 0x2f,
185 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
187 | / dw!(
188 | | /// The child determination encodings for DIE attributes.
189 | | ///
190 | | /// See Section 7.5.3, Table 7.4.
...   |
193 | |     DW_CHILDREN_yes = 1,
194 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
196 | / dw!(
197 | | /// The tag encodings for DIE attributes.
198 | | ///
199 | | /// See Section 7.5.3, Table 7.3.
...   |
338 | |     DW_TAG_BORLAND_Delphi_variant = 0xb004,
339 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
341 | / dw!(
342 | | /// The attribute encodings for DIE attributes.
343 | | ///
344 | | /// See Section 7.5.4, Table 7.5.
...   |
647 | |     DW_AT_APPLE_property = 0x3fed
648 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
650 | / dw!(
651 | | /// The attribute form encodings for DIE attributes.
652 | | ///
653 | | /// See Section 7.5.6, Table 7.6.
...   |
711 | |     DW_FORM_GNU_strp_alt = 0x1f21
712 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
714 | / dw!(
715 | | /// The encodings of the constants used in the `DW_AT_encoding` attribute.
716 | | ///
717 | | /// See Section 7.8, Table 7.11.
...   |
743 | |     DW_ATE_hi_user = 0xff,
744 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
746 | / dw!(
747 | | /// The encodings of the constants used in location list entries.
748 | | ///
749 | | /// See Section 7.7.3, Table 7.10.
...   |
760 | |     DW_LLE_GNU_view_pair = 0x09,
761 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
763 | / dw!(
764 | | /// The encodings of the constants used in the `DW_AT_decimal_sign` attribute.
765 | | ///
766 | | /// See Section 7.8, Table 7.12.
...   |
772 | |     DW_DS_trailing_separate = 0x05,
773 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
775 | / dw!(
776 | | /// The encodings of the constants used in the `DW_AT_endianity` attribute.
777 | | ///
778 | | /// See Section 7.8, Table 7.13.
...   |
784 | |     DW_END_hi_user = 0xff,
785 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
787 | / dw!(
788 | | /// The encodings of the constants used in the `DW_AT_accessibility` attribute.
789 | | ///
790 | | /// See Section 7.9, Table 7.14.
...   |
794 | |     DW_ACCESS_private = 0x03,
795 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | / dw!(
798 | | /// The encodings of the constants used in the `DW_AT_visibility` attribute.
799 | | ///
800 | | /// See Section 7.10, Table 7.15.
...   |
804 | |     DW_VIS_qualified = 0x03,
805 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
807 | / dw!(
808 | | /// The encodings of the constants used in the `DW_AT_virtuality` attribute.
809 | | ///
810 | | /// See Section 7.11, Table 7.16.
...   |
814 | |     DW_VIRTUALITY_pure_virtual = 0x02,
815 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
817 | / dw!(
818 | | /// The encodings of the constants used in the `DW_AT_language` attribute.
819 | | ///
820 | | /// See Section 7.12, Table 7.17.
...   |
876 | |     DW_LANG_BORLAND_Delphi = 0xb000,
877 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:881:41
    |
881 |     pub fn default_lower_bound(self) -> Option<usize> {
    |                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
915 | / dw!(
916 | | /// The encodings of the constants used in the `DW_AT_address_class` attribute.
917 | | ///
918 | | /// There is only one value that is common to all target architectures.
...   |
921 | |     DW_ADDR_none = 0x00,
922 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
924 | / dw!(
925 | | /// The encodings of the constants used in the `DW_AT_identifier_case` attribute.
926 | | ///
927 | | /// See Section 7.14, Table 7.18.
...   |
932 | |     DW_ID_case_insensitive = 0x03,
933 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
935 | / dw!(
936 | | /// The encodings of the constants used in the `DW_AT_calling_convention` attribute.
937 | | ///
938 | | /// See Section 7.15, Table 7.19.
...   |
946 | |     DW_CC_hi_user = 0xff,
947 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
949 | / dw!(
950 | | /// The encodings of the constants used in the `DW_AT_inline` attribute.
951 | | ///
952 | | /// See Section 7.16, Table 7.20.
...   |
957 | |     DW_INL_declared_inlined = 0x03,
958 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
960 | / dw!(
961 | | /// The encodings of the constants used in the `DW_AT_ordering` attribute.
962 | | ///
963 | | /// See Section 7.17, Table 7.17.
...   |
966 | |     DW_ORD_col_major = 0x01,
967 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
969 | / dw!(
970 | | /// The encodings of the constants used in the `DW_AT_discr_list` attribute.
971 | | ///
972 | | /// See Section 7.18, Table 7.22.
...   |
975 | |     DW_DSC_range = 0x01,
976 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                    ^^^^^ doesn't have a size known at compile-time
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
    |
61  |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
    |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
    |
69  |               pub fn static_string(&self) -> Option<&'static str> {
    |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
    |
80  |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
978 | / dw!(
979 | | /// Name index attribute encodings.
980 | | ///
981 | | /// See Section 7.19, Table 7.23.
...   |
989 | |     DW_IDX_hi_user = 0x3fff,
990 | | });
    | |__- in this macro invocation
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
     |
69   |               pub fn static_string(&self) -> Option<&'static str> {
     |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
992  | / dw!(
993  | | /// The encodings of the constants used in the `DW_AT_defaulted` attribute.
994  | | ///
995  | | /// See Section 7.20, Table 7.24.
...    |
999  | |     DW_DEFAULTED_out_of_class = 0x02,
1000 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
     |
69   |               pub fn static_string(&self) -> Option<&'static str> {
     |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1002 | / dw!(
1003 | | /// The encodings for the standard opcodes for line number information.
1004 | | ///
1005 | | /// See Section 7.22, Table 7.25.
...    |
1018 | |     DW_LNS_set_isa = 0x0c,
1019 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
     |
69   |               pub fn static_string(&self) -> Option<&'static str> {
     |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1021 | / dw!(
1022 | | /// The encodings for the extended opcodes for line number information.
1023 | | ///
1024 | | /// See Section 7.22, Table 7.26.
...    |
1032 | |     DW_LNE_hi_user = 0xff,
1033 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
     |
69   |               pub fn static_string(&self) -> Option<&'static str> {
     |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1035 | / dw!(
1036 | | /// The encodings for the line number header entry formats.
1037 | | ///
1038 | | /// See Section 7.22, Table 7.27.
...    |
1046 | |     DW_LNCT_hi_user = 0x3fff,
1047 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
     |
69   |               pub fn static_string(&self) -> Option<&'static str> {
     |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1049 | / dw!(
1050 | | /// The encodings for macro information entry types.
1051 | | ///
1052 | | /// See Section 7.23, Table 7.28.
...    |
1067 | |     DW_MACRO_hi_user = 0xff,
1068 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
     |
69   |               pub fn static_string(&self) -> Option<&'static str> {
     |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1070 | / dw!(
1071 | | /// Range list entry encoding values.
1072 | | ///
1073 | | /// See Section 7.25, Table 7.30.
...    |
1082 | |     DW_RLE_start_length = 0x07,
1083 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
     |
69   |               pub fn static_string(&self) -> Option<&'static str> {
     |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1085 | / dw!(
1086 | | /// The encodings for DWARF expression operations.
1087 | | ///
1088 | | /// See Section 7.7.1, Table 7.9.
...    |
1269 | |     DW_OP_WASM_location = 0xed,
1270 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:18
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                    ^^^^^ doesn't have a size known at compile-time
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:61:59
     |
61   |           #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
     |                                                             ^^^^^^^^^^ doesn't have a size known at compile-time
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` which comes from the expansion of the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:69:44
     |
69   |               pub fn static_string(&self) -> Option<&'static str> {
     |                                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/constants.rs:80:54
     |
80   |               fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
1272 | / dw!(
1273 | | /// Pointer encoding used by `.eh_frame`.
1274 | | ///
1275 | | /// The four lower bits describe the
...    |
1327 | |     DW_EH_PE_omit = 0xff,
1328 | | });
     | |__- in this macro invocation
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the macro `dw` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `endianity::RunTimeEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:175:17
    |
175 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::RunTimeEndian`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `endianity::RunTimeEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:175:24
    |
175 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::RunTimeEndian`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `endianity::RunTimeEndian`
    = note: required for `endianity::RunTimeEndian` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `endianity::RunTimeEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:183:18
    |
183 | impl Default for RunTimeEndian {
    |                  ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::RunTimeEndian`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `endianity::RunTimeEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:197:20
    |
197 | impl Endianity for RunTimeEndian {
    |                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::RunTimeEndian`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `endianity::RunTimeEndian`
    = note: required for `endianity::RunTimeEndian` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `endianity::Endianity`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:7:40
    |
7   | pub trait Endianity: Debug + Default + Clone + Copy + PartialEq + Eq {
    |                                        ^^^^^ required by this bound in `Endianity`

error[E0277]: the size for values of type `endianity::LittleEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:205:17
    |
205 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::LittleEndian`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `endianity::LittleEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:205:24
    |
205 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::LittleEndian`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `endianity::LittleEndian`
    = note: required for `endianity::LittleEndian` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `endianity::LittleEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:208:18
    |
208 | impl Default for LittleEndian {
    |                  ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::LittleEndian`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `endianity::LittleEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:215:20
    |
215 | impl Endianity for LittleEndian {
    |                    ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::LittleEndian`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `endianity::LittleEndian`
    = note: required for `endianity::LittleEndian` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `endianity::Endianity`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:7:40
    |
7   | pub trait Endianity: Debug + Default + Clone + Copy + PartialEq + Eq {
    |                                        ^^^^^ required by this bound in `Endianity`

error[E0277]: the size for values of type `endianity::BigEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:223:17
    |
223 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::BigEndian`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `endianity::BigEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:223:24
    |
223 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::BigEndian`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `endianity::BigEndian`
    = note: required for `endianity::BigEndian` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `endianity::BigEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:226:18
    |
226 | impl Default for BigEndian {
    |                  ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::BigEndian`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `endianity::BigEndian` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:233:20
    |
233 | impl Endianity for BigEndian {
    |                    ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `endianity::BigEndian`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `endianity::BigEndian`
    = note: required for `endianity::BigEndian` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `endianity::Endianity`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:7:40
    |
7   | pub trait Endianity: Debug + Default + Clone + Copy + PartialEq + Eq {
    |                                        ^^^^^ required by this bound in `Endianity`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:175:10
    |
175 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:175:10
    |
175 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:205:10
    |
205 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:205:10
    |
205 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:223:10
    |
223 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/endianity.rs:223:10
    |
223 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/leb128.rs:71:42
    |
71  |     pub fn skip<R: Reader>(r: &mut R) -> Result<()> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/leb128.rs:71:42
    |
71  |     pub fn skip<R: Reader>(r: &mut R) -> Result<()> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/leb128.rs:82:46
    |
82  |     pub fn unsigned<R: Reader>(r: &mut R) -> Result<u64> {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/leb128.rs:82:46
    |
82  |     pub fn unsigned<R: Reader>(r: &mut R) -> Result<u64> {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/leb128.rs:105:41
    |
105 |     pub fn u16<R: Reader>(r: &mut R) -> Result<u16> {
    |                                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/leb128.rs:105:41
    |
105 |     pub fn u16<R: Reader>(r: &mut R) -> Result<u16> {
    |                                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/leb128.rs:128:44
    |
128 |     pub fn signed<R: Reader>(r: &mut R) -> Result<i64> {
    |                                            ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/leb128.rs:128:44
    |
128 |     pub fn signed<R: Reader>(r: &mut R) -> Result<i64> {
    |                                            ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:249:17
    |
249 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::UnitOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:249:24
    |
249 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::UnitOffset<T>`
    = note: required for `read::UnitOffset<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::StoreOnHeap` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:261:17
    |
261 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::StoreOnHeap`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::StoreOnHeap` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:261:24
    |
261 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::StoreOnHeap`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::StoreOnHeap`
    = note: required for `read::StoreOnHeap` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:270:17
    |
270 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:270:24
    |
270 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::Error`
    = note: required for `read::Error` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
612 | pub trait Section<R: rustc_std_workspace_core::marker::Sized>: From<R> {
    |                    +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:249:10
    |
249 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:249:10
    |
249 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:249:50
    |
249 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Ord, PartialOrd, Hash)]
    |                                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:261:10
    |
261 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:261:10
    |
261 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:270:10
    |
270 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:270:10
    |
270 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:438:46
    |
438 |     fn fmt(&self, f: &mut fmt::Formatter) -> ::core::result::Result<(), fmt::Error> {
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:438:46
    |
438 |     fn fmt(&self, f: &mut fmt::Formatter) -> ::core::result::Result<(), fmt::Error> {
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::Register` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:664:39
    |
664 |     pub(crate) fn from_u64(x: u64) -> Result<Register> {
    |                                       ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::Register`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:664:39
    |
664 |     pub(crate) fn from_u64(x: u64) -> Result<Register> {
    |                                       ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&'static str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:623:30
    |
623 |     fn dwo_section_name() -> Option<&'static str> {
    |                              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'static str`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `(common::SectionId,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:630:12
    |
630 |         F: FnOnce(SectionId) -> core::result::Result<R, E>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::SectionId,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnOnce`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:242:18
    |
242 | pub trait FnOnce<Args: Tuple> {
    |                  ^^^^ required by this bound in `FnOnce`

error[E0277]: `(common::SectionId,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:630:12
    |
630 |         F: FnOnce(SectionId) -> core::result::Result<R, E>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(common::SectionId,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnOnce`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:242:24
    |
242 | pub trait FnOnce<Args: Tuple> {
    |                        ^^^^^ required by this bound in `FnOnce`

error[E0277]: the size for values of type `E` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:630:33
    |
630 |         F: FnOnce(SectionId) -> core::result::Result<R, E>,
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
help: consider further restricting type parameter `E`
    |
630 |         F: FnOnce(SectionId) -> core::result::Result<R, E>, E: rustc_std_workspace_core::marker::Sized
    |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:642:52
    |
642 |     fn dwp_range(&self, offset: u32, size: u32) -> Result<Self>
    |                                                    ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(common::SectionId, <R as read::reader::Reader>::Offset)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:653:55
    |
653 |     fn lookup_offset_id(&self, id: ReaderOffsetId) -> Option<(SectionId, R::Offset)>
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::SectionId, <R as read::reader::Reader>::Offset)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::util::ArrayVec<A>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:193:32
    |
193 | impl<A: ArrayLike> Default for ArrayVec<A> {
    |                                ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::util::ArrayVec<A>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `read::util::ArrayVec<A>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:219:30
    |
219 | impl<A: ArrayLike> Clone for ArrayVec<A>
    |                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::util::ArrayVec<A>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:49:29
    |
49  |             type Storage = [MaybeUninit<T>; $n];
    |                             ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
73  | impl_array!(0 1 2 3 4 8 16 32 64 128 192);
    | ----------------------------------------- in this macro invocation
    |
note: required by a bound in `rustc_std_workspace_core::mem::MaybeUninit`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:249:23
    |
249 | pub union MaybeUninit<T> {
    |                       ^ required by this bound in `MaybeUninit`
    = note: this error originates in the macro `impl_array` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider restricting type parameter `T`
    |
48  |         unsafe impl<T: rustc_std_workspace_core::marker::Sized> Sealed for [T; $n] {
    |                      +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:51:33
    |
51  |             fn new_storage() -> Self::Storage {
    |                                 ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
73  | impl_array!(0 1 2 3 4 8 16 32 64 128 192);
    | ----------------------------------------- in this macro invocation
    |
note: required by a bound in `rustc_std_workspace_core::mem::MaybeUninit`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:249:23
    |
249 | pub union MaybeUninit<T> {
    |                       ^ required by this bound in `MaybeUninit`
    = note: this error originates in the macro `impl_array` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider restricting type parameter `T`
    |
48  |         unsafe impl<T: rustc_std_workspace_core::marker::Sized> Sealed for [T; $n] {
    |                      +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:60:34
    |
60  |             fn as_slice(storage: &Self::Storage) -> &[MaybeUninit<T>] {
    |                                  ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
73  | impl_array!(0 1 2 3 4 8 16 32 64 128 192);
    | ----------------------------------------- in this macro invocation
    |
note: required by a bound in `rustc_std_workspace_core::mem::MaybeUninit`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:249:23
    |
249 | pub union MaybeUninit<T> {
    |                       ^ required by this bound in `MaybeUninit`
    = note: this error originates in the macro `impl_array` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider restricting type parameter `T`
    |
57  |         impl<T: rustc_std_workspace_core::marker::Sized> ArrayLike for [T; $n] {
    |               +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:64:38
    |
64  |             fn as_mut_slice(storage: &mut Self::Storage) -> &mut [MaybeUninit<T>] {
    |                                      ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
73  | impl_array!(0 1 2 3 4 8 16 32 64 128 192);
    | ----------------------------------------- in this macro invocation
    |
note: required by a bound in `rustc_std_workspace_core::mem::MaybeUninit`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:249:23
    |
249 | pub union MaybeUninit<T> {
    |                       ^ required by this bound in `MaybeUninit`
    = note: this error originates in the macro `impl_array` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider restricting type parameter `T`
    |
57  |         impl<T: rustc_std_workspace_core::marker::Sized> ArrayLike for [T; $n] {
    |               +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:83:64
    |
83  |     fn grow(storage: &mut Self::Storage, additional: usize) -> Result<(), CapacityFull> {
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::util::sealed::CapacityFull` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:83:64
    |
83  |     fn grow(storage: &mut Self::Storage, additional: usize) -> Result<(), CapacityFull> {
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::util::sealed::CapacityFull`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:97:47
    |
97  |     fn as_slice(storage: &Self::Storage) -> &[MaybeUninit<T>] {
    |                                               ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::mem::MaybeUninit`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:249:23
    |
249 | pub union MaybeUninit<T> {
    |                       ^ required by this bound in `MaybeUninit`
help: consider restricting type parameter `T`
    |
94  | impl<T: rustc_std_workspace_core::marker::Sized> ArrayLike for Vec<T> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:101:59
    |
101 |     fn as_mut_slice(storage: &mut Self::Storage) -> &mut [MaybeUninit<T>] {
    |                                                           ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::mem::MaybeUninit`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:249:23
    |
249 | pub union MaybeUninit<T> {
    |                       ^ required by this bound in `MaybeUninit`
help: consider restricting type parameter `T`
    |
94  | impl<T: rustc_std_workspace_core::marker::Sized> ArrayLike for Vec<T> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:127:51
    |
127 |     pub fn try_push(&mut self, value: A::Item) -> Result<(), CapacityFull> {
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::util::sealed::CapacityFull` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:127:51
    |
127 |     pub fn try_push(&mut self, value: A::Item) -> Result<(), CapacityFull> {
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::util::sealed::CapacityFull`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:139:69
    |
139 |     pub fn try_insert(&mut self, index: usize, element: A::Item) -> Result<(), CapacityFull> {
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::util::sealed::CapacityFull` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:139:69
    |
139 |     pub fn try_insert(&mut self, index: usize, element: A::Item) -> Result<(), CapacityFull> {
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::util::sealed::CapacityFull`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `<A as read::util::ArrayLike>::Item` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:158:30
    |
158 |     pub fn pop(&mut self) -> Option<A::Item> {
    |                              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `<A as read::util::ArrayLike>::Item`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting the associated type
    |
158 |     pub fn pop(&mut self) -> Option<A::Item> where <A as read::util::ArrayLike>::Item: rustc_std_workspace_core::marker::Sized {
    |                                              +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:247:50
    |
247 |     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
    |                                                  ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:247:50
    |
247 |     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
    |                                                  ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `<Self as read::util::ArrayLike>::Item` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:37:47
    |
37  |     fn as_slice(storage: &Self::Storage) -> &[MaybeUninit<Self::Item>];
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `<Self as read::util::ArrayLike>::Item`
note: required by a bound in `rustc_std_workspace_core::mem::MaybeUninit`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:249:23
    |
249 | pub union MaybeUninit<T> {
    |                       ^ required by this bound in `MaybeUninit`
help: consider further restricting the associated type
    |
37  |     fn as_slice(storage: &Self::Storage) -> &[MaybeUninit<Self::Item>] where <Self as read::util::ArrayLike>::Item: rustc_std_workspace_core::marker::Sized;
    |                                                                        ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `<Self as read::util::ArrayLike>::Item` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:40:59
    |
40  |     fn as_mut_slice(storage: &mut Self::Storage) -> &mut [MaybeUninit<Self::Item>];
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `<Self as read::util::ArrayLike>::Item`
note: required by a bound in `rustc_std_workspace_core::mem::MaybeUninit`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs:249:23
    |
249 | pub union MaybeUninit<T> {
    |                       ^ required by this bound in `MaybeUninit`
help: consider further restricting the associated type
    |
40  |     fn as_mut_slice(storage: &mut Self::Storage) -> &mut [MaybeUninit<Self::Item>] where <Self as read::util::ArrayLike>::Item: rustc_std_workspace_core::marker::Sized;
    |                                                                                    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::util::sealed::CapacityFull` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:23:14
    |
23  |     #[derive(Clone, Copy, Debug)]
    |              ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::util::sealed::CapacityFull`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::util::sealed::CapacityFull` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:23:21
    |
23  |     #[derive(Clone, Copy, Debug)]
    |                     ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::util::sealed::CapacityFull`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::util::sealed::CapacityFull`
    = note: required for `read::util::sealed::CapacityFull` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:23:27
    |
23  |     #[derive(Clone, Copy, Debug)]
    |                           ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:23:27
    |
23  |     #[derive(Clone, Copy, Debug)]
    |                           ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:18:70
    |
18  |         fn grow(_storage: &mut Self::Storage, _additional: usize) -> Result<(), CapacityFull> {
    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::util::sealed::CapacityFull` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/util.rs:18:70
    |
18  |         fn grow(_storage: &mut Self::Storage, _additional: usize) -> Result<(), CapacityFull> {
    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::util::sealed::CapacityFull`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::addr::DebugAddr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:5:17
    |
5   | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::addr::DebugAddr<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::addr::DebugAddr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:5:26
    |
5   | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::addr::DebugAddr<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::addr::DebugAddr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:5:33
    |
5   | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::addr::DebugAddr<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::addr::DebugAddr<R>`
    = note: required for `read::addr::DebugAddr<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::addr::DebugAddr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:67:24
    |
67  | impl<R> Section<R> for DebugAddr<R> {
    |                        ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::addr::DebugAddr<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::addr::DebugAddr<R>`
    = note: required for `read::addr::DebugAddr<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:77:9
    |
77  | impl<R> From<R> for DebugAddr<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
77  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugAddr<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::addr::DebugAddr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:77:21
    |
77  | impl<R> From<R> for DebugAddr<R> {
    |                     ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::addr::DebugAddr<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:5:10
    |
5   | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:5:10
    |
5   | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:33:10
    |
33  |     ) -> Result<u64> {
    |          ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:33:10
    |
33  |     ) -> Result<u64> {
    |          ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:61:12
    |
61  |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/addr.rs:61:12
    |
61  |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `read::cfi::DebugFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:32:10
    |
32  | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::DebugFrame<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::DebugFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:32:17
    |
32  | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::DebugFrame<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::cfi::DebugFrame<R>`
    = note: required for `read::cfi::DebugFrame<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::DebugFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:81:32
    |
81  | impl<R: Reader> Section<R> for DebugFrame<R> {
    |                                ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::DebugFrame<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::cfi::DebugFrame<R>`
    = note: required for `read::cfi::DebugFrame<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `read::cfi::DebugFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:91:29
    |
91  | impl<R: Reader> From<R> for DebugFrame<R> {
    |                             ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::DebugFrame<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::cfi::EhFrameHdr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:106:10
    |
106 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrameHdr<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::EhFrameHdr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:106:17
    |
106 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrameHdr<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::cfi::EhFrameHdr<R>`
    = note: required for `read::cfi::EhFrameHdr<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::ParsedEhFrameHdr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:110:10
    |
110 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::ParsedEhFrameHdr<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::EhFrameHdr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:180:32
    |
180 | impl<R: Reader> Section<R> for EhFrameHdr<R> {
    |                                ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrameHdr<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::cfi::EhFrameHdr<R>`
    = note: required for `read::cfi::EhFrameHdr<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `read::cfi::EhFrameHdr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:190:29
    |
190 | impl<R: Reader> From<R> for EhFrameHdr<R> {
    |                             ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrameHdr<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::cfi::EhHdrTable<'a, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:297:17
    |
297 | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhHdrTable<'a, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::EhFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:495:10
    |
495 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrame<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::EhFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:495:17
    |
495 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrame<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::cfi::EhFrame<R>`
    = note: required for `read::cfi::EhFrame<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::EhFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:534:32
    |
534 | impl<R: Reader> Section<R> for EhFrame<R> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrame<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::cfi::EhFrame<R>`
    = note: required for `read::cfi::EhFrame<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `read::cfi::EhFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:544:29
    |
544 | impl<R: Reader> From<R> for EhFrame<R> {
    |                             ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrame<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::cfi::CieOffsetEncoding` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:558:10
    |
558 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CieOffsetEncoding`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::CieOffsetEncoding` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:558:17
    |
558 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CieOffsetEncoding`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::cfi::CieOffsetEncoding`
    = note: required for `read::cfi::CieOffsetEncoding` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugFrameOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:575:29
    |
575 | impl<T> UnwindOffset<T> for DebugFrameOffset<T>
    |                             ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugFrameOffset<T>`
    = help: the trait `rustc_std_workspace_core::convert::From<T>` is implemented for `common::DebugFrameOffset<T>`
    = note: required for `common::DebugFrameOffset<T>` to implement `rustc_std_workspace_core::convert::From<T>`
note: required by a bound in `read::cfi::UnwindOffset`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:567:56
    |
567 | pub trait UnwindOffset<T = usize>: Copy + Debug + Eq + From<T>
    |                                                        ^^^^^^^ required by this bound in `UnwindOffset`

error[E0277]: the size for values of type `common::EhFrameOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:585:29
    |
585 | impl<T> UnwindOffset<T> for EhFrameOffset<T>
    |                             ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::EhFrameOffset<T>`
    = help: the trait `rustc_std_workspace_core::convert::From<T>` is implemented for `common::EhFrameOffset<T>`
    = note: required for `common::EhFrameOffset<T>` to implement `rustc_std_workspace_core::convert::From<T>`
note: required by a bound in `read::cfi::UnwindOffset`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:567:56
    |
567 | pub trait UnwindOffset<T = usize>: Copy + Debug + Eq + From<T>
    |                                                        ^^^^^^^ required by this bound in `UnwindOffset`

error[E0277]: the size for values of type `read::cfi::DebugFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:827:38
    |
827 | impl<R: Reader> UnwindSection<R> for DebugFrame<R> {
    |                                      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::DebugFrame<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::cfi::DebugFrame<R>`
    = note: required for `read::cfi::DebugFrame<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `read::cfi::UnwindSection`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:635:37
    |
635 | pub trait UnwindSection<R: Reader>: Clone + Debug + _UnwindSectionPrivate<R> {
    |                                     ^^^^^ required by this bound in `UnwindSection`

error[E0277]: the size for values of type `read::cfi::EhFrame<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:867:38
    |
867 | impl<R: Reader> UnwindSection<R> for EhFrame<R> {
    |                                      ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhFrame<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::cfi::EhFrame<R>`
    = note: required for `read::cfi::EhFrame<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `read::cfi::UnwindSection`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:635:37
    |
635 | pub trait UnwindSection<R: Reader>: Clone + Debug + _UnwindSectionPrivate<R> {
    |                                     ^^^^^ required by this bound in `UnwindSection`

error[E0277]: the size for values of type `read::cfi::BaseAddresses` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:893:10
    |
893 | #[derive(Clone, Default, Debug, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::BaseAddresses`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::BaseAddresses` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:893:17
    |
893 | #[derive(Clone, Default, Debug, PartialEq, Eq)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::BaseAddresses`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:909:18
    |
909 |     pub section: Option<u64>,
    |                  ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::SectionBaseAddresses` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:906:10
    |
906 | #[derive(Clone, Default, Debug, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::SectionBaseAddresses`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::SectionBaseAddresses` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:906:17
    |
906 | #[derive(Clone, Default, Debug, PartialEq, Eq)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::SectionBaseAddresses`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::CfiEntriesIter<'bases, Section, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:996:10
    |
996 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CfiEntriesIter<'bases, Section, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::CieOrFde<'bases, Section, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1047:10
     |
1047 | #[derive(Clone, Debug, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CieOrFde<'bases, Section, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::cfi::CieOrFde<'bases, Section, R>>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1066:6
     |
1066 | ) -> Result<Option<CieOrFde<'bases, Section, R>>>
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::cfi::CieOrFde<'bases, Section, R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1066:6
     |
1066 | ) -> Result<Option<CieOrFde<'bases, Section, R>>>
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CieOrFde<'bases, Section, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1066:13
     |
1066 | ) -> Result<Option<CieOrFde<'bases, Section, R>>>
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CieOrFde<'bases, Section, R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `constants::DwEhPe` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1134:11
     |
1134 |     lsda: Option<constants::DwEhPe>,
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEhPe`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `(constants::DwEhPe, read::cfi::Pointer)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1143:18
     |
1143 |     personality: Option<(constants::DwEhPe, Pointer)>,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(constants::DwEhPe, read::cfi::Pointer)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::Augmentation` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1123:10
     |
1123 | #[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
     |          ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Augmentation`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::cfi::Augmentation`
     = note: required for `read::cfi::Augmentation` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Augmentation` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1123:16
     |
1123 | #[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
     |                ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Augmentation`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Augmentation` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1123:30
     |
1123 | #[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
     |                              ^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Augmentation`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`
     = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1226:11
     |
1226 |     lsda: Option<Pointer>,
     |           ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::AugmentationData` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1224:10
     |
1224 | #[derive(Clone, Debug, Default, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::AugmentationData`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::AugmentationData` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1224:24
     |
1224 | #[derive(Clone, Debug, Default, PartialEq, Eq)]
     |                        ^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::AugmentationData`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`
     = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Augmentation` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1277:19
     |
1277 |     augmentation: Option<Augmentation>,
     |                   ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Augmentation`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1255:10
     |
1255 | #[derive(Clone, Debug, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::PartialFrameDescriptionEntry<'bases, Section, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1522:10
     |
1522 | #[derive(Clone, Debug, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::PartialFrameDescriptionEntry<'bases, Section, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::AugmentationData` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1610:19
     |
1610 |     augmentation: Option<AugmentationData>,
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::AugmentationData`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::FrameDescriptionEntry<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1577:10
     |
1577 | #[derive(Clone, Debug, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::FrameDescriptionEntry<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::StoreOnHeap` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1882:45
     |
1882 | impl<R: Reader> UnwindContextStorage<R> for StoreOnHeap {
     |                                             ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::StoreOnHeap`
note: required by a bound in `read::cfi::UnwindContextStorage`
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1868:44
     |
1868 | pub trait UnwindContextStorage<R: Reader>: Sized {
     |                                            ^^^^^ required by this bound in `UnwindContextStorage`

error[E0277]: the size for values of type `(common::Register, read::cfi::RegisterRule<R>)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1928:19
     |
1928 |     initial_rule: Option<(Register, RegisterRule<R>)>,
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::Register, read::cfi::RegisterRule<R>)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::UnwindContext<R, A>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1913:10
     |
1913 | #[derive(Clone, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::UnwindContext<R, A>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::UnwindContext<R, A>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1943:57
     |
1943 | impl<R: Reader, A: UnwindContextStorage<R>> Default for UnwindContext<R, A> {
     |                                                         ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::UnwindContext<R, A>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2138:28
     |
2138 |     code_alignment_factor: Wrapping<u64>,
     |                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::num::Wrapping`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
     |
42   | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
     |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2139:28
     |
2139 |     data_alignment_factor: Wrapping<i64>,
     |                            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
note: required by a bound in `rustc_std_workspace_core::num::Wrapping`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
     |
42   | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
     |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `read::cfi::RegisterRuleMap<R, S>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2460:55
     |
2460 | impl<R: Reader, S: UnwindContextStorage<R>> Clone for RegisterRuleMap<R, S> {
     |                                                       ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::RegisterRuleMap<R, S>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`

error[E0277]: the size for values of type `read::cfi::RegisterRuleMap<R, S>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2468:57
     |
2468 | impl<R: Reader, S: UnwindContextStorage<R>> Default for RegisterRuleMap<R, S> {
     |                                                         ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::RegisterRuleMap<R, S>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `&'a (common::Register, read::cfi::RegisterRule<R>)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2528:41
     |
2528 | impl<'a, R, S: UnwindContextStorage<R>> FromIterator<&'a (Register, RegisterRule<R>)>
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'a (common::Register, read::cfi::RegisterRule<R>)`
note: required by a bound in `rustc_std_workspace_core::iter::FromIterator`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:122:24
     |
122  | pub trait FromIterator<A>: Sized {
     |                        ^ required by this bound in `FromIterator`

error[E0277]: the size for values of type `read::cfi::RegisterRuleMap<R, S>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2529:9
     |
2529 |     for RegisterRuleMap<R, S>
     |         ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::RegisterRuleMap<R, S>`
note: required by a bound in `rustc_std_workspace_core::iter::FromIterator`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:122:28
     |
122  | pub trait FromIterator<A>: Sized {
     |                            ^^^^^ required by this bound in `FromIterator`

error[E0277]: the size for values of type `(common::Register, read::cfi::RegisterRule<R>)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2576:39
     |
2576 | pub struct RegisterRuleIter<'iter, R>(::core::slice::Iter<'iter, (Register, RegisterRule<R>)>)
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::Register, read::cfi::RegisterRule<R>)`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
     |
60   | pub struct Iter<'a, T: 'a> {
     |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `read::cfi::RegisterRuleIter<'iter, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2575:17
     |
2575 | #[derive(Debug, Clone)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::RegisterRuleIter<'iter, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::UnwindTableRow<R, S>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2611:55
     |
2611 | impl<R: Reader, S: UnwindContextStorage<R>> Clone for UnwindTableRow<R, S> {
     |                                                       ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::UnwindTableRow<R, S>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`

error[E0277]: the size for values of type `read::cfi::UnwindTableRow<R, S>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2623:57
     |
2623 | impl<R: Reader, S: UnwindContextStorage<R>> Default for UnwindTableRow<R, S> {
     |                                                         ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::UnwindTableRow<R, S>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `read::cfi::CfaRule<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2747:10
     |
2747 | #[derive(Clone, Debug, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CfaRule<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::CfaRule<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2761:29
     |
2761 | impl<R: Reader> Default for CfaRule<R> {
     |                             ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CfaRule<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `read::cfi::RegisterRule<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2787:10
     |
2787 | #[derive(Clone, Debug, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::RegisterRule<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::CallFrameInstruction<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2832:10
     |
2832 | #[derive(Clone, Debug, PartialEq, Eq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CallFrameInstruction<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwEhPe` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3329:23
     |
3329 |     address_encoding: Option<constants::DwEhPe>,
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEhPe`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::CallFrameInstructionIter<'a, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3326:10
     |
3326 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CallFrameInstructionIter<'a, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwEhPe` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3364:56
     |
3364 | fn parse_pointer_encoding<R: Reader>(input: &mut R) -> Result<constants::DwEhPe> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEhPe`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3364:56
     |
3364 | fn parse_pointer_encoding<R: Reader>(input: &mut R) -> Result<constants::DwEhPe> {
     |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3376:10
     |
3376 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |          ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::cfi::Pointer`
     = note: required for `read::cfi::Pointer` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3376:16
     |
3376 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3390:18
     |
3390 | impl Default for Pointer {
     |                  ^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3397:6
     |
3397 | impl Into<u64> for Pointer {
     |      ^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::convert::Into`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:447:16
     |
447  | pub trait Into<T>: Sized {
     |                ^ required by this bound in `Into`

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3397:20
     |
3397 | impl Into<u64> for Pointer {
     |                    ^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::convert::Into`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:447:20
     |
447  | pub trait Into<T>: Sized {
     |                    ^^^^^ required by this bound in `Into`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3420:16
     |
3420 |     func_base: Option<u64>,
     |                ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::PointerEncodingParameters<'a, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3417:10
     |
3417 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::PointerEncodingParameters<'a, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3429:6
     |
3429 | ) -> Result<Pointer> {
     |      ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3429:6
     |
3429 | ) -> Result<Pointer> {
     |      ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:32:23
    |
32  | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:32:23
    |
32  | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:106:23
    |
106 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:106:23
    |
106 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:110:17
    |
110 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:110:17
    |
110 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::ParsedEhFrameHdr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:133:69
    |
133 |     pub fn parse(&self, bases: &BaseAddresses, address_size: u8) -> Result<ParsedEhFrameHdr<R>> {
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::ParsedEhFrameHdr<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:133:69
    |
133 |     pub fn parse(&self, bases: &BaseAddresses, address_size: u8) -> Result<ParsedEhFrameHdr<R>> {
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::EhHdrTable<'_, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:203:28
    |
203 |     pub fn table(&self) -> Option<EhHdrTable<R>> {
    |                            ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::EhHdrTable<'_, R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:227:10
    |
227 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:227:10
    |
227 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<(read::cfi::Pointer, read::cfi::Pointer)>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:237:31
    |
237 |     pub fn next(&mut self) -> Result<Option<(Pointer, Pointer)>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<(read::cfi::Pointer, read::cfi::Pointer)>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:237:31
    |
237 |     pub fn next(&mut self) -> Result<Option<(Pointer, Pointer)>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(read::cfi::Pointer, read::cfi::Pointer)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:237:38
    |
237 |     pub fn next(&mut self) -> Result<Option<(Pointer, Pointer)>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(read::cfi::Pointer, read::cfi::Pointer)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<(read::cfi::Pointer, read::cfi::Pointer)>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:255:40
    |
255 |     pub fn nth(&mut self, n: usize) -> Result<Option<(Pointer, Pointer)>> {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<(read::cfi::Pointer, read::cfi::Pointer)>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:255:40
    |
255 |     pub fn nth(&mut self, n: usize) -> Result<Option<(Pointer, Pointer)>> {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(read::cfi::Pointer, read::cfi::Pointer)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:255:47
    |
255 |     pub fn nth(&mut self, n: usize) -> Result<Option<(Pointer, Pointer)>> {
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(read::cfi::Pointer, read::cfi::Pointer)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:297:10
    |
297 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:297:10
    |
297 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:323:66
    |
323 |     pub fn lookup(&self, address: u64, bases: &BaseAddresses) -> Result<Pointer> {
    |                                                                  ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:323:66
    |
323 |     pub fn lookup(&self, address: u64, bases: &BaseAddresses) -> Result<Pointer> {
    |                                                                  ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::EhFrameOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:381:54
    |
381 |     pub fn pointer_to_offset(&self, ptr: Pointer) -> Result<EhFrameOffset<R::Offset>> {
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::EhFrameOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:381:54
    |
381 |     pub fn pointer_to_offset(&self, ptr: Pointer) -> Result<EhFrameOffset<R::Offset>> {
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:428:14
    |
428 |         ) -> Result<CommonInformationEntry<R>>,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:428:14
    |
428 |         ) -> Result<CommonInformationEntry<R>>,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::FrameDescriptionEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:422:10
    |
422 |     ) -> Result<FrameDescriptionEntry<R>>
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::FrameDescriptionEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:455:14
    |
455 |         ) -> Result<CommonInformationEntry<R>>,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:455:14
    |
455 |         ) -> Result<CommonInformationEntry<R>>,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::FrameDescriptionEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:449:10
    |
449 |     ) -> Result<FrameDescriptionEntry<R>>
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::FrameDescriptionEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:478:14
    |
478 |         ) -> Result<CommonInformationEntry<R>>,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:478:14
    |
478 |         ) -> Result<CommonInformationEntry<R>>,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&'ctx read::cfi::UnwindTableRow<R, A>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:472:10
    |
472 |     ) -> Result<&'ctx UnwindTableRow<R, A>>
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'ctx read::cfi::UnwindTableRow<R, A>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:495:23
    |
495 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:495:23
    |
495 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:558:23
    |
558 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:558:23
    |
558 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:893:26
    |
893 | #[derive(Clone, Default, Debug, PartialEq, Eq)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:893:26
    |
893 | #[derive(Clone, Default, Debug, PartialEq, Eq)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:906:26
    |
906 | #[derive(Clone, Default, Debug, PartialEq, Eq)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:906:26
    |
906 | #[derive(Clone, Default, Debug, PartialEq, Eq)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:996:17
    |
996 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:996:17
    |
996 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::cfi::CieOrFde<'bases, Section, R>>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1013:31
     |
1013 |     pub fn next(&mut self) -> Result<Option<CieOrFde<'bases, Section, R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::cfi::CieOrFde<'bases, Section, R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1013:31
     |
1013 |     pub fn next(&mut self) -> Result<Option<CieOrFde<'bases, Section, R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CieOrFde<'bases, Section, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1013:31
     |
1013 |     pub fn next(&mut self) -> Result<Option<CieOrFde<'bases, Section, R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CieOrFde<'bases, Section, R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1047:17
     |
1047 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1047:17
     |
1047 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1123:23
     |
1123 | #[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1123:23
     |
1123 | #[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::Augmentation` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1163:10
     |
1163 |     ) -> Result<Augmentation>
     |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Augmentation`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1163:10
     |
1163 |     ) -> Result<Augmentation>
     |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1224:17
     |
1224 | #[derive(Clone, Debug, Default, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1224:17
     |
1224 | #[derive(Clone, Debug, Default, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::AugmentationData` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1234:10
     |
1234 |     ) -> Result<AugmentationData> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::AugmentationData`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1234:10
     |
1234 |     ) -> Result<AugmentationData> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1255:17
     |
1255 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1255:17
     |
1255 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1319:10
     |
1319 |     ) -> Result<CommonInformationEntry<R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1319:10
     |
1319 |     ) -> Result<CommonInformationEntry<R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1334:10
     |
1334 |     ) -> Result<CommonInformationEntry<R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1334:10
     |
1334 |     ) -> Result<CommonInformationEntry<R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&read::cfi::Augmentation` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1460:35
     |
1460 |     pub fn augmentation(&self) -> Option<&Augmentation> {
     |                                   ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::cfi::Augmentation`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `constants::DwEhPe` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1470:36
     |
1470 |     pub fn lsda_encoding(&self) -> Option<constants::DwEhPe> {
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEhPe`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `(constants::DwEhPe, read::cfi::Pointer)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1476:48
     |
1476 |     pub fn personality_with_encoding(&self) -> Option<(constants::DwEhPe, Pointer)> {
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(constants::DwEhPe, read::cfi::Pointer)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1482:34
     |
1482 |     pub fn personality(&self) -> Option<Pointer> {
     |                                  ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `constants::DwEhPe` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1490:43
     |
1490 |     pub fn fde_address_encoding(&self) -> Option<constants::DwEhPe> {
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEhPe`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1522:17
     |
1522 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1522:17
     |
1522 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::PartialFrameDescriptionEntry<'bases, Section, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1546:10
     |
1546 |     ) -> Result<PartialFrameDescriptionEntry<'bases, Section, R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::PartialFrameDescriptionEntry<'bases, Section, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1546:10
     |
1546 |     ) -> Result<PartialFrameDescriptionEntry<'bases, Section, R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1561:64
     |
1561 |         F: FnMut(&Section, &BaseAddresses, Section::Offset) -> Result<CommonInformationEntry<R>>,
     |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1561:64
     |
1561 |         F: FnMut(&Section, &BaseAddresses, Section::Offset) -> Result<CommonInformationEntry<R>>,
     |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::FrameDescriptionEntry<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1559:43
     |
1559 |     pub fn parse<F>(&self, get_cie: F) -> Result<FrameDescriptionEntry<R>>
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::FrameDescriptionEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1577:17
     |
1577 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1577:17
     |
1577 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1633:64
     |
1633 |         F: FnMut(&Section, &BaseAddresses, Section::Offset) -> Result<CommonInformationEntry<R>>,
     |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1633:64
     |
1633 |         F: FnMut(&Section, &BaseAddresses, Section::Offset) -> Result<CommonInformationEntry<R>>,
     |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::FrameDescriptionEntry<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1630:10
     |
1630 |     ) -> Result<FrameDescriptionEntry<R>>
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::FrameDescriptionEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `(u64, u64)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1682:10
     |
1682 |     ) -> Result<(u64, u64)> {
     |          ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(u64, u64)`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1682:10
     |
1682 |     ) -> Result<(u64, u64)> {
     |          ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::UnwindTable<'a, 'ctx, R, A>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1708:10
     |
1708 |     ) -> Result<UnwindTable<'a, 'ctx, R, A>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::UnwindTable<'a, 'ctx, R, A>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1708:10
     |
1708 |     ) -> Result<UnwindTable<'a, 'ctx, R, A>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&'ctx read::cfi::UnwindTableRow<R, A>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1724:10
     |
1724 |     ) -> Result<&'ctx UnwindTableRow<R, A>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'ctx read::cfi::UnwindTableRow<R, A>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1724:10
     |
1724 |     ) -> Result<&'ctx UnwindTableRow<R, A>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1810:27
     |
1810 |     pub fn lsda(&self) -> Option<Pointer> {
     |                           ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::Pointer` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1824:34
     |
1824 |     pub fn personality(&self) -> Option<Pointer> {
     |                                  ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::Pointer`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1934:46
     |
1934 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
     |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1934:46
     |
1934 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
     |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1979:10
     |
1979 |     ) -> Result<()> {
     |          ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1979:10
     |
1979 |     ) -> Result<()> {
     |          ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2007:41
     |
2007 |     fn save_initial_rules(&mut self) -> Result<()> {
     |                                         ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2007:41
     |
2007 |     fn save_initial_rules(&mut self) -> Result<()> {
     |                                         ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2035:83
     |
2035 |     fn set_register_rule(&mut self, register: Register, rule: RegisterRule<R>) -> Result<()> {
     |                                                                                   ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2035:83
     |
2035 |     fn set_register_rule(&mut self, register: Register, rule: RegisterRule<R>) -> Result<()> {
     |                                                                                   ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::RegisterRule<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2042:55
     |
2042 |     fn get_initial_rule(&self, register: Register) -> Option<RegisterRule<R>> {
     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::RegisterRule<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2061:31
     |
2061 |     fn push_row(&mut self) -> Result<()> {
     |                               ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2061:31
     |
2061 |     fn push_row(&mut self) -> Result<()> {
     |                               ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2066:30
     |
2066 |     fn pop_row(&mut self) -> Result<()> {
     |                              ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2066:30
     |
2066 |     fn pop_row(&mut self) -> Result<()> {
     |                              ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2136:10
     |
2136 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2136:10
     |
2136 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::cfi::UnwindTable<'a, 'ctx, R, A>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2160:10
     |
2160 |     ) -> Result<Self> {
     |          ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::UnwindTable<'a, 'ctx, R, A>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2160:10
     |
2160 |     ) -> Result<Self> {
     |          ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<&read::cfi::UnwindTableRow<R, A>>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2208:35
     |
2208 |     pub fn next_row(&mut self) -> Result<Option<&UnwindTableRow<R, A>>> {
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<&read::cfi::UnwindTableRow<R, A>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2208:35
     |
2208 |     pub fn next_row(&mut self) -> Result<Option<&UnwindTableRow<R, A>>> {
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&read::cfi::UnwindTableRow<R, A>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2208:42
     |
2208 |     pub fn next_row(&mut self) -> Result<Option<&UnwindTableRow<R, A>>> {
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::cfi::UnwindTableRow<R, A>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&'ctx read::cfi::UnwindTableRow<R, A>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2241:38
     |
2241 |     pub fn into_current_row(self) -> Option<&'ctx UnwindTableRow<R, A>> {
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'ctx read::cfi::UnwindTableRow<R, A>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `bool` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2251:69
     |
2251 |     fn evaluate(&mut self, instruction: CallFrameInstruction<R>) -> Result<bool> {
     |                                                                     ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `bool`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2251:69
     |
2251 |     fn evaluate(&mut self, instruction: CallFrameInstruction<R>) -> Result<bool> {
     |                                                                     ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2453:46
     |
2453 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
     |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2453:46
     |
2453 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
     |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2496:69
     |
2496 |     fn set(&mut self, register: Register, rule: RegisterRule<R>) -> Result<()> {
     |                                                                     ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2496:69
     |
2496 |     fn set(&mut self, register: Register, rule: RegisterRule<R>) -> Result<()> {
     |                                                                     ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2575:10
     |
2575 | #[derive(Debug, Clone)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2575:10
     |
2575 | #[derive(Debug, Clone)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&(common::Register, read::cfi::RegisterRule<R>)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2583:27
     |
2583 |     fn next(&mut self) -> Option<Self::Item> {
     |                           ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&(common::Register, read::cfi::RegisterRule<R>)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2600:46
     |
2600 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
     |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2600:46
     |
2600 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
     |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2747:17
     |
2747 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2747:17
     |
2747 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2787:17
     |
2787 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2787:17
     |
2787 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2832:17
     |
2832 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2832:17
     |
2832 | #[derive(Clone, Debug, PartialEq, Eq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwEhPe` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3124:27
     |
3124 |         address_encoding: Option<DwEhPe>,
     |                           ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwEhPe`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::cfi::CallFrameInstruction<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3126:10
     |
3126 |     ) -> Result<CallFrameInstruction<R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CallFrameInstruction<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3126:10
     |
3126 |     ) -> Result<CallFrameInstruction<R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3326:17
     |
3326 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3326:17
     |
3326 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::cfi::CallFrameInstruction<R>>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3335:31
     |
3335 |     pub fn next(&mut self) -> Result<Option<CallFrameInstruction<R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::cfi::CallFrameInstruction<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3335:31
     |
3335 |     pub fn next(&mut self) -> Result<Option<CallFrameInstruction<R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CallFrameInstruction<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3335:38
     |
3335 |     pub fn next(&mut self) -> Result<Option<CallFrameInstruction<R>>> {
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CallFrameInstruction<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3376:23
     |
3376 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3376:23
     |
3376 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3417:17
     |
3417 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:3417:17
     |
3417 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Self` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:645:64
     |
645  |     fn entries<'bases>(&self, bases: &'bases BaseAddresses) -> CfiEntriesIter<'bases, Self, R> {
     |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
note: required by a bound in `read::cfi::CfiEntriesIter`
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:997:35
     |
997  | pub struct CfiEntriesIter<'bases, Section, R>
     |                                   ^^^^^^^ required by this bound in `CfiEntriesIter`
help: you could relax the implicit `Sized` bound on `Section` if it were used through indirection like `&Section` or `Box<Section>`
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:997:35
     |
997  | pub struct CfiEntriesIter<'bases, Section, R>
     |                                   ^^^^^^^ this could be changed to `Section: ?Sized`...
...
1002 |     section: Section,
     |              ------- ...if indirection were used here: `Box<Section>`
help: consider further restricting `Self`
     |
645  |     fn entries<'bases>(&self, bases: &'bases BaseAddresses) -> CfiEntriesIter<'bases, Self, R> where Self: core::marker::Sized {
     |                                                                                                +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:658:10
    |
658 |     ) -> Result<CommonInformationEntry<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:658:10
    |
658 |     ) -> Result<CommonInformationEntry<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::PartialFrameDescriptionEntry<'bases, Self, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:670:10
    |
670 |     ) -> Result<PartialFrameDescriptionEntry<'bases, Self, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::PartialFrameDescriptionEntry<'bases, Self, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:670:10
    |
670 |     ) -> Result<PartialFrameDescriptionEntry<'bases, Self, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `Self` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:670:17
     |
670  |     ) -> Result<PartialFrameDescriptionEntry<'bases, Self, R>> {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
note: required by a bound in `read::cfi::PartialFrameDescriptionEntry`
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1523:49
     |
1523 | pub struct PartialFrameDescriptionEntry<'bases, Section, R>
     |                                                 ^^^^^^^ required by this bound in `PartialFrameDescriptionEntry`
help: you could relax the implicit `Sized` bound on `Section` if it were used through indirection like `&Section` or `Box<Section>`
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1523:49
     |
1523 | pub struct PartialFrameDescriptionEntry<'bases, Section, R>
     |                                                 ^^^^^^^ this could be changed to `Section: ?Sized`...
...
1533 |     section: Section,
     |              ------- ...if indirection were used here: `Box<Section>`
help: consider further restricting `Self`
     |
670  |     ) -> Result<PartialFrameDescriptionEntry<'bases, Self, R>> where Self: core::marker::Sized {
     |                                                                +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:685:58
    |
685 |         F: FnMut(&Self, &BaseAddresses, Self::Offset) -> Result<CommonInformationEntry<R>>,
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:685:58
    |
685 |         F: FnMut(&Self, &BaseAddresses, Self::Offset) -> Result<CommonInformationEntry<R>>,
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::FrameDescriptionEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:683:10
    |
683 |     ) -> Result<FrameDescriptionEntry<R>>
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::FrameDescriptionEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:709:58
    |
709 |         F: FnMut(&Self, &BaseAddresses, Self::Offset) -> Result<CommonInformationEntry<R>>,
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:709:58
    |
709 |         F: FnMut(&Self, &BaseAddresses, Self::Offset) -> Result<CommonInformationEntry<R>>,
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::FrameDescriptionEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:707:10
    |
707 |     ) -> Result<FrameDescriptionEntry<R>>
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::FrameDescriptionEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::cfi::CommonInformationEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:780:58
    |
780 |         F: FnMut(&Self, &BaseAddresses, Self::Offset) -> Result<CommonInformationEntry<R>>,
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::cfi::CommonInformationEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:780:58
    |
780 |         F: FnMut(&Self, &BaseAddresses, Self::Offset) -> Result<CommonInformationEntry<R>>,
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&'ctx read::cfi::UnwindTableRow<R, A>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:778:10
    |
778 |     ) -> Result<&'ctx UnwindTableRow<R, A>>
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'ctx read::cfi::UnwindTableRow<R, A>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `Self` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:1875:27
     |
1875 |     type Stack: ArrayLike<Item = UnwindTableRow<R, Self>>;
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
note: required by a bound in `read::cfi::UnwindTableRow`
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/cfi.rs:2591:38
     |
2591 | pub struct UnwindTableRow<R: Reader, S: UnwindContextStorage<R> = StoreOnHeap> {
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `UnwindTableRow`
help: consider further restricting `Self`
     |
1868 | pub trait UnwindContextStorage<R: Reader>: Sized + core::marker::Sized {
     |                                                  +++++++++++++++++++++
help: consider relaxing the implicit `Sized` restriction
     |
2591 | pub struct UnwindTableRow<R: Reader, S: UnwindContextStorage<R> + ?Sized = StoreOnHeap> {
     |                                                                 ++++++++

error[E0277]: the size for values of type `read::dwarf::Dwarf<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:22:17
    |
22  | #[derive(Debug, Default)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Dwarf<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::IncompleteLineProgram<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:826:23
    |
826 |     pub line_program: Option<IncompleteLineProgram<R, Offset>>,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::IncompleteLineProgram<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `common::DwoId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:829:17
    |
829 |     pub dwo_id: Option<DwoId>,
    |                 ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DwoId`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::rnglists::Range` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1053:12
     |
1053 |     Single(Option<Range>),
     |            ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::Range`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::dwarf::RangeIter<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1057:29
     |
1057 | impl<R: Reader> Default for RangeIter<R> {
     |                             ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::RangeIter<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:22:10
    |
22  | #[derive(Debug, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:22:10
    |
22  | #[derive(Debug, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `(common::SectionId,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:78:12
    |
78  |         F: FnMut(SectionId) -> core::result::Result<T, E>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::SectionId,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(common::SectionId,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:78:12
    |
78  |         F: FnMut(SectionId) -> core::result::Result<T, E>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(common::SectionId,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:78:32
    |
78  |         F: FnMut(SectionId) -> core::result::Result<T, E>,
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
help: consider restricting type parameter `T`
    |
64  | impl<T: rustc_std_workspace_core::marker::Sized> Dwarf<T> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `E` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:78:32
    |
78  |         F: FnMut(SectionId) -> core::result::Result<T, E>,
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
help: consider further restricting type parameter `E`
    |
78  |         F: FnMut(SectionId) -> core::result::Result<T, E>, E: rustc_std_workspace_core::marker::Sized
    |                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the size for values of type `read::dwarf::Dwarf<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:76:42
    |
76  |     pub fn load<F, E>(mut section: F) -> core::result::Result<Self, E>
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Dwarf<T>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `(common::SectionId,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:109:12
    |
109 |         F: FnMut(SectionId) -> core::result::Result<T, E>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::SectionId,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(common::SectionId,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:109:12
    |
109 |         F: FnMut(SectionId) -> core::result::Result<T, E>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(common::SectionId,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:109:32
    |
109 |         F: FnMut(SectionId) -> core::result::Result<T, E>,
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
help: consider restricting type parameter `T`
    |
64  | impl<T: rustc_std_workspace_core::marker::Sized> Dwarf<T> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `E` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:109:32
    |
109 |         F: FnMut(SectionId) -> core::result::Result<T, E>,
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
help: consider further restricting type parameter `E`
    |
109 |         F: FnMut(SectionId) -> core::result::Result<T, E>, E: rustc_std_workspace_core::marker::Sized
    |                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:107:53
    |
107 |     pub fn load_sup<F, E>(&mut self, section: F) -> core::result::Result<(), E>
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:144:12
    |
144 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:144:12
    |
144 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `&read::dwarf::Dwarf<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:164:26
    |
164 |     pub fn sup(&self) -> Option<&Dwarf<T>> {
    |                          ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::dwarf::Dwarf<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::dwarf::Unit<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:181:50
    |
181 |     pub fn unit(&self, header: UnitHeader<R>) -> Result<Unit<R>> {
    |                                                  ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Unit<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:181:50
    |
181 |     pub fn unit(&self, header: UnitHeader<R>) -> Result<Unit<R>> {
    |                                                  ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::abbrev::Abbreviations` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:197:58
    |
197 |     pub fn abbreviations(&self, unit: &UnitHeader<R>) -> Result<Abbreviations> {
    |                                                          ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Abbreviations`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:197:58
    |
197 |     pub fn abbreviations(&self, unit: &UnitHeader<R>) -> Result<Abbreviations> {
    |                                                          ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::DebugStrOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:207:10
    |
207 |     ) -> Result<DebugStrOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugStrOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:207:10
    |
207 |     ) -> Result<DebugStrOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:214:64
    |
214 |     pub fn string(&self, offset: DebugStrOffset<R::Offset>) -> Result<R> {
    |                                                                ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:220:73
    |
220 |     pub fn line_string(&self, offset: DebugLineStrOffset<R::Offset>) -> Result<R> {
    |                                                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:238:75
    |
238 |     pub fn attr_string(&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<R> {
    |                                                                           ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:263:80
    |
263 |     pub fn address(&self, unit: &Unit<R>, index: DebugAddrIndex<R::Offset>) -> Result<u64> {
    |                                                                                ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:263:80
    |
263 |     pub fn address(&self, unit: &Unit<R>, index: DebugAddrIndex<R::Offset>) -> Result<u64> {
    |                                                                                ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<u64>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:277:76
    |
277 |     pub fn attr_address(&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<Option<u64>> {
    |                                                                            ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<u64>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:277:76
    |
277 |     pub fn attr_address(&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<Option<u64>> {
    |                                                                            ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:277:83
    |
277 |     pub fn attr_address(&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<Option<u64>> {
    |                                                                                   ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `common::RangeListsOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:305:10
    |
305 |     ) -> Result<RangeListsOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::RangeListsOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:305:10
    |
305 |     ) -> Result<RangeListsOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::rnglists::RngListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:315:10
    |
315 |     ) -> Result<RngListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RngListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:315:10
    |
315 |     ) -> Result<RngListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::rnglists::RawRngListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:330:10
    |
330 |     ) -> Result<RawRngListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RawRngListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:330:10
    |
330 |     ) -> Result<RawRngListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<common::RangeListsOffset<<R as read::reader::Reader>::Offset>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:347:10
    |
347 |     ) -> Result<Option<RangeListsOffset<R::Offset>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<common::RangeListsOffset<<R as read::reader::Reader>::Offset>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:347:10
    |
347 |     ) -> Result<Option<RangeListsOffset<R::Offset>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::RangeListsOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:347:17
    |
347 |     ) -> Result<Option<RangeListsOffset<R::Offset>>> {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::RangeListsOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::rnglists::RngListIter<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:370:10
    |
370 |     ) -> Result<Option<RngListIter<R>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::rnglists::RngListIter<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:370:10
    |
370 |     ) -> Result<Option<RngListIter<R>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::rnglists::RngListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:370:17
    |
370 |     ) -> Result<Option<RngListIter<R>>> {
    |                 ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RngListIter<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::dwarf::RangeIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:384:10
    |
384 |     ) -> Result<RangeIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::RangeIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:384:10
    |
384 |     ) -> Result<RangeIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::dwarf::RangeIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:426:50
    |
426 |     pub fn unit_ranges(&self, unit: &Unit<R>) -> Result<RangeIter<R>> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::RangeIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:426:50
    |
426 |     pub fn unit_ranges(&self, unit: &Unit<R>) -> Result<RangeIter<R>> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::LocationListsOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:438:10
    |
438 |     ) -> Result<LocationListsOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::LocationListsOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:438:10
    |
438 |     ) -> Result<LocationListsOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::LocListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:448:10
    |
448 |     ) -> Result<LocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:448:10
    |
448 |     ) -> Result<LocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::RawLocListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:472:10
    |
472 |     ) -> Result<RawLocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::RawLocListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:472:10
    |
472 |     ) -> Result<RawLocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<common::LocationListsOffset<<R as read::reader::Reader>::Offset>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:492:10
    |
492 |     ) -> Result<Option<LocationListsOffset<R::Offset>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<common::LocationListsOffset<<R as read::reader::Reader>::Offset>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:492:10
    |
492 |     ) -> Result<Option<LocationListsOffset<R::Offset>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::LocationListsOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:492:17
    |
492 |     ) -> Result<Option<LocationListsOffset<R::Offset>>> {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::LocationListsOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::loclists::LocListIter<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:515:10
    |
515 |     ) -> Result<Option<LocListIter<R>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::loclists::LocListIter<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:515:10
    |
515 |     ) -> Result<Option<LocListIter<R>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::LocListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:515:17
    |
515 |     ) -> Result<Option<LocListIter<R>>> {
    |                 ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocListIter<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `(bool, common::SectionId, <R as read::reader::Reader>::Offset)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:525:59
    |
525 |     pub fn lookup_offset_id(&self, id: ReaderOffsetId) -> Option<(bool, SectionId, R::Offset)> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(bool, common::SectionId, <R as read::reader::Reader>::Offset)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:570:10
    |
570 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:570:10
    |
570 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `(common::SectionId,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:622:12
    |
622 |         F: FnMut(SectionId) -> core::result::Result<R, E>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::SectionId,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(common::SectionId,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:622:12
    |
622 |         F: FnMut(SectionId) -> core::result::Result<R, E>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(common::SectionId,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:623:12
    |
623 |         E: From<Error>,
    |            ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`

error[E0277]: the size for values of type `read::dwarf::DwarfPackage<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:620:52
    |
620 |     pub fn load<F, E>(mut section: F, empty: R) -> core::result::Result<Self, E>
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::DwarfPackage<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::dwarf::Dwarf<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:644:60
    |
644 |     pub fn find_cu(&self, id: DwoId, parent: &Dwarf<R>) -> Result<Option<Dwarf<R>>> {
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::dwarf::Dwarf<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:644:60
    |
644 |     pub fn find_cu(&self, id: DwoId, parent: &Dwarf<R>) -> Result<Option<Dwarf<R>>> {
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::dwarf::Dwarf<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:644:67
    |
644 |     pub fn find_cu(&self, id: DwoId, parent: &Dwarf<R>) -> Result<Option<Dwarf<R>>> {
    |                                                                   ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Dwarf<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::dwarf::Dwarf<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:658:10
    |
658 |     ) -> Result<Option<Dwarf<R>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::dwarf::Dwarf<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:658:10
    |
658 |     ) -> Result<Option<Dwarf<R>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::dwarf::Dwarf<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:658:17
    |
658 |     ) -> Result<Option<Dwarf<R>>> {
    |                 ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Dwarf<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::dwarf::Dwarf<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:671:65
    |
671 |     pub fn cu_sections(&self, index: u32, parent: &Dwarf<R>) -> Result<Dwarf<R>> {
    |                                                                 ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Dwarf<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:671:65
    |
671 |     pub fn cu_sections(&self, index: u32, parent: &Dwarf<R>) -> Result<Dwarf<R>> {
    |                                                                 ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::dwarf::Dwarf<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:680:65
    |
680 |     pub fn tu_sections(&self, index: u32, parent: &Dwarf<R>) -> Result<Dwarf<R>> {
    |                                                                 ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Dwarf<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:680:65
    |
680 |     pub fn tu_sections(&self, index: u32, parent: &Dwarf<R>) -> Result<Dwarf<R>> {
    |                                                                 ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::dwarf::Dwarf<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:691:10
    |
691 |     ) -> Result<Dwarf<R>> {
    |          ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Dwarf<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:691:10
    |
691 |     ) -> Result<Dwarf<R>> {
    |          ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:792:10
    |
792 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:792:10
    |
792 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::dwarf::Unit<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:835:60
    |
835 |     pub fn new(dwarf: &Dwarf<R>, header: UnitHeader<R>) -> Result<Self> {
    |                                                            ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::dwarf::Unit<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:835:60
    |
835 |     pub fn new(dwarf: &Dwarf<R>, header: UnitHeader<R>) -> Result<Self> {
    |                                                            ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::DebuggingInformationEntry<'_, '_, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:953:59
    |
953 |     pub fn entry(&self, offset: UnitOffset<R::Offset>) -> Result<DebuggingInformationEntry<R>> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebuggingInformationEntry<'_, '_, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:953:59
    |
953 |     pub fn entry(&self, offset: UnitOffset<R::Offset>) -> Result<DebuggingInformationEntry<R>> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::EntriesCursor<'_, '_, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:966:71
    |
966 |     pub fn entries_at_offset(&self, offset: UnitOffset<R::Offset>) -> Result<EntriesCursor<R>> {
    |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesCursor<'_, '_, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:966:71
    |
966 |     pub fn entries_at_offset(&self, offset: UnitOffset<R::Offset>) -> Result<EntriesCursor<R>> {
    |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:973:40
    |
973 |     pub fn entries_tree(&self, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesTree<R>> {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::unit::EntriesTree<'_, '_, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:973:74
    |
973 |     pub fn entries_tree(&self, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesTree<R>> {
    |                                                                          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesTree<'_, '_, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:973:74
    |
973 |     pub fn entries_tree(&self, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesTree<R>> {
    |                                                                          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:979:39
    |
979 |     pub fn entries_raw(&self, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesRaw<R>> {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::unit::EntriesRaw<'_, '_, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:979:73
    |
979 |     pub fn entries_raw(&self, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesRaw<R>> {
    |                                                                         ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesRaw<'_, '_, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:979:73
    |
979 |     pub fn entries_raw(&self, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesRaw<R>> {
    |                                                                         ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:999:56
    |
999 |     pub fn to_unit_offset<R>(&self, unit: &Unit<R>) -> Option<UnitOffset<T>>
    |                                                        ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1048:10
     |
1048 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1048:10
     |
1048 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1051:10
     |
1051 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1051:10
     |
1051 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::rnglists::Range>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1065:31
     |
1065 |     pub fn next(&mut self) -> Result<Option<Range>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::rnglists::Range>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1065:31
     |
1065 |     pub fn next(&mut self) -> Result<Option<Range>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::rnglists::Range` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/dwarf.rs:1065:38
     |
1065 |     pub fn next(&mut self) -> Result<Option<Range>> {
     |                                      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::Range`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::endian_slice::EndianSlice<'input, Endian>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:16:17
    |
16  | #[derive(Debug, Default, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::endian_slice::EndianSlice<'input, Endian>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::endian_slice::EndianSlice<'input, Endian>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:16:26
    |
16  | #[derive(Debug, Default, Clone, Copy, PartialEq, Eq, Hash)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::endian_slice::EndianSlice<'input, Endian>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::endian_slice::EndianSlice<'input, Endian>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:16:33
    |
16  | #[derive(Debug, Default, Clone, Copy, PartialEq, Eq, Hash)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::endian_slice::EndianSlice<'input, Endian>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::endian_slice::EndianSlice<'input, Endian>`
    = note: required for `read::endian_slice::EndianSlice<'input, Endian>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:180:22
    |
180 | impl<'input, Endian> Index<RangeFrom<usize>> for EndianSlice<'input, Endian>
    |                      ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::ops::RangeFrom`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/range.rs:187:22
    |
187 | pub struct RangeFrom<Idx> {
    |                      ^^^ required by this bound in `RangeFrom`

error[E0277]: the size for values of type `&'input [u8]` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:200:22
    |
200 | impl<'input, Endian> Into<&'input [u8]> for EndianSlice<'input, Endian>
    |                      ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'input [u8]`
note: required by a bound in `rustc_std_workspace_core::convert::Into`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:447:16
    |
447 | pub trait Into<T>: Sized {
    |                ^ required by this bound in `Into`

error[E0277]: the size for values of type `read::endian_slice::EndianSlice<'input, Endian>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:200:45
    |
200 | impl<'input, Endian> Into<&'input [u8]> for EndianSlice<'input, Endian>
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::endian_slice::EndianSlice<'input, Endian>`
note: required by a bound in `rustc_std_workspace_core::convert::Into`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:447:20
    |
447 | pub trait Into<T>: Sized {
    |                    ^^^^^ required by this bound in `Into`

error[E0277]: the size for values of type `read::endian_slice::EndianSlice<'input, Endian>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:209:33
    |
209 | impl<'input, Endian> Reader for EndianSlice<'input, Endian>
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::endian_slice::EndianSlice<'input, Endian>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::endian_slice::EndianSlice<'input, Endian>`
    = note: required for `read::endian_slice::EndianSlice<'input, Endian>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `read::reader::Reader`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:215:27
    |
215 | pub trait Reader: Debug + Clone {
    |                           ^^^^^ required by this bound in `Reader`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:16:10
    |
16  | #[derive(Debug, Default, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:16:10
    |
16  | #[derive(Debug, Default, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:62:37
    |
62  |     pub fn find(&self, byte: u8) -> Option<usize> {
    |                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&'input str` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:81:32
    |
81  |     pub fn to_string(&self) -> Result<&'input str> {
    |                                ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'input str`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:81:32
    |
81  |     pub fn to_string(&self) -> Result<&'input str> {
    |                                ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&'input [u8]` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:94:45
    |
94  |     fn read_slice(&mut self, len: usize) -> Result<&'input [u8]> {
    |                                             ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'input [u8]`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:94:45
    |
94  |     fn read_slice(&mut self, len: usize) -> Result<&'input [u8]> {
    |                                             ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:126:30
    |
126 |     pub fn range(&self, idx: Range<usize>) -> EndianSlice<'input, Endian> {
    |                              ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::ops::Range`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/range.rs:80:18
    |
80  | pub struct Range<Idx> {
    |                  ^^^ required by this bound in `Range`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:144:35
    |
144 |     pub fn range_from(&self, idx: RangeFrom<usize>) -> EndianSlice<'input, Endian> {
    |                                   ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::ops::RangeFrom`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/range.rs:187:22
    |
187 | pub struct RangeFrom<Idx> {
    |                      ^^^ required by this bound in `RangeFrom`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:162:33
    |
162 |     pub fn range_to(&self, idx: RangeTo<usize>) -> EndianSlice<'input, Endian> {
    |                                 ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::ops::RangeTo`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/range.rs:268:20
    |
268 | pub struct RangeTo<Idx> {
    |                    ^^^ required by this bound in `RangeTo`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:185:26
    |
185 |     fn index(&self, idx: RangeFrom<usize>) -> &Self::Output {
    |                          ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::ops::RangeFrom`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/range.rs:187:22
    |
187 | pub struct RangeFrom<Idx> {
    |                      ^^^ required by this bound in `RangeFrom`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:237:43
    |
237 |     fn truncate(&mut self, len: usize) -> Result<()> {
    |                                           ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:237:43
    |
237 |     fn truncate(&mut self, len: usize) -> Result<()> {
    |                                           ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:257:55
    |
257 |     fn lookup_offset_id(&self, id: ReaderOffsetId) -> Option<Self::Offset> {
    |                                                       ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:269:33
    |
269 |     fn find(&self, byte: u8) -> Result<usize> {
    |                                 ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:269:33
    |
269 |     fn find(&self, byte: u8) -> Result<usize> {
    |                                 ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:275:39
    |
275 |     fn skip(&mut self, len: usize) -> Result<()> {
    |                                       ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:275:39
    |
275 |     fn skip(&mut self, len: usize) -> Result<()> {
    |                                       ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::endian_slice::EndianSlice<'input, Endian>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:285:40
    |
285 |     fn split(&mut self, len: usize) -> Result<Self> {
    |                                        ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::endian_slice::EndianSlice<'input, Endian>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:285:40
    |
285 |     fn split(&mut self, len: usize) -> Result<Self> {
    |                                        ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:297:27
    |
297 |     fn to_slice(&self) -> Result<Cow<[u8]>> {
    |                           ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:303:28
    |
303 |     fn to_string(&self) -> Result<Cow<str>> {
    |                            ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:312:34
    |
312 |     fn to_string_lossy(&self) -> Result<Cow<str>> {
    |                                  ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:317:49
    |
317 |     fn read_slice(&mut self, buf: &mut [u8]) -> Result<()> {
    |                                                 ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/endian_slice.rs:317:49
    |
317 |     fn read_slice(&mut self, buf: &mut [u8]) -> Result<()> {
    |                                                 ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::reader::ReaderOffsetId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:18:17
    |
18  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::reader::ReaderOffsetId`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::reader::ReaderOffsetId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:18:24
    |
18  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::reader::ReaderOffsetId`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::reader::ReaderOffsetId`
    = note: required for `read::reader::ReaderOffsetId` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:54:23
   |
54 | impl ReaderOffset for u64 {
   |                       ^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
   = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u64`
   = note: required for `u64` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `u64` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `read::reader::ReaderOffset`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:25:13
   |
24 | pub trait ReaderOffset:
   |           ------------ required by a bound in this
25 |     Debug + Copy + Eq + Ord + Hash + Add<Output = Self> + AddAssign + Sub<Output = Self>
   |             ^^^^ required by this bound in `ReaderOffset`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:96:23
   |
96 | impl ReaderOffset for u32 {
   |                       ^^^ doesn't have a size known at compile-time
   |
   = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
   = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `u32`
   = note: required for `u32` to implement `rustc_std_workspace_core::clone::Clone`
   = note: required for `u32` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `read::reader::ReaderOffset`
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:25:13
   |
24 | pub trait ReaderOffset:
   |           ------------ required by a bound in this
25 |     Debug + Copy + Eq + Ord + Hash + Add<Output = Self> + AddAssign + Sub<Output = Self>
   |             ^^^^ required by this bound in `ReaderOffset`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:143:23
    |
143 | impl ReaderOffset for usize {
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
    = help: the trait `rustc_std_workspace_core::marker::Copy` is implemented for `usize`
    = note: required for `usize` to implement `rustc_std_workspace_core::clone::Clone`
    = note: required for `usize` to implement `rustc_std_workspace_core::marker::Copy`
note: required by a bound in `read::reader::ReaderOffset`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:25:13
    |
24  | pub trait ReaderOffset:
    |           ------------ required by a bound in this
25  |     Debug + Copy + Eq + Ord + Hash + Add<Output = Self> + AddAssign + Sub<Output = Self>
    |             ^^^^ required by this bound in `ReaderOffset`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:18:10
    |
18  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:18:10
    |
18  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:76:33
    |
76  |     fn from_u64(offset: u64) -> Result<Self> {
    |                                 ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:76:33
    |
76  |     fn from_u64(offset: u64) -> Result<Self> {
    |                                 ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:91:42
    |
91  |     fn checked_sub(self, other: Self) -> Option<Self> {
    |                                          ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:118:35
    |
118 |     fn from_u64(offset64: u64) -> Result<Self> {
    |                                   ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:118:35
    |
118 |     fn from_u64(offset64: u64) -> Result<Self> {
    |                                   ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:138:42
    |
138 |     fn checked_sub(self, other: Self) -> Option<Self> {
    |                                          ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:165:35
    |
165 |     fn from_u64(offset64: u64) -> Result<Self> {
    |                                   ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:165:35
    |
165 |     fn from_u64(offset64: u64) -> Result<Self> {
    |                                   ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:185:42
    |
185 |     fn checked_sub(self, other: Self) -> Option<Self> {
    |                                          ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:42:33
    |
42  |     fn from_u64(offset: u64) -> Result<Self>;
    |                                 ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:232:50
    |
232 |     fn truncate(&mut self, len: Self::Offset) -> Result<()>;
    |                                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:232:50
    |
232 |     fn truncate(&mut self, len: Self::Offset) -> Result<()>;
    |                                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:250:33
    |
250 |     fn find(&self, byte: u8) -> Result<Self::Offset>;
    |                                 ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:253:46
    |
253 |     fn skip(&mut self, len: Self::Offset) -> Result<()>;
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:253:46
    |
253 |     fn skip(&mut self, len: Self::Offset) -> Result<()>;
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:259:47
    |
259 |     fn split(&mut self, len: Self::Offset) -> Result<Self>;
    |                                               ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:277:27
    |
277 |     fn to_slice(&self) -> Result<Cow<[u8]>>;
    |                           ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:288:28
    |
288 |     fn to_string(&self) -> Result<Cow<str>>;
    |                            ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:297:34
    |
297 |     fn to_string_lossy(&self) -> Result<Cow<str>>;
    |                                  ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:300:49
    |
300 |     fn read_slice(&mut self, buf: &mut [u8]) -> Result<()>;
    |                                                 ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:300:49
    |
300 |     fn read_slice(&mut self, buf: &mut [u8]) -> Result<()>;
    |                                                 ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:304:39
    |
304 |     fn read_u8_array<A>(&mut self) -> Result<A>
    |                                       ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:321:30
    |
321 |     fn read_u8(&mut self) -> Result<u8> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:321:30
    |
321 |     fn read_u8(&mut self) -> Result<u8> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:328:30
    |
328 |     fn read_i8(&mut self) -> Result<i8> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i8`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:328:30
    |
328 |     fn read_i8(&mut self) -> Result<i8> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:335:31
    |
335 |     fn read_u16(&mut self) -> Result<u16> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:335:31
    |
335 |     fn read_u16(&mut self) -> Result<u16> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:342:31
    |
342 |     fn read_i16(&mut self) -> Result<i16> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i16`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:342:31
    |
342 |     fn read_i16(&mut self) -> Result<i16> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:349:31
    |
349 |     fn read_u32(&mut self) -> Result<u32> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:349:31
    |
349 |     fn read_u32(&mut self) -> Result<u32> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:356:31
    |
356 |     fn read_i32(&mut self) -> Result<i32> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:356:31
    |
356 |     fn read_i32(&mut self) -> Result<i32> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:363:31
    |
363 |     fn read_u64(&mut self) -> Result<u64> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:363:31
    |
363 |     fn read_u64(&mut self) -> Result<u64> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:370:31
    |
370 |     fn read_i64(&mut self) -> Result<i64> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:370:31
    |
370 |     fn read_i64(&mut self) -> Result<i64> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:377:31
    |
377 |     fn read_f32(&mut self) -> Result<f32> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `f32`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:377:31
    |
377 |     fn read_f32(&mut self) -> Result<f32> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:384:31
    |
384 |     fn read_f64(&mut self) -> Result<f64> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `f64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:384:31
    |
384 |     fn read_f64(&mut self) -> Result<f64> {
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:395:42
    |
395 |     fn read_uint(&mut self, n: usize) -> Result<u64> {
    |                                          ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:395:42
    |
395 |     fn read_uint(&mut self, n: usize) -> Result<u64> {
    |                                          ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:402:49
    |
402 |     fn read_null_terminated_slice(&mut self) -> Result<Self> {
    |                                                 ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:410:34
    |
410 |     fn skip_leb128(&mut self) -> Result<()> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:410:34
    |
410 |     fn skip_leb128(&mut self) -> Result<()> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:415:35
    |
415 |     fn read_uleb128(&mut self) -> Result<u64> {
    |                                   ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:415:35
    |
415 |     fn read_uleb128(&mut self) -> Result<u64> {
    |                                   ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:420:39
    |
420 |     fn read_uleb128_u32(&mut self) -> Result<u32> {
    |                                       ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:420:39
    |
420 |     fn read_uleb128_u32(&mut self) -> Result<u32> {
    |                                       ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:427:39
    |
427 |     fn read_uleb128_u16(&mut self) -> Result<u16> {
    |                                       ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:427:39
    |
427 |     fn read_uleb128_u16(&mut self) -> Result<u16> {
    |                                       ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:432:35
    |
432 |     fn read_sleb128(&mut self) -> Result<i64> {
    |                                   ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:432:35
    |
432 |     fn read_sleb128(&mut self) -> Result<i64> {
    |                                   ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(<Self as read::reader::Reader>::Offset, common::Format)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:440:42
    |
440 |     fn read_initial_length(&mut self) -> Result<(Self::Offset, Format)> {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(<Self as read::reader::Reader>::Offset, common::Format)`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:440:42
    |
440 |     fn read_initial_length(&mut self) -> Result<(Self::Offset, Format)> {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:456:53
    |
456 |     fn read_address(&mut self, address_size: u8) -> Result<u64> {
    |                                                     ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:456:53
    |
456 |     fn read_address(&mut self, address_size: u8) -> Result<u64> {
    |                                                     ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:470:48
    |
470 |     fn read_word(&mut self, format: Format) -> Result<Self::Offset> {
    |                                                ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:479:50
    |
479 |     fn read_length(&mut self, format: Format) -> Result<Self::Offset> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:485:50
    |
485 |     fn read_offset(&mut self, format: Format) -> Result<Self::Offset> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/reader.rs:492:50
    |
492 |     fn read_sized_offset(&mut self, size: u8) -> Result<Self::Offset> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::abbrev::DebugAbbrev<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:18:17
    |
18  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::DebugAbbrev<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::DebugAbbrev<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:18:26
    |
18  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::DebugAbbrev<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::DebugAbbrev<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:18:33
    |
18  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::DebugAbbrev<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::abbrev::DebugAbbrev<R>`
    = note: required for `read::abbrev::DebugAbbrev<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::DebugAbbrev<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:85:24
    |
85  | impl<R> Section<R> for DebugAbbrev<R> {
    |                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::DebugAbbrev<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::abbrev::DebugAbbrev<R>`
    = note: required for `read::abbrev::DebugAbbrev<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:95:9
    |
95  | impl<R> From<R> for DebugAbbrev<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
95  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugAbbrev<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::abbrev::DebugAbbrev<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:95:21
    |
95  | impl<R> From<R> for DebugAbbrev<R> {
    |                     ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::DebugAbbrev<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::abbrev::Abbreviations` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:108:17
    |
108 | #[derive(Debug, Default, Clone)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Abbreviations`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::Abbreviations` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:108:26
    |
108 | #[derive(Debug, Default, Clone)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Abbreviations`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::Abbreviation` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:184:17
    |
184 | #[derive(Debug, Clone, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Abbreviation`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::Attributes` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:287:10
    |
287 | #[derive(Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Attributes`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::AttributeSpecification` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:354:6
    |
354 | impl FromIterator<AttributeSpecification> for Attributes {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::AttributeSpecification`
note: required by a bound in `rustc_std_workspace_core::iter::FromIterator`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:122:24
    |
122 | pub trait FromIterator<A>: Sized {
    |                        ^ required by this bound in `FromIterator`

error[E0277]: the size for values of type `read::abbrev::Attributes` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:354:47
    |
354 | impl FromIterator<AttributeSpecification> for Attributes {
    |                                               ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Attributes`
note: required by a bound in `rustc_std_workspace_core::iter::FromIterator`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:122:28
    |
122 | pub trait FromIterator<A>: Sized {
    |                            ^^^^^ required by this bound in `FromIterator`

error[E0277]: the size for values of type `read::abbrev::Attributes` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:367:44
    |
367 | impl From<Vec<AttributeSpecification>> for Attributes {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Attributes`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::abbrev::AttributeSpecification` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:375:17
    |
375 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::AttributeSpecification`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::AttributeSpecification` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:375:24
    |
375 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::AttributeSpecification`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::abbrev::AttributeSpecification`
    = note: required for `read::abbrev::AttributeSpecification` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:469:82
    |
469 | pub(crate) fn get_attribute_size(form: constants::DwForm, encoding: Encoding) -> Option<u8> {
    |                                                                                  ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:18:10
    |
18  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:18:10
    |
18  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::abbrev::Abbreviations` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:54:10
    |
54  |     ) -> Result<Abbreviations> {
    |          ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Abbreviations`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:54:10
    |
54  |     ) -> Result<Abbreviations> {
    |          ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:79:12
    |
79  |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:79:12
    |
79  |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:108:10
    |
108 | #[derive(Debug, Default, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:108:10
    |
108 | #[derive(Debug, Default, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:128:51
    |
128 |     fn insert(&mut self, abbrev: Abbreviation) -> ::core::result::Result<(), ()> {
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `&read::abbrev::Abbreviation` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:157:37
    |
157 |     pub fn get(&self, code: u64) -> Option<&Abbreviation> {
    |                                     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::abbrev::Abbreviation`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::abbrev::Abbreviations` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:169:43
    |
169 |     fn parse<R: Reader>(input: &mut R) -> Result<Abbreviations> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Abbreviations`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:169:43
    |
169 |     fn parse<R: Reader>(input: &mut R) -> Result<Abbreviations> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:184:10
    |
184 | #[derive(Debug, Clone, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:184:10
    |
184 | #[derive(Debug, Clone, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwTag` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:238:47
    |
238 |     fn parse_tag<R: Reader>(input: &mut R) -> Result<constants::DwTag> {
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwTag`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:238:47
    |
238 |     fn parse_tag<R: Reader>(input: &mut R) -> Result<constants::DwTag> {
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `constants::DwChildren` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:248:56
    |
248 |     fn parse_has_children<R: Reader>(input: &mut R) -> Result<constants::DwChildren> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwChildren`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:248:56
    |
248 |     fn parse_has_children<R: Reader>(input: &mut R) -> Result<constants::DwChildren> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::abbrev::Attributes` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:260:54
    |
260 |     fn parse_attributes<R: Reader>(input: &mut R) -> Result<Attributes> {
    |                                                      ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Attributes`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:260:54
    |
260 |     fn parse_attributes<R: Reader>(input: &mut R) -> Result<Attributes> {
    |                                                      ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::abbrev::Abbreviation>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:272:43
    |
272 |     fn parse<R: Reader>(input: &mut R) -> Result<Option<Abbreviation>> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::abbrev::Abbreviation>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:272:43
    |
272 |     fn parse<R: Reader>(input: &mut R) -> Result<Option<Abbreviation>> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::abbrev::Abbreviation` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:272:50
    |
272 |     fn parse<R: Reader>(input: &mut R) -> Result<Option<Abbreviation>> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Abbreviation`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:331:50
    |
331 |     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
    |                                                  ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:331:50
    |
331 |     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
    |                                                  ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:375:10
    |
375 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:375:10
    |
375 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:389:31
    |
389 |         implicit_const_value: Option<i64>,
    |                               ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:416:43
    |
416 |     pub fn implicit_const_value(&self) -> Option<i64> {
    |                                           ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:428:62
    |
428 |     pub fn size<R: Reader>(&self, header: &UnitHeader<R>) -> Option<usize> {
    |                                                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `constants::DwForm` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:433:48
    |
433 |     fn parse_form<R: Reader>(input: &mut R) -> Result<constants::DwForm> {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwForm`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:433:48
    |
433 |     fn parse_form<R: Reader>(input: &mut R) -> Result<constants::DwForm> {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::abbrev::AttributeSpecification>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:444:43
    |
444 |     fn parse<R: Reader>(input: &mut R) -> Result<Option<AttributeSpecification>> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::abbrev::AttributeSpecification>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:444:43
    |
444 |     fn parse<R: Reader>(input: &mut R) -> Result<Option<AttributeSpecification>> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::abbrev::AttributeSpecification` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/abbrev.rs:444:50
    |
444 |     fn parse<R: Reader>(input: &mut R) -> Result<Option<AttributeSpecification>> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::AttributeSpecification`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::aranges::DebugAranges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:7:17
    |
7   | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::DebugAranges<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::aranges::DebugAranges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:7:26
    |
7   | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::DebugAranges<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::aranges::DebugAranges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:7:33
    |
7   | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::DebugAranges<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::aranges::DebugAranges<R>`
    = note: required for `read::aranges::DebugAranges<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::aranges::DebugAranges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:81:24
    |
81  | impl<R> Section<R> for DebugAranges<R> {
    |                        ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::DebugAranges<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::aranges::DebugAranges<R>`
    = note: required for `read::aranges::DebugAranges<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:91:9
    |
91  | impl<R> From<R> for DebugAranges<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
91  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugAranges<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::aranges::DebugAranges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:91:21
    |
91  | impl<R> From<R> for DebugAranges<R> {
    |                     ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::DebugAranges<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::aranges::ArangeHeaderIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:98:10
    |
98  | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeHeaderIter<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::aranges::ArangeHeader<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:138:17
    |
138 | #[derive(Debug, Clone, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeHeader<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::aranges::ArangeEntryIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:255:17
    |
255 | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeEntryIter<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:301:14
    |
301 |     segment: Option<u64>,
    |              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::aranges::ArangeEntry` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:299:17
    |
299 | #[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeEntry`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:7:10
    |
7   | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:7:10
    |
7   | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::aranges::ArangeHeader<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:50:68
    |
50  |     pub fn header(&self, offset: DebugArangesOffset<R::Offset>) -> Result<ArangeHeader<R>> {
    |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeHeader<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:50:68
    |
50  |     pub fn header(&self, offset: DebugArangesOffset<R::Offset>) -> Result<ArangeHeader<R>> {
    |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:75:12
    |
75  |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:75:12
    |
75  |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:98:17
    |
98  | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:98:17
    |
98  | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::aranges::ArangeHeader<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:106:31
    |
106 |     pub fn next(&mut self) -> Result<Option<ArangeHeader<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::aranges::ArangeHeader<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:106:31
    |
106 |     pub fn next(&mut self) -> Result<Option<ArangeHeader<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::aranges::ArangeHeader<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:106:38
    |
106 |     pub fn next(&mut self) -> Result<Option<ArangeHeader<R>>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeHeader<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:138:10
    |
138 | #[derive(Debug, Clone, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:138:10
    |
138 | #[derive(Debug, Clone, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::aranges::ArangeHeader<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:157:68
    |
157 |     fn parse(input: &mut R, offset: DebugArangesOffset<Offset>) -> Result<Self> {
    |                                                                    ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeHeader<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:157:68
    |
157 |     fn parse(input: &mut R, offset: DebugArangesOffset<Offset>) -> Result<Self> {
    |                                                                    ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:255:10
    |
255 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:255:10
    |
255 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::aranges::ArangeEntry>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:269:31
    |
269 |     pub fn next(&mut self) -> Result<Option<ArangeEntry>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::aranges::ArangeEntry>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:269:31
    |
269 |     pub fn next(&mut self) -> Result<Option<ArangeEntry>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::aranges::ArangeEntry` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:269:38
    |
269 |     pub fn next(&mut self) -> Result<Option<ArangeEntry>> {
    |                                      ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeEntry`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:299:10
    |
299 | #[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:299:10
    |
299 | #[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:299:39
    |
299 | #[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]
    |                                       ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::aranges::ArangeEntry>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:312:10
    |
312 |     ) -> Result<Option<Self>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::aranges::ArangeEntry>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:312:10
    |
312 |     ) -> Result<Option<Self>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::aranges::ArangeEntry` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:312:17
    |
312 |     ) -> Result<Option<Self>> {
    |                 ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::aranges::ArangeEntry`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/aranges.rs:348:30
    |
348 |     pub fn segment(&self) -> Option<u64> {
    |                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::index::DebugCuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:11:17
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugCuIndex<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::DebugCuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:11:26
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugCuIndex<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::DebugCuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:11:33
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugCuIndex<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::index::DebugCuIndex<R>`
    = note: required for `read::index::DebugCuIndex<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::DebugCuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:27:24
    |
27  | impl<R> Section<R> for DebugCuIndex<R> {
    |                        ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugCuIndex<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::index::DebugCuIndex<R>`
    = note: required for `read::index::DebugCuIndex<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:37:9
    |
37  | impl<R> From<R> for DebugCuIndex<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
37  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugCuIndex<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::index::DebugCuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:37:21
    |
37  | impl<R> From<R> for DebugCuIndex<R> {
    |                     ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugCuIndex<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::index::DebugTuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:53:17
    |
53  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugTuIndex<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::DebugTuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:53:26
    |
53  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugTuIndex<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::DebugTuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:53:33
    |
53  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugTuIndex<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::index::DebugTuIndex<R>`
    = note: required for `read::index::DebugTuIndex<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::DebugTuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:69:24
    |
69  | impl<R> Section<R> for DebugTuIndex<R> {
    |                        ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugTuIndex<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::index::DebugTuIndex<R>`
    = note: required for `read::index::DebugTuIndex<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:79:9
    |
79  | impl<R> From<R> for DebugTuIndex<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
79  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugTuIndex<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::index::DebugTuIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:79:21
    |
79  | impl<R> From<R> for DebugTuIndex<R> {
    |                     ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::DebugTuIndex<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::index::UnitIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:95:17
    |
95  | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndex<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::SectionId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:278:15
    |
278 |     sections: slice::Iter<'index, SectionId>,
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::SectionId`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `read::index::UnitIndexSectionIterator<'index, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:276:17
    |
276 | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndexSectionIterator<'index, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::UnitIndexSection` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:300:17
    |
300 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndexSection`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::UnitIndexSection` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:300:24
    |
300 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndexSection`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::index::UnitIndexSection`
    = note: required for `read::index::UnitIndexSection` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:11:10
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:11:10
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::UnitIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:45:27
    |
45  |     pub fn index(self) -> Result<UnitIndex<R>> {
    |                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndex<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:45:27
    |
45  |     pub fn index(self) -> Result<UnitIndex<R>> {
    |                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:53:10
    |
53  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:53:10
    |
53  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::UnitIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:87:27
    |
87  |     pub fn index(self) -> Result<UnitIndex<R>> {
    |                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndex<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:87:27
    |
87  |     pub fn index(self) -> Result<UnitIndex<R>> {
    |                           ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:95:10
    |
95  | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:95:10
    |
95  | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::UnitIndex<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:110:31
    |
110 |     fn parse(mut input: R) -> Result<UnitIndex<R>> {
    |                               ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndex<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:110:31
    |
110 |     fn parse(mut input: R) -> Result<UnitIndex<R>> {
    |                               ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:204:36
    |
204 |     pub fn find(&self, id: u64) -> Option<u32> {
    |                                    ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::index::UnitIndexSectionIterator<'_, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:231:45
    |
231 |     pub fn sections(&self, mut row: u32) -> Result<UnitIndexSectionIterator<R>> {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndexSectionIterator<'_, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:231:45
    |
231 |     pub fn sections(&self, mut row: u32) -> Result<UnitIndexSectionIterator<R>> {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:276:10
    |
276 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:276:10
    |
276 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::index::UnitIndexSection` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:286:27
    |
286 |     fn next(&mut self) -> Option<UnitIndexSection> {
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::index::UnitIndexSection`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:300:10
    |
300 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/index.rs:300:10
    |
300 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::DebugLine<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:16:17
    |
16  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::DebugLine<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::DebugLine<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:16:26
    |
16  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::DebugLine<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::DebugLine<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:16:33
    |
16  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::DebugLine<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::line::DebugLine<R>`
    = note: required for `read::line::DebugLine<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::DebugLine<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:108:24
    |
108 | impl<R> Section<R> for DebugLine<R> {
    |                        ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::DebugLine<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::line::DebugLine<R>`
    = note: required for `read::line::DebugLine<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:118:9
    |
118 | impl<R> From<R> for DebugLine<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
118 | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugLine<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::line::DebugLine<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:118:21
    |
118 | impl<R> From<R> for DebugLine<R> {
    |                     ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::DebugLine<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::line::LineRows<R, Program, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:177:17
    |
177 | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineRows<R, Program, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::LineInstruction<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:270:10
    |
270 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineInstruction<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::LineInstruction<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:270:17
    |
270 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineInstruction<R, Offset>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::line::LineInstruction<R, Offset>`
    = note: required for `read::line::LineInstruction<R, Offset>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::LineInstructions<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:584:10
    |
584 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineInstructions<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:638:14
    |
638 |     address: Wrapping<u64>,
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::num::Wrapping`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `read::line::LineRow` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:636:10
    |
636 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineRow`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::LineRow` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:636:17
    |
636 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineRow`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::line::LineRow`
    = note: required for `read::line::LineRow` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::ColumnType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:988:10
    |
988 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]
    |          ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::ColumnType`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::line::ColumnType`
    = note: required for `read::line::ColumnType` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::ColumnType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:988:16
    |
988 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]
    |                ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::ColumnType`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::LineSequence<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1004:10
     |
1004 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineSequence<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::FileEntry<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1074:16
     |
1074 |     comp_file: Option<FileEntry<R, Offset>>,
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::FileEntry<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::line::LineProgramHeader<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1023:10
     |
1023 | #[derive(Clone, Debug, Eq, PartialEq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineProgramHeader<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::IncompleteLineProgram<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1430:10
     |
1430 | #[derive(Clone, Debug, Eq, PartialEq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::IncompleteLineProgram<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::CompleteLineProgram<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1523:10
     |
1523 | #[derive(Clone, Debug, Eq, PartialEq)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::CompleteLineProgram<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::FileEntry<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1572:10
     |
1572 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |          ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::FileEntry<R, Offset>`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::line::FileEntry<R, Offset>`
     = note: required for `read::line::FileEntry<R, Offset>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::FileEntry<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1572:16
     |
1572 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::FileEntry<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::FileEntryFormat` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1674:10
     |
1674 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |          ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::FileEntryFormat`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::line::FileEntryFormat`
     = note: required for `read::line::FileEntryFormat` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::FileEntryFormat` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1674:16
     |
1674 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::FileEntryFormat`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::AttributeValue<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1714:6
     |
1714 | ) -> Result<AttributeValue<R>> {
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttributeValue<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1714:6
     |
1714 | ) -> Result<AttributeValue<R>> {
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::line::FileEntry<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1731:6
     |
1731 | ) -> Result<FileEntry<R>> {
     |      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::FileEntry<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1731:6
     |
1731 | ) -> Result<FileEntry<R>> {
     |      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::AttributeValue<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1783:6
     |
1783 | ) -> Result<AttributeValue<R>> {
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttributeValue<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1783:6
     |
1783 | ) -> Result<AttributeValue<R>> {
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:16:10
    |
16  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:16:10
    |
16  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::IncompleteLineProgram<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:75:10
    |
75  |     ) -> Result<IncompleteLineProgram<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::IncompleteLineProgram<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:75:10
    |
75  |     ) -> Result<IncompleteLineProgram<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:102:12
    |
102 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:102:12
    |
102 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:177:10
    |
177 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:177:10
    |
177 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<(&read::line::LineProgramHeader<R, Offset>, &read::line::LineRow)>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:244:35
    |
244 |     pub fn next_row(&mut self) -> Result<Option<(&LineProgramHeader<R, Offset>, &LineRow)>> {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<(&read::line::LineProgramHeader<R, Offset>, &read::line::LineRow)>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:244:35
    |
244 |     pub fn next_row(&mut self) -> Result<Option<(&LineProgramHeader<R, Offset>, &LineRow)>> {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&read::line::LineProgramHeader<R, Offset>, &read::line::LineRow)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:244:42
    |
244 |     pub fn next_row(&mut self) -> Result<Option<(&LineProgramHeader<R, Offset>, &LineRow)>> {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&read::line::LineProgramHeader<R, Offset>, &read::line::LineRow)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:270:23
    |
270 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:270:23
    |
270 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::LineInstruction<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:413:10
    |
413 |     ) -> Result<LineInstruction<R>>
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineInstruction<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:413:10
    |
413 |     ) -> Result<LineInstruction<R>>
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:528:46
    |
528 |     fn fmt(&self, f: &mut fmt::Formatter) -> result::Result<(), fmt::Error> {
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:528:46
    |
528 |     fn fmt(&self, f: &mut fmt::Formatter) -> result::Result<(), fmt::Error> {
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:584:17
    |
584 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:584:17
    |
584 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::LineInstructions<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:590:63
    |
590 |     fn remove_trailing(&self, other: &LineInstructions<R>) -> Result<LineInstructions<R>> {
    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineInstructions<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:590:63
    |
590 |     fn remove_trailing(&self, other: &LineInstructions<R>) -> Result<LineInstructions<R>> {
    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::line::LineInstruction<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:614:10
    |
614 |     ) -> Result<Option<LineInstruction<R>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::line::LineInstruction<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:614:10
    |
614 |     ) -> Result<Option<LineInstruction<R>>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::line::LineInstruction<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:614:17
    |
614 |     ) -> Result<Option<LineInstruction<R>>> {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineInstruction<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:636:23
    |
636 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:636:23
    |
636 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&'header read::line::FileEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:709:10
    |
709 |     ) -> Option<&'header FileEntry<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'header read::line::FileEntry<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::num::NonZeroU64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:718:27
    |
718 |     pub fn line(&self) -> Option<NonZeroU64> {
    |                           ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::num::NonZeroU64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:988:23
    |
988 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:988:23
    |
988 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::cmp::Ordering` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:988:45
    |
988 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]
    |                                             ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::cmp::Ordering`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1004:17
     |
1004 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1004:17
     |
1004 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1023:17
     |
1023 | #[derive(Clone, Debug, Eq, PartialEq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1023:17
     |
1023 | #[derive(Clone, Debug, Eq, PartialEq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::AttributeValue<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1179:48
     |
1179 |     pub fn directory(&self, directory: u64) -> Option<AttributeValue<R, Offset>> {
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttributeValue<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&read::line::FileEntry<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1238:38
     |
1238 |     pub fn file(&self, file: u64) -> Option<&FileEntry<R, Offset>> {
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::line::FileEntry<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::line::LineProgramHeader<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1287:10
     |
1287 |     ) -> Result<LineProgramHeader<R, Offset>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::LineProgramHeader<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1287:10
     |
1287 |     ) -> Result<LineProgramHeader<R, Offset>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1430:17
     |
1430 | #[derive(Clone, Debug, Eq, PartialEq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1430:17
     |
1430 | #[derive(Clone, Debug, Eq, PartialEq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1476:31
     |
1476 |     pub fn sequences(self) -> Result<(CompleteLineProgram<R, Offset>, Vec<LineSequence<R>>)> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1523:17
     |
1523 | #[derive(Clone, Debug, Eq, PartialEq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1523:17
     |
1523 | #[derive(Clone, Debug, Eq, PartialEq)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1572:23
     |
1572 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1572:23
     |
1572 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::line::FileEntry<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1591:46
     |
1591 |     fn parse(input: &mut R, path_name: R) -> Result<FileEntry<R, Offset>> {
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::line::FileEntry<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1591:46
     |
1591 |     fn parse(input: &mut R, path_name: R) -> Result<FileEntry<R, Offset>> {
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::AttributeValue<R, Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1634:63
     |
1634 |     pub fn directory(&self, header: &LineProgramHeader<R>) -> Option<AttributeValue<R, Offset>> {
     |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttributeValue<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1674:23
     |
1674 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1674:23
     |
1674 | #[derive(Copy, Clone, Debug, PartialEq, Eq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/line.rs:1684:43
     |
1684 |     fn parse<R: Reader>(input: &mut R) -> Result<Vec<FileEntryFormat>> {
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::lists::ListsHeader` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lists.rs:4:17
    |
4   | #[derive(Debug, Clone, Copy)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lists::ListsHeader`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::lists::ListsHeader` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lists.rs:4:24
    |
4   | #[derive(Debug, Clone, Copy)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lists::ListsHeader`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::lists::ListsHeader`
    = note: required for `read::lists::ListsHeader` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::lists::ListsHeader` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lists.rs:11:18
    |
11  | impl Default for ListsHeader {
    |                  ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lists::ListsHeader`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `read::lists::ListsHeader` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lists.rs:43:46
    |
43  | fn parse_header<R: Reader>(input: &mut R) -> Result<ListsHeader> {
    |                                              ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lists::ListsHeader`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lists.rs:43:46
    |
43  | fn parse_header<R: Reader>(input: &mut R) -> Result<ListsHeader> {
    |                                              ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lists.rs:4:10
    |
4   | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lists.rs:4:10
    |
4   | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::DebugLoc<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:13:17
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLoc<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::DebugLoc<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:13:26
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLoc<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::DebugLoc<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:13:33
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLoc<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::loclists::DebugLoc<R>`
    = note: required for `read::loclists::DebugLoc<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::DebugLoc<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:41:24
    |
41  | impl<R> Section<R> for DebugLoc<R> {
    |                        ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLoc<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::loclists::DebugLoc<R>`
    = note: required for `read::loclists::DebugLoc<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:51:9
    |
51  | impl<R> From<R> for DebugLoc<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
51  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugLoc<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::loclists::DebugLoc<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:51:21
    |
51  | impl<R> From<R> for DebugLoc<R> {
    |                     ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLoc<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::loclists::DebugLocLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:59:17
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLocLists<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::DebugLocLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:59:26
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLocLists<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::DebugLocLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:59:33
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLocLists<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::loclists::DebugLocLists<R>`
    = note: required for `read::loclists::DebugLocLists<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::DebugLocLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:87:24
    |
87  | impl<R> Section<R> for DebugLocLists<R> {
    |                        ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLocLists<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::loclists::DebugLocLists<R>`
    = note: required for `read::loclists::DebugLocLists<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:97:9
    |
97  | impl<R> From<R> for DebugLocLists<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
97  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugLocLists<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::loclists::DebugLocLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:97:21
    |
97  | impl<R> From<R> for DebugLocLists<R> {
    |                     ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::DebugLocLists<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::loclists::LocationLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:127:17
    |
127 | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocationLists<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::LocationLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:127:26
    |
127 | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocationLists<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::LocationLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:127:33
    |
127 | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocationLists<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::loclists::LocationLists<R>`
    = note: required for `read::loclists::LocationLists<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::LocListsFormat` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:297:17
    |
297 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocListsFormat`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::LocListsFormat` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:297:24
    |
297 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocListsFormat`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::loclists::LocListsFormat`
    = note: required for `read::loclists::LocListsFormat` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::RawLocListEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:318:10
    |
318 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::RawLocListEntry<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::Expression<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:391:64
    |
391 | fn parse_data<R: Reader>(input: &mut R, encoding: Encoding) -> Result<Expression<R>> {
    |                                                                ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Expression<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:391:64
    |
391 | fn parse_data<R: Reader>(input: &mut R, encoding: Encoding) -> Result<Expression<R>> {
    |                                                                ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::LocationListEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:626:17
    |
626 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocationListEntry<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::loclists::LocationListEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:626:24
    |
626 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocationListEntry<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::loclists::LocationListEntry<R>`
    = note: required for `read::loclists::LocationListEntry<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:13:10
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:13:10
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:59:10
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:59:10
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:127:10
    |
127 | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:127:10
    |
127 | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:162:12
    |
162 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:162:12
    |
162 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `read::loclists::LocListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:190:10
    |
190 |     ) -> Result<LocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:190:10
    |
190 |     ) -> Result<LocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::LocListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:209:10
    |
209 |     ) -> Result<LocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:209:10
    |
209 |     ) -> Result<LocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::RawLocListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:232:10
    |
232 |     ) -> Result<RawLocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::RawLocListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:232:10
    |
232 |     ) -> Result<RawLocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::RawLocListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:249:10
    |
249 |     ) -> Result<RawLocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::RawLocListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:249:10
    |
249 |     ) -> Result<RawLocListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::LocationListsOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:277:10
    |
277 |     ) -> Result<LocationListsOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::LocationListsOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:277:10
    |
277 |     ) -> Result<LocationListsOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(common::SectionId, <R as read::reader::Reader>::Offset)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:290:59
    |
290 |     pub fn lookup_offset_id(&self, id: ReaderOffsetId) -> Option<(SectionId, R::Offset)> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::SectionId, <R as read::reader::Reader>::Offset)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:297:10
    |
297 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:297:10
    |
297 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:310:10
    |
310 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:310:10
    |
310 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:318:17
    |
318 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:318:17
    |
318 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::loclists::RawLocListEntry<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:404:76
    |
404 |     fn parse(input: &mut R, encoding: Encoding, format: LocListsFormat) -> Result<Option<Self>> {
    |                                                                            ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::loclists::RawLocListEntry<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:404:76
    |
404 |     fn parse(input: &mut R, encoding: Encoding, format: LocListsFormat) -> Result<Option<Self>> {
    |                                                                            ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::RawLocListEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:404:83
    |
404 |     fn parse(input: &mut R, encoding: Encoding, format: LocListsFormat) -> Result<Option<Self>> {
    |                                                                                   ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::RawLocListEntry<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::loclists::RawLocListEntry<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:482:31
    |
482 |     pub fn next(&mut self) -> Result<Option<RawLocListEntry<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::loclists::RawLocListEntry<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:482:31
    |
482 |     pub fn next(&mut self) -> Result<Option<RawLocListEntry<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::RawLocListEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:482:38
    |
482 |     pub fn next(&mut self) -> Result<Option<RawLocListEntry<R>>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::RawLocListEntry<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:517:10
    |
517 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:517:10
    |
517 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:542:64
    |
542 |     fn get_address(&self, index: DebugAddrIndex<R::Offset>) -> Result<u64> {
    |                                                                ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:542:64
    |
542 |     fn get_address(&self, index: DebugAddrIndex<R::Offset>) -> Result<u64> {
    |                                                                ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::loclists::LocationListEntry<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:548:31
    |
548 |     pub fn next(&mut self) -> Result<Option<LocationListEntry<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::loclists::LocationListEntry<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:548:31
    |
548 |     pub fn next(&mut self) -> Result<Option<LocationListEntry<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::loclists::LocationListEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:548:38
    |
548 |     pub fn next(&mut self) -> Result<Option<LocationListEntry<R>>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::loclists::LocationListEntry<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:626:10
    |
626 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/loclists.rs:626:10
    |
626 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::lookup::DebugLookup<R, Parser>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:31:10
    |
31  | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lookup::DebugLookup<R, Parser>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::lookup::DebugLookup<R, Parser>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:41:29
    |
41  | impl<R, Parser> From<R> for DebugLookup<R, Parser>
    |                             ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lookup::DebugLookup<R, Parser>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `(R, <Parser as read::lookup::LookupParser<R>>::Header)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:77:18
    |
77  |     current_set: Option<(R, Parser::Header)>, // Only none at the very beginning and end.
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(R, <Parser as read::lookup::LookupParser<R>>::Header)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::lookup::LookupEntryIter<R, Parser>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:71:10
    |
71  | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lookup::LookupEntryIter<R, Parser>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::lookup::PubStuffHeader<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:128:17
    |
128 | #[derive(Debug, Clone, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lookup::PubStuffHeader<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::lookup::PubStuffParser<R, Entry>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:145:10
    |
145 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::lookup::PubStuffParser<R, Entry>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:31:17
    |
31  | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:31:17
    |
31  | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:71:17
    |
71  | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:71:17
    |
71  | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<<Parser as read::lookup::LookupParser<R>>::Entry>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:95:31
    |
95  |     pub fn next(&mut self) -> Result<Option<Parser::Entry>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<<Parser as read::lookup::LookupParser<R>>::Entry>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:95:31
    |
95  |     pub fn next(&mut self) -> Result<Option<Parser::Entry>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `<Parser as read::lookup::LookupParser<R>>::Entry` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:95:38
    |
95  |     pub fn next(&mut self) -> Result<Option<Parser::Entry>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `<Parser as read::lookup::LookupParser<R>>::Entry`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting the associated type
    |
95  |     pub fn next(&mut self) -> Result<Option<Parser::Entry>> where <Parser as read::lookup::LookupParser<R>>::Entry: rustc_std_workspace_core::marker::Sized {
    |                                                             +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:128:10
    |
128 | #[derive(Debug, Clone, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:128:10
    |
128 | #[derive(Debug, Clone, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:145:17
    |
145 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:145:17
    |
145 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `(R, read::lookup::PubStuffHeader<<R as read::reader::Reader>::Offset>)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:165:39
    |
165 |     fn parse_header(input: &mut R) -> Result<(R, Self::Header)> {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(R, read::lookup::PubStuffHeader<<R as read::reader::Reader>::Offset>)`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:165:39
    |
165 |     fn parse_header(input: &mut R) -> Result<(R, Self::Header)> {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<Entry>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:188:61
    |
188 |     fn parse_entry(input: &mut R, header: &Self::Header) -> Result<Option<Self::Entry>> {
    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<Entry>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:188:61
    |
188 |     fn parse_entry(input: &mut R, header: &Self::Header) -> Result<Option<Self::Entry>> {
    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `Entry` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:188:68
    |
188 |     fn parse_entry(input: &mut R, header: &Self::Header) -> Result<Option<Self::Entry>> {
    |                                                                    ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting this bound
    |
158 |     Entry: PubStuffEntry<R> + rustc_std_workspace_core::marker::Sized,
    |                             +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `(R, <Self as read::lookup::LookupParser<R>>::Header)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:24:39
    |
24  |     fn parse_header(input: &mut R) -> Result<(R, Self::Header)>;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(R, <Self as read::lookup::LookupParser<R>>::Header)`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:24:39
    |
24  |     fn parse_header(input: &mut R) -> Result<(R, Self::Header)>;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<<Self as read::lookup::LookupParser<R>>::Entry>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:28:61
    |
28  |     fn parse_entry(input: &mut R, header: &Self::Header) -> Result<Option<Self::Entry>>;
    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<<Self as read::lookup::LookupParser<R>>::Entry>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:28:61
    |
28  |     fn parse_entry(input: &mut R, header: &Self::Header) -> Result<Option<Self::Entry>>;
    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `<Self as read::lookup::LookupParser<R>>::Entry` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/lookup.rs:28:68
    |
28  |     fn parse_entry(input: &mut R, header: &Self::Header) -> Result<Option<Self::Entry>>;
    |                                                                    ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `<Self as read::lookup::LookupParser<R>>::Entry`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting the associated type
    |
28  |     fn parse_entry(input: &mut R, header: &Self::Header) -> Result<Option<Self::Entry>> where <Self as read::lookup::LookupParser<R>>::Entry: rustc_std_workspace_core::marker::Sized;
    |                                                                                         +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::op::DieReference<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:14:17
    |
14  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::DieReference<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::DieReference<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:14:24
    |
14  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::DieReference<T>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::op::DieReference<T>`
    = note: required for `read::op::DieReference<T>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:178:21
    |
178 |         bit_offset: Option<u64>,
    |                     ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::op::Operation<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:33:17
    |
33  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Operation<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::Operation<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:33:24
    |
33  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Operation<R, Offset>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::op::Operation<R, Offset>`
    = note: required for `read::op::Operation<R, Offset>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::Location<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:304:17
    |
304 | #[derive(Debug, Clone, Copy, PartialEq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Location<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::Location<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:304:24
    |
304 | #[derive(Debug, Clone, Copy, PartialEq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Location<R, Offset>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::op::Location<R, Offset>`
    = note: required for `read::op::Location<R, Offset>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:366:23
    |
366 |     pub size_in_bits: Option<u64>,
    |                       ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::op::Piece<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:358:17
    |
358 | #[derive(Debug, Clone, Copy, PartialEq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Piece<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::Piece<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:358:24
    |
358 | #[derive(Debug, Clone, Copy, PartialEq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Piece<R, Offset>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::op::Piece<R, Offset>`
    = note: required for `read::op::Piece<R, Offset>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:384:64
    |
384 | fn compute_pc<R: Reader>(pc: &R, bytecode: &R, offset: i16) -> Result<R> {
    |                                                                ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:820:11
    |
820 |     Start(Option<u64>),
    |           ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:861:16
    |
861 |         space: Option<u64>,
    |                ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::op::Expression<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:926:17
    |
926 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Expression<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::Expression<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:926:24
    |
926 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Expression<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::op::Expression<R>`
    = note: required for `read::op::Expression<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::OperationIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:964:17
    |
964 | #[derive(Debug, Clone, Copy)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::OperationIter<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::OperationIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:964:24
    |
964 | #[derive(Debug, Clone, Copy)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::OperationIter<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::op::OperationIter<R>`
    = note: required for `read::op::OperationIter<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1102:21
     |
1102 |     object_address: Option<u64>,
     |                     ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1103:21
     |
1103 |     max_iterations: Option<u32>,
     |                     ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:14:10
    |
14  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:14:10
    |
14  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:33:10
    |
33  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:33:10
    |
33  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:295:10
    |
295 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:295:10
    |
295 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:304:10
    |
304 | #[derive(Debug, Clone, Copy, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:304:10
    |
304 | #[derive(Debug, Clone, Copy, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:358:10
    |
358 | #[derive(Debug, Clone, Copy, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:358:10
    |
358 | #[derive(Debug, Clone, Copy, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::op::Operation<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:413:56
    |
413 |     pub fn parse(bytes: &mut R, encoding: Encoding) -> Result<Operation<R, Offset>> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Operation<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:413:56
    |
413 |     pub fn parse(bytes: &mut R, encoding: Encoding) -> Result<Operation<R, Offset>> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:818:10
    |
818 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:818:10
    |
818 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:827:10
    |
827 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:827:10
    |
827 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:847:10
    |
847 | #[derive(Debug, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:847:10
    |
847 | #[derive(Debug, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:926:10
    |
926 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:926:10
    |
926 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:964:10
    |
964 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:964:10
    |
964 | #[derive(Debug, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::op::Operation<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:972:31
    |
972 |     pub fn next(&mut self) -> Result<Option<Operation<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::op::Operation<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:972:31
    |
972 |     pub fn next(&mut self) -> Result<Option<Operation<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::Operation<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:972:38
    |
972 |     pub fn next(&mut self) -> Result<Option<Operation<R>>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Operation<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1098:10
     |
1098 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1098:10
     |
1098 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1217:26
     |
1217 |     fn pop(&mut self) -> Result<Value> {
     |                          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1217:26
     |
1217 |     fn pop(&mut self) -> Result<Value> {
     |                          ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1224:41
     |
1224 |     fn push(&mut self, value: Value) -> Result<()> {
     |                                         ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1224:41
     |
1224 |     fn push(&mut self, value: Value) -> Result<()> {
     |                                         ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::OperationEvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1229:45
     |
1229 |     fn evaluate_one_operation(&mut self) -> Result<OperationEvaluationResult<R>> {
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::OperationEvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1229:45
     |
1229 |     fn evaluate_one_operation(&mut self) -> Result<OperationEvaluationResult<R>> {
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1615:35
     |
1615 |     pub fn evaluate(&mut self) -> Result<EvaluationResult<R>> {
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1615:35
     |
1615 |     pub fn evaluate(&mut self) -> Result<EvaluationResult<R>> {
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1645:59
     |
1645 |     pub fn resume_with_memory(&mut self, value: Value) -> Result<EvaluationResult<R>> {
     |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1645:59
     |
1645 |     pub fn resume_with_memory(&mut self, value: Value) -> Result<EvaluationResult<R>> {
     |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1666:61
     |
1666 |     pub fn resume_with_register(&mut self, value: Value) -> Result<EvaluationResult<R>> {
     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1666:61
     |
1666 |     pub fn resume_with_register(&mut self, value: Value) -> Result<EvaluationResult<R>> {
     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1689:66
     |
1689 |     pub fn resume_with_frame_base(&mut self, frame_base: u64) -> Result<EvaluationResult<R>> {
     |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1689:66
     |
1689 |     pub fn resume_with_frame_base(&mut self, frame_base: u64) -> Result<EvaluationResult<R>> {
     |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1710:54
     |
1710 |     pub fn resume_with_tls(&mut self, value: u64) -> Result<EvaluationResult<R>> {
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1710:54
     |
1710 |     pub fn resume_with_tls(&mut self, value: u64) -> Result<EvaluationResult<R>> {
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1731:63
     |
1731 |     pub fn resume_with_call_frame_cfa(&mut self, cfa: u64) -> Result<EvaluationResult<R>> {
     |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1731:63
     |
1731 |     pub fn resume_with_call_frame_cfa(&mut self, cfa: u64) -> Result<EvaluationResult<R>> {
     |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1752:64
     |
1752 |     pub fn resume_with_at_location(&mut self, mut bytes: R) -> Result<EvaluationResult<R>> {
     |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1752:64
     |
1752 |     pub fn resume_with_at_location(&mut self, mut bytes: R) -> Result<EvaluationResult<R>> {
     |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1778:70
     |
1778 |     pub fn resume_with_entry_value(&mut self, entry_value: Value) -> Result<EvaluationResult<R>> {
     |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1778:70
     |
1778 |     pub fn resume_with_entry_value(&mut self, entry_value: Value) -> Result<EvaluationResult<R>> {
     |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1802:10
     |
1802 |     ) -> Result<EvaluationResult<R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1802:10
     |
1802 |     ) -> Result<EvaluationResult<R>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1824:70
     |
1824 |     pub fn resume_with_relocated_address(&mut self, address: u64) -> Result<EvaluationResult<R>> {
     |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1824:70
     |
1824 |     pub fn resume_with_relocated_address(&mut self, address: u64) -> Result<EvaluationResult<R>> {
     |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1846:68
     |
1846 |     pub fn resume_with_indexed_address(&mut self, address: u64) -> Result<EvaluationResult<R>> {
     |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1846:68
     |
1846 |     pub fn resume_with_indexed_address(&mut self, address: u64) -> Result<EvaluationResult<R>> {
     |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1867:70
     |
1867 |     pub fn resume_with_base_type(&mut self, base_type: ValueType) -> Result<EvaluationResult<R>> {
     |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1867:70
     |
1867 |     pub fn resume_with_base_type(&mut self, base_type: ValueType) -> Result<EvaluationResult<R>> {
     |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::op::EvaluationResult<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1902:40
     |
1902 |     fn evaluate_internal(&mut self) -> Result<EvaluationResult<R>> {
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::EvaluationResult<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/op.rs:1902:40
     |
1902 |     fn evaluate_internal(&mut self) -> Result<EvaluationResult<R>> {
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::pubnames::PubNamesEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:7:17
    |
7   | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubnames::PubNamesEntry<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::pubnames::DebugPubNames<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:49:17
    |
49  | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubnames::DebugPubNames<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::pubnames::DebugPubNames<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:97:32
    |
97  | impl<R: Reader> Section<R> for DebugPubNames<R> {
    |                                ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubnames::DebugPubNames<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::pubnames::DebugPubNames<R>`
    = note: required for `read::pubnames::DebugPubNames<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `read::pubnames::DebugPubNames<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:107:29
    |
107 | impl<R: Reader> From<R> for DebugPubNames<R> {
    |                             ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubnames::DebugPubNames<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::pubnames::PubNamesEntryIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:117:17
    |
117 | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubnames::PubNamesEntryIter<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:7:10
    |
7   | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:7:10
    |
7   | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:49:10
    |
49  | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:49:10
    |
49  | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:117:10
    |
117 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:117:10
    |
117 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::pubnames::PubNamesEntry<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:128:31
    |
128 |     pub fn next(&mut self) -> Result<Option<PubNamesEntry<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::pubnames::PubNamesEntry<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:128:31
    |
128 |     pub fn next(&mut self) -> Result<Option<PubNamesEntry<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::pubnames::PubNamesEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubnames.rs:128:38
    |
128 |     pub fn next(&mut self) -> Result<Option<PubNamesEntry<R>>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubnames::PubNamesEntry<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::pubtypes::PubTypesEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:7:17
    |
7   | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubtypes::PubTypesEntry<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::pubtypes::DebugPubTypes<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:49:17
    |
49  | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubtypes::DebugPubTypes<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::pubtypes::DebugPubTypes<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:97:32
    |
97  | impl<R: Reader> Section<R> for DebugPubTypes<R> {
    |                                ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubtypes::DebugPubTypes<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::pubtypes::DebugPubTypes<R>`
    = note: required for `read::pubtypes::DebugPubTypes<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `read::pubtypes::DebugPubTypes<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:107:29
    |
107 | impl<R: Reader> From<R> for DebugPubTypes<R> {
    |                             ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubtypes::DebugPubTypes<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::pubtypes::PubTypesEntryIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:117:17
    |
117 | #[derive(Debug, Clone)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubtypes::PubTypesEntryIter<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:7:10
    |
7   | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:7:10
    |
7   | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:49:10
    |
49  | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:49:10
    |
49  | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:117:10
    |
117 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:117:10
    |
117 | #[derive(Debug, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::pubtypes::PubTypesEntry<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:128:31
    |
128 |     pub fn next(&mut self) -> Result<Option<PubTypesEntry<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::pubtypes::PubTypesEntry<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:128:31
    |
128 |     pub fn next(&mut self) -> Result<Option<PubTypesEntry<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::pubtypes::PubTypesEntry<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/pubtypes.rs:128:38
    |
128 |     pub fn next(&mut self) -> Result<Option<PubTypesEntry<R>>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::pubtypes::PubTypesEntry<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::rnglists::DebugRanges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:13:17
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRanges<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::DebugRanges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:13:26
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRanges<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::DebugRanges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:13:33
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRanges<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::rnglists::DebugRanges<R>`
    = note: required for `read::rnglists::DebugRanges<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::DebugRanges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:41:24
    |
41  | impl<R> Section<R> for DebugRanges<R> {
    |                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRanges<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::rnglists::DebugRanges<R>`
    = note: required for `read::rnglists::DebugRanges<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:51:9
    |
51  | impl<R> From<R> for DebugRanges<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
51  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugRanges<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::rnglists::DebugRanges<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:51:21
    |
51  | impl<R> From<R> for DebugRanges<R> {
    |                     ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRanges<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::rnglists::DebugRngLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:59:17
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRngLists<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::DebugRngLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:59:26
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRngLists<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::DebugRngLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:59:33
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRngLists<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::rnglists::DebugRngLists<R>`
    = note: required for `read::rnglists::DebugRngLists<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::DebugRngLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:88:24
    |
88  | impl<R> Section<R> for DebugRngLists<R> {
    |                        ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRngLists<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::rnglists::DebugRngLists<R>`
    = note: required for `read::rnglists::DebugRngLists<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:98:9
    |
98  | impl<R> From<R> for DebugRngLists<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
98  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugRngLists<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::rnglists::DebugRngLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:98:21
    |
98  | impl<R> From<R> for DebugRngLists<R> {
    |                     ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::DebugRngLists<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::rnglists::RangeLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:129:17
    |
129 | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RangeLists<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::RangeLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:129:26
    |
129 | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RangeLists<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::RangeLists<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:129:33
    |
129 | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RangeLists<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::rnglists::RangeLists<R>`
    = note: required for `read::rnglists::RangeLists<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::RangeListsFormat` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:275:17
    |
275 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RangeListsFormat`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::RangeListsFormat` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:275:24
    |
275 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RangeListsFormat`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::rnglists::RangeListsFormat`
    = note: required for `read::rnglists::RangeListsFormat` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::RawRngListEntry<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:295:10
    |
295 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RawRngListEntry<T>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::RawRange` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:545:17
    |
545 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RawRange`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::RawRange` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:545:24
    |
545 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RawRange`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::rnglists::RawRange`
    = note: required for `read::rnglists::RawRange` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::Range` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:584:17
    |
584 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::Range`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::Range` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:584:24
    |
584 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::Range`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::rnglists::Range`
    = note: required for `read::rnglists::Range` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:13:10
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:13:10
    |
13  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:59:10
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:59:10
    |
59  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:129:10
    |
129 | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:129:10
    |
129 | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:181:12
    |
181 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:181:12
    |
181 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `read::rnglists::RngListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:208:10
    |
208 |     ) -> Result<RngListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RngListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:208:10
    |
208 |     ) -> Result<RngListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::rnglists::RawRngListIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:231:10
    |
231 |     ) -> Result<RawRngListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RawRngListIter<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:231:10
    |
231 |     ) -> Result<RawRngListIter<R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::RangeListsOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:255:10
    |
255 |     ) -> Result<RangeListsOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::RangeListsOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:255:10
    |
255 |     ) -> Result<RangeListsOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(common::SectionId, <R as read::reader::Reader>::Offset)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:268:59
    |
268 |     pub fn lookup_offset_id(&self, id: ReaderOffsetId) -> Option<(SectionId, R::Offset)> {
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(common::SectionId, <R as read::reader::Reader>::Offset)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:275:10
    |
275 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:275:10
    |
275 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:287:10
    |
287 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:287:10
    |
287 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:295:17
    |
295 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:295:17
    |
295 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::rnglists::RawRngListEntry<T>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:357:10
    |
357 |     ) -> Result<Option<Self>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::rnglists::RawRngListEntry<T>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:357:10
    |
357 |     ) -> Result<Option<Self>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::rnglists::RawRngListEntry<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:357:17
    |
357 |     ) -> Result<Option<Self>> {
    |                 ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RawRngListEntry<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::rnglists::RawRngListEntry<<R as read::reader::Reader>::Offset>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:419:31
    |
419 |     pub fn next(&mut self) -> Result<Option<RawRngListEntry<R::Offset>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::rnglists::RawRngListEntry<<R as read::reader::Reader>::Offset>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:419:31
    |
419 |     pub fn next(&mut self) -> Result<Option<RawRngListEntry<R::Offset>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::rnglists::RawRngListEntry<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:419:38
    |
419 |     pub fn next(&mut self) -> Result<Option<RawRngListEntry<R::Offset>>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RawRngListEntry<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:454:10
    |
454 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:454:10
    |
454 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:479:64
    |
479 |     fn get_address(&self, index: DebugAddrIndex<R::Offset>) -> Result<u64> {
    |                                                                ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:479:64
    |
479 |     fn get_address(&self, index: DebugAddrIndex<R::Offset>) -> Result<u64> {
    |                                                                ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::rnglists::Range>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:485:31
    |
485 |     pub fn next(&mut self) -> Result<Option<Range>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::rnglists::Range>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:485:31
    |
485 |     pub fn next(&mut self) -> Result<Option<Range>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::rnglists::Range` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:485:38
    |
485 |     pub fn next(&mut self) -> Result<Option<Range>> {
    |                                      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::Range`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:545:10
    |
545 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:545:10
    |
545 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::rnglists::RawRange` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:575:65
    |
575 |     pub fn parse<R: Reader>(input: &mut R, address_size: u8) -> Result<RawRange> {
    |                                                                 ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::rnglists::RawRange`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:575:65
    |
575 |     pub fn parse<R: Reader>(input: &mut R, address_size: u8) -> Result<RawRange> {
    |                                                                 ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:584:10
    |
584 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/rnglists.rs:584:10
    |
584 | #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:11:17
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStr<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:11:26
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStr<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:11:33
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStr<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::str::DebugStr<R>`
    = note: required for `read::str::DebugStr<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:83:24
    |
83  | impl<R> Section<R> for DebugStr<R> {
    |                        ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStr<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::str::DebugStr<R>`
    = note: required for `read::str::DebugStr<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:93:9
    |
93  | impl<R> From<R> for DebugStr<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
93  | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugStr<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::str::DebugStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:93:21
    |
93  | impl<R> From<R> for DebugStr<R> {
    |                     ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStr<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::str::DebugStrOffsets<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:100:17
    |
100 | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStrOffsets<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugStrOffsets<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:100:26
    |
100 | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStrOffsets<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugStrOffsets<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:100:33
    |
100 | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStrOffsets<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::str::DebugStrOffsets<R>`
    = note: required for `read::str::DebugStrOffsets<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugStrOffsets<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:161:24
    |
161 | impl<R> Section<R> for DebugStrOffsets<R> {
    |                        ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStrOffsets<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::str::DebugStrOffsets<R>`
    = note: required for `read::str::DebugStrOffsets<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:171:9
    |
171 | impl<R> From<R> for DebugStrOffsets<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
171 | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugStrOffsets<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::str::DebugStrOffsets<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:171:21
    |
171 | impl<R> From<R> for DebugStrOffsets<R> {
    |                     ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugStrOffsets<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::str::DebugLineStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:203:17
    |
203 | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugLineStr<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugLineStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:203:26
    |
203 | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugLineStr<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugLineStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:203:33
    |
203 | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugLineStr<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::str::DebugLineStr<R>`
    = note: required for `read::str::DebugLineStr<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::str::DebugLineStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:264:24
    |
264 | impl<R> Section<R> for DebugLineStr<R> {
    |                        ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugLineStr<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::str::DebugLineStr<R>`
    = note: required for `read::str::DebugLineStr<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:274:9
    |
274 | impl<R> From<R> for DebugLineStr<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
274 | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugLineStr<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::str::DebugLineStr<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:274:21
    |
274 | impl<R> From<R> for DebugLineStr<R> {
    |                     ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::str::DebugLineStr<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:11:10
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:11:10
    |
11  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:52:65
    |
52  |     pub fn get_str(&self, offset: DebugStrOffset<R::Offset>) -> Result<R> {
    |                                                                 ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:77:12
    |
77  |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:77:12
    |
77  |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:100:10
    |
100 | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:100:10
    |
100 | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugStrOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:127:10
    |
127 |     ) -> Result<DebugStrOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugStrOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:127:10
    |
127 |     ) -> Result<DebugStrOffset<R::Offset>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:155:12
    |
155 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:155:12
    |
155 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:203:10
    |
203 | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:203:10
    |
203 | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:233:69
    |
233 |     pub fn get_str(&self, offset: DebugLineStrOffset<R::Offset>) -> Result<R> {
    |                                                                     ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:258:12
    |
258 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/str.rs:258:12
    |
258 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `read::unit::DebugInfo<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:82:17
    |
82  | #[derive(Debug, Default, Clone, Copy)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugInfo<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::DebugInfo<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:82:26
    |
82  | #[derive(Debug, Default, Clone, Copy)]
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugInfo<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::DebugInfo<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:82:33
    |
82  | #[derive(Debug, Default, Clone, Copy)]
    |                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugInfo<R>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::unit::DebugInfo<R>`
    = note: required for `read::unit::DebugInfo<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::DebugInfo<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:169:24
    |
169 | impl<R> Section<R> for DebugInfo<R> {
    |                        ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugInfo<R>`
    = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::unit::DebugInfo<R>`
    = note: required for `read::unit::DebugInfo<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
    |
612 | pub trait Section<R>: From<R> {
    |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:179:9
    |
179 | impl<R> From<R> for DebugInfo<R> {
    |         ^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
    |
179 | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugInfo<R> {
    |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::unit::DebugInfo<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:179:21
    |
179 | impl<R> From<R> for DebugInfo<R> {
    |                     ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugInfo<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::unit::DebugInfoUnitHeadersIter<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:189:10
    |
189 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugInfoUnitHeadersIter<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `constants::DwUt` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:227:49
    |
227 | fn parse_unit_type<R: Reader>(input: &mut R) -> Result<constants::DwUt> {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `constants::DwUt`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:227:49
    |
227 | fn parse_unit_type<R: Reader>(input: &mut R) -> Result<constants::DwUt> {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::DebugAbbrevOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:236:6
    |
236 | ) -> Result<DebugAbbrevOffset<R::Offset>> {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugAbbrevOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:236:6
    |
236 | ) -> Result<DebugAbbrevOffset<R::Offset>> {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::DebugInfoOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:244:6
    |
244 | ) -> Result<DebugInfoOffset<R::Offset>> {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugInfoOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:244:6
    |
244 | ) -> Result<DebugInfoOffset<R::Offset>> {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::UnitType<Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:251:17
    |
251 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::UnitType<Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::UnitType<Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:251:24
    |
251 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::UnitType<Offset>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::unit::UnitType<Offset>`
    = note: required for `read::unit::UnitType<Offset>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::UnitHeader<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:313:17
    |
313 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::UnitHeader<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::UnitHeader<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:313:24
    |
313 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::UnitHeader<R, Offset>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::unit::UnitHeader<R, Offset>`
    = note: required for `read::unit::UnitHeader<R, Offset>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::UnitHeader<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:572:6
    |
572 | ) -> Result<UnitHeader<R>>
    |      ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::UnitHeader<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:572:6
    |
572 | ) -> Result<UnitHeader<R>>
    |      ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `common::DwoId` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:650:46
    |
650 | fn parse_dwo_id<R: Reader>(input: &mut R) -> Result<DwoId> {
    |                                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DwoId`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:650:46
    |
650 | fn parse_dwo_id<R: Reader>(input: &mut R) -> Result<DwoId> {
    |                                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::DebuggingInformationEntry<'abbrev, 'unit, R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:657:10
    |
657 | #[derive(Clone, Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebuggingInformationEntry<'abbrev, 'unit, R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::AttributeValue<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:943:10
    |
943 | #[derive(Clone, Copy, Debug, Eq, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttributeValue<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::AttributeValue<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:943:17
    |
943 | #[derive(Clone, Copy, Debug, Eq, PartialEq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttributeValue<R, Offset>`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::unit::AttributeValue<R, Offset>`
    = note: required for `read::unit::AttributeValue<R, Offset>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::Attribute<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1121:10
     |
1121 | #[derive(Copy, Clone, Debug, Eq, PartialEq)]
     |          ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::Attribute<R>`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::unit::Attribute<R>`
     = note: required for `read::unit::Attribute<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::Attribute<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1121:16
     |
1121 | #[derive(Copy, Clone, Debug, Eq, PartialEq)]
     |                ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::Attribute<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1941:49
     |
1941 | fn length_u8_value<R: Reader>(input: &mut R) -> Result<R> {
     |                                                 ^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1946:50
     |
1946 | fn length_u16_value<R: Reader>(input: &mut R) -> Result<R> {
     |                                                  ^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1951:50
     |
1951 | fn length_u32_value<R: Reader>(input: &mut R) -> Result<R> {
     |                                                  ^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1956:54
     |
1956 | fn length_uleb128_value<R: Reader>(input: &mut R) -> Result<R> {
     |                                                      ^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::Attribute<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1987:6
     |
1987 | ) -> Result<Attribute<R>> {
     |      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::Attribute<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1987:6
     |
1987 | ) -> Result<Attribute<R>> {
     |      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2212:6
     |
2212 | ) -> Result<()> {
     |      ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2212:6
     |
2212 | ) -> Result<()> {
     |      ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::AttrsIter<'abbrev, 'entry, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2284:10
     |
2284 | #[derive(Clone, Copy, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttrsIter<'abbrev, 'entry, 'unit, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::AttrsIter<'abbrev, 'entry, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2284:17
     |
2284 | #[derive(Clone, Copy, Debug)]
     |                 ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttrsIter<'abbrev, 'entry, 'unit, R>`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::unit::AttrsIter<'abbrev, 'entry, 'unit, R>`
     = note: required for `read::unit::AttrsIter<'abbrev, 'entry, 'unit, R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::EntriesRaw<'abbrev, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2395:10
     |
2395 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesRaw<'abbrev, 'unit, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2484:21
     |
2484 |     cached_current: Option<DebuggingInformationEntry<'abbrev, 'unit, R>>,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::unit::EntriesCursor<'abbrev, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2476:10
     |
2476 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesCursor<'abbrev, 'unit, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2870:12
     |
2870 |     entry: Option<DebuggingInformationEntry<'abbrev, 'unit, R>>,
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::unit::EntriesTree<'abbrev, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2861:10
     |
2861 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesTree<'abbrev, 'unit, R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `common::DebugTypeSignature` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3064:54
     |
3064 | fn parse_type_signature<R: Reader>(input: &mut R) -> Result<DebugTypeSignature> {
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugTypeSignature`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3064:54
     |
3064 | fn parse_type_signature<R: Reader>(input: &mut R) -> Result<DebugTypeSignature> {
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<<R as read::reader::Reader>::Offset>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3069:67
     |
3069 | fn parse_type_offset<R: Reader>(input: &mut R, format: Format) -> Result<UnitOffset<R::Offset>> {
     |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<<R as read::reader::Reader>::Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3069:67
     |
3069 | fn parse_type_offset<R: Reader>(input: &mut R, format: Format) -> Result<UnitOffset<R::Offset>> {
     |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::DebugTypes<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3075:17
     |
3075 | #[derive(Debug, Default, Clone, Copy)]
     |                 ^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugTypes<R>`
note: required by a bound in `rustc_std_workspace_core::default::Default`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
     |
103  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`
     = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::DebugTypes<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3075:26
     |
3075 | #[derive(Debug, Default, Clone, Copy)]
     |                          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugTypes<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::DebugTypes<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3075:33
     |
3075 | #[derive(Debug, Default, Clone, Copy)]
     |                                 ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugTypes<R>`
     = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::unit::DebugTypes<R>`
     = note: required for `read::unit::DebugTypes<R>` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
     |
391  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::DebugTypes<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3127:24
     |
3127 | impl<R> Section<R> for DebugTypes<R> {
     |                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugTypes<R>`
     = help: the trait `rustc_std_workspace_core::convert::From<R>` is implemented for `read::unit::DebugTypes<R>`
     = note: required for `read::unit::DebugTypes<R>` to implement `rustc_std_workspace_core::convert::From<R>`
note: required by a bound in `read::Section`
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/mod.rs:612:23
     |
612  | pub trait Section<R>: From<R> {
     |                       ^^^^^^^ required by this bound in `Section`

error[E0277]: the size for values of type `R` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3137:9
     |
3137 | impl<R> From<R> for DebugTypes<R> {
     |         ^^^^^^^ doesn't have a size known at compile-time
     |
note: required by a bound in `rustc_std_workspace_core::convert::From`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
     |
543  | pub trait From<T>: Sized {
     |                ^ required by this bound in `From`
help: consider restricting type parameter `R`
     |
3137 | impl<R: rustc_std_workspace_core::marker::Sized> From<R> for DebugTypes<R> {
     |       +++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `read::unit::DebugTypes<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3137:21
     |
3137 | impl<R> From<R> for DebugTypes<R> {
     |                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugTypes<R>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
     |
543  | pub trait From<T>: Sized {
     |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `read::unit::DebugTypesUnitHeadersIter<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3176:10
     |
3176 | #[derive(Clone, Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebugTypesUnitHeadersIter<R>`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::UnitOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:26:62
    |
26  |     pub fn to_unit_offset<R>(&self, unit: &UnitHeader<R>) -> Option<UnitOffset<T>>
    |                                                              ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::UnitOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:43:62
    |
43  |     pub fn to_unit_offset<R>(&self, unit: &UnitHeader<R>) -> Option<UnitOffset<T>>
    |                                                              ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `common::DebugInfoOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:60:68
    |
60  |     pub fn to_debug_info_offset<R>(&self, unit: &UnitHeader<R>) -> Option<DebugInfoOffset<T>>
    |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugInfoOffset<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `common::DebugTypesOffset<T>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:71:69
    |
71  |     pub fn to_debug_types_offset<R>(&self, unit: &UnitHeader<R>) -> Option<DebugTypesOffset<T>>
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `common::DebugTypesOffset<T>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:82:10
    |
82  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:82:10
    |
82  | #[derive(Debug, Default, Clone, Copy)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::UnitHeader<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:138:77
    |
138 |     pub fn header_from_offset(&self, offset: DebugInfoOffset<R::Offset>) -> Result<UnitHeader<R>> {
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::UnitHeader<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:138:77
    |
138 |     pub fn header_from_offset(&self, offset: DebugInfoOffset<R::Offset>) -> Result<UnitHeader<R>> {
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:163:12
    |
163 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:163:12
    |
163 |         F: FnMut(&'a T) -> R,
    |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
    |
163 | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
    |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:189:17
    |
189 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:189:17
    |
189 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::unit::UnitHeader<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:197:31
    |
197 |     pub fn next(&mut self) -> Result<Option<UnitHeader<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::unit::UnitHeader<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:197:31
    |
197 |     pub fn next(&mut self) -> Result<Option<UnitHeader<R>>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::UnitHeader<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:197:38
    |
197 |     pub fn next(&mut self) -> Result<Option<UnitHeader<R>>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::UnitHeader<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:251:10
    |
251 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:251:10
    |
251 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:313:10
    |
313 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:313:10
    |
313 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::UnitOffset<Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:449:30
    |
449 |     pub fn range(&self, idx: Range<UnitOffset<Offset>>) -> Result<R> {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<Offset>`
note: required by a bound in `rustc_std_workspace_core::ops::Range`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/range.rs:80:18
    |
80  | pub struct Range<Idx> {
    |                  ^^^ required by this bound in `Range`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:449:60
    |
449 |     pub fn range(&self, idx: Range<UnitOffset<Offset>>) -> Result<R> {
    |                                                            ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:467:35
    |
467 |     pub fn range_from(&self, idx: RangeFrom<UnitOffset<Offset>>) -> Result<R> {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<Offset>`
note: required by a bound in `rustc_std_workspace_core::ops::RangeFrom`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/range.rs:187:22
    |
187 | pub struct RangeFrom<Idx> {
    |                      ^^^ required by this bound in `RangeFrom`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:467:69
    |
467 |     pub fn range_from(&self, idx: RangeFrom<UnitOffset<Offset>>) -> Result<R> {
    |                                                                     ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:478:33
    |
478 |     pub fn range_to(&self, idx: RangeTo<UnitOffset<Offset>>) -> Result<R> {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<Offset>`
note: required by a bound in `rustc_std_workspace_core::ops::RangeTo`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/range.rs:268:20
    |
268 | pub struct RangeTo<Idx> {
    |                    ^^^ required by this bound in `RangeTo`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:478:65
    |
478 |     pub fn range_to(&self, idx: RangeTo<UnitOffset<Offset>>) -> Result<R> {
    |                                                                 ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::DebuggingInformationEntry<'abbrev, 'me, R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:493:10
    |
493 |     ) -> Result<DebuggingInformationEntry<'abbrev, 'me, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebuggingInformationEntry<'abbrev, 'me, R, Offset>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:493:10
    |
493 |     ) -> Result<DebuggingInformationEntry<'abbrev, 'me, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::EntriesCursor<'abbrev, 'me, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:519:10
    |
519 |     ) -> Result<EntriesCursor<'abbrev, 'me, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesCursor<'abbrev, 'me, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:519:10
    |
519 |     ) -> Result<EntriesCursor<'abbrev, 'me, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:535:17
    |
535 |         offset: Option<UnitOffset<Offset>>,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::unit::EntriesTree<'abbrev, 'me, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:536:10
    |
536 |     ) -> Result<EntriesTree<'abbrev, 'me, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesTree<'abbrev, 'me, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:536:10
    |
536 |     ) -> Result<EntriesTree<'abbrev, 'me, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::UnitOffset<Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:548:17
    |
548 |         offset: Option<UnitOffset<Offset>>,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::UnitOffset<Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::unit::EntriesRaw<'abbrev, 'me, R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:549:10
    |
549 |     ) -> Result<EntriesRaw<'abbrev, 'me, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesRaw<'abbrev, 'me, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:549:10
    |
549 |     ) -> Result<EntriesRaw<'abbrev, 'me, R>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::abbrev::Abbreviations` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:563:67
    |
563 |     pub fn abbreviations(&self, debug_abbrev: &DebugAbbrev<R>) -> Result<Abbreviations> {
    |                                                                   ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::abbrev::Abbreviations`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:563:67
    |
563 |     pub fn abbreviations(&self, debug_abbrev: &DebugAbbrev<R>) -> Result<Abbreviations> {
    |                                                                   ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:657:17
    |
657 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:657:17
    |
657 | #[derive(Clone, Debug)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::unit::Attribute<R>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:861:50
    |
861 |     pub fn attr(&self, name: constants::DwAt) -> Result<Option<Attribute<R>>> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::unit::Attribute<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:861:50
    |
861 |     pub fn attr(&self, name: constants::DwAt) -> Result<Option<Attribute<R>>> {
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::Attribute<R>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:861:57
    |
861 |     pub fn attr(&self, name: constants::DwAt) -> Result<Option<Attribute<R>>> {
    |                                                         ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::Attribute<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::unit::AttributeValue<R, Offset>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:873:60
    |
873 |     pub fn attr_value_raw(&self, name: constants::DwAt) -> Result<Option<AttributeValue<R>>> {
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::unit::AttributeValue<R, Offset>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:873:60
    |
873 |     pub fn attr_value_raw(&self, name: constants::DwAt) -> Result<Option<AttributeValue<R>>> {
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::AttributeValue<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:873:67
    |
873 |     pub fn attr_value_raw(&self, name: constants::DwAt) -> Result<Option<AttributeValue<R>>> {
    |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttributeValue<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::unit::AttributeValue<R, Offset>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:881:56
    |
881 |     pub fn attr_value(&self, name: constants::DwAt) -> Result<Option<AttributeValue<R>>> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::unit::AttributeValue<R, Offset>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:881:56
    |
881 |     pub fn attr_value(&self, name: constants::DwAt) -> Result<Option<AttributeValue<R>>> {
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::AttributeValue<R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:881:63
    |
881 |     pub fn attr_value(&self, name: constants::DwAt) -> Result<Option<AttributeValue<R>>> {
    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::AttributeValue<R, Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:888:30
    |
888 |     fn after_attrs(&self) -> Result<R> {
    |                              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::unit::DebuggingInformationEntry<'abbrev, 'unit, R, Offset>>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:921:10
    |
921 |     ) -> Result<Option<Self>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::unit::DebuggingInformationEntry<'abbrev, 'unit, R, Offset>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:921:10
    |
921 |     ) -> Result<Option<Self>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::DebuggingInformationEntry<'abbrev, 'unit, R, Offset>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:921:10
    |
921 |     ) -> Result<Option<Self>> {
    |          ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::DebuggingInformationEntry<'abbrev, 'unit, R, Offset>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:943:23
    |
943 | #[derive(Clone, Copy, Debug, Eq, PartialEq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:943:23
    |
943 | #[derive(Clone, Copy, Debug, Eq, PartialEq)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1121:23
     |
1121 | #[derive(Copy, Clone, Debug, Eq, PartialEq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1121:23
     |
1121 | #[derive(Copy, Clone, Debug, Eq, PartialEq)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1739:31
     |
1739 |     pub fn u8_value(&self) -> Option<u8> {
     |                               ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1745:32
     |
1745 |     pub fn u16_value(&self) -> Option<u16> {
     |                                ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1751:34
     |
1751 |     pub fn udata_value(&self) -> Option<u64> {
     |                                  ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1757:34
     |
1757 |     pub fn sdata_value(&self) -> Option<i64> {
     |                                  ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::op::Expression<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1773:36
     |
1773 |     pub fn exprloc_value(&self) -> Option<Expression<R>> {
     |                                    ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Expression<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&read::str::DebugStr<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1805:24
     |
1805 |         debug_str_sup: Option<&DebugStr<R>>,
     |                        ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::str::DebugStr<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1817:31
     |
1817 |     pub fn u8_value(&self) -> Option<u8> {
     |                               ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1827:32
     |
1827 |     pub fn u16_value(&self) -> Option<u16> {
     |                                ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u16`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1837:34
     |
1837 |     pub fn udata_value(&self) -> Option<u64> {
     |                                  ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1856:34
     |
1856 |     pub fn sdata_value(&self) -> Option<i64> {
     |                                  ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i64`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::op::Expression<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1890:36
     |
1890 |     pub fn exprloc_value(&self) -> Option<Expression<R>> {
     |                                    ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::op::Expression<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&read::str::DebugStr<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:1928:24
     |
1928 |         debug_str_sup: Option<&DebugStr<R>>,
     |                        ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::str::DebugStr<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2284:23
     |
2284 | #[derive(Clone, Copy, Debug)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2284:23
     |
2284 | #[derive(Clone, Copy, Debug)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::unit::Attribute<R>>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2299:31
     |
2299 |     pub fn next(&mut self) -> Result<Option<Attribute<R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::unit::Attribute<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2299:31
     |
2299 |     pub fn next(&mut self) -> Result<Option<Attribute<R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::Attribute<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2299:38
     |
2299 |     pub fn next(&mut self) -> Result<Option<Attribute<R>>> {
     |                                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::Attribute<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2395:17
     |
2395 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2395:17
     |
2395 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<&'abbrev read::abbrev::Abbreviation>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2434:44
     |
2434 |     pub fn read_abbreviation(&mut self) -> Result<Option<&'abbrev Abbreviation>> {
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<&'abbrev read::abbrev::Abbreviation>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2434:44
     |
2434 |     pub fn read_abbreviation(&mut self) -> Result<Option<&'abbrev Abbreviation>> {
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&'abbrev read::abbrev::Abbreviation` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2434:44
     |
2434 |     pub fn read_abbreviation(&mut self) -> Result<Option<&'abbrev Abbreviation>> {
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'abbrev read::abbrev::Abbreviation`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::unit::Attribute<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2452:71
     |
2452 |     pub fn read_attribute(&mut self, spec: AttributeSpecification) -> Result<Attribute<R>> {
     |                                                                       ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::Attribute<R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2452:71
     |
2452 |     pub fn read_attribute(&mut self, spec: AttributeSpecification) -> Result<Attribute<R>> {
     |                                                                       ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2458:76
     |
2458 |     pub fn skip_attributes(&mut self, specs: &[AttributeSpecification]) -> Result<()> {
     |                                                                            ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2458:76
     |
2458 |     pub fn skip_attributes(&mut self, specs: &[AttributeSpecification]) -> Result<()> {
     |                                                                            ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2476:17
     |
2476 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2476:17
     |
2476 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `&read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2494:30
     |
2494 |     pub fn current(&self) -> Option<&DebuggingInformationEntry<'abbrev, 'unit, R>> {
     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<()>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2502:37
     |
2502 |     pub fn next_entry(&mut self) -> Result<Option<()>> {
     |                                     ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<()>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2502:37
     |
2502 |     pub fn next_entry(&mut self) -> Result<Option<()>> {
     |                                     ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2502:44
     |
2502 |     pub fn next_entry(&mut self) -> Result<Option<()>> {
     |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<(isize, &read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>)>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2653:10
     |
2653 |     ) -> Result<Option<(isize, &DebuggingInformationEntry<'abbrev, 'unit, R>)>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<(isize, &read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>)>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2653:10
     |
2653 |     ) -> Result<Option<(isize, &DebuggingInformationEntry<'abbrev, 'unit, R>)>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `(isize, &read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2653:10
     |
2653 |     ) -> Result<Option<(isize, &DebuggingInformationEntry<'abbrev, 'unit, R>)>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(isize, &read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<&read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2778:10
     |
2778 |     ) -> Result<Option<&DebuggingInformationEntry<'abbrev, 'unit, R>>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<&read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2778:10
     |
2778 |     ) -> Result<Option<&DebuggingInformationEntry<'abbrev, 'unit, R>>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2778:10
     |
2778 |     ) -> Result<Option<&DebuggingInformationEntry<'abbrev, 'unit, R>>> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&read::unit::DebuggingInformationEntry<'abbrev, 'unit, R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2861:17
     |
2861 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2861:17
     |
2861 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::unit::EntriesTreeNode<'abbrev, 'unit, 'me, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2888:40
     |
2888 |     pub fn root<'me>(&'me mut self) -> Result<EntriesTreeNode<'abbrev, 'unit, 'me, R>> {
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesTreeNode<'abbrev, 'unit, 'me, R>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2888:40
     |
2888 |     pub fn root<'me>(&'me mut self) -> Result<EntriesTreeNode<'abbrev, 'unit, 'me, R>> {
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `bool` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2904:41
     |
2904 |     fn next(&mut self, depth: isize) -> Result<bool> {
     |                                         ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `bool`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2904:41
     |
2904 |     fn next(&mut self, depth: isize) -> Result<bool> {
     |                                         ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2993:10
     |
2993 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:2993:10
     |
2993 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3028:10
     |
3028 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3028:10
     |
3028 | #[derive(Debug)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::unit::EntriesTreeNode<'abbrev, 'unit, 'me, R>>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3050:40
     |
3050 |     pub fn next<'me>(&'me mut self) -> Result<Option<EntriesTreeNode<'abbrev, 'unit, 'me, R>>> {
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::unit::EntriesTreeNode<'abbrev, 'unit, 'me, R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3050:40
     |
3050 |     pub fn next<'me>(&'me mut self) -> Result<Option<EntriesTreeNode<'abbrev, 'unit, 'me, R>>> {
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::EntriesTreeNode<'abbrev, 'unit, 'me, R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3050:40
     |
3050 |     pub fn next<'me>(&'me mut self) -> Result<Option<EntriesTreeNode<'abbrev, 'unit, 'me, R>>> {
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::EntriesTreeNode<'abbrev, 'unit, 'me, R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3075:10
     |
3075 | #[derive(Debug, Default, Clone, Copy)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3075:10
     |
3075 | #[derive(Debug, Default, Clone, Copy)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `(&'a T,)` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3121:12
     |
3121 |         F: FnMut(&'a T) -> R,
     |            ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(&'a T,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:17
     |
163  | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
     |                 ^^^^ required by this bound in `FnMut`

error[E0277]: `(&'a T,)` is not a tuple
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3121:12
     |
3121 |         F: FnMut(&'a T) -> R,
     |            ^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(&'a T,)`
     |
note: required by a bound in `rustc_std_workspace_core::ops::FnMut`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:163:23
     |
163  | pub trait FnMut<Args: Tuple>: FnOnce<Args> {
     |                       ^^^^^ required by this bound in `FnMut`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3176:17
     |
3176 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3176:17
     |
3176 | #[derive(Clone, Debug)]
     |                 ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::unit::UnitHeader<R>>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3184:31
     |
3184 |     pub fn next(&mut self) -> Result<Option<UnitHeader<R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::unit::UnitHeader<R>>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3184:31
     |
3184 |     pub fn next(&mut self) -> Result<Option<UnitHeader<R>>> {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::unit::UnitHeader<R>` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/unit.rs:3184:38
     |
3184 |     pub fn next(&mut self) -> Result<Option<UnitHeader<R>>> {
     |                                      ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::unit::UnitHeader<R>`
note: required by a bound in `rustc_std_workspace_core::option::Option`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
     |
562  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::value::ValueType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:25:17
    |
25  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::ValueType`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::value::ValueType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:25:24
    |
25  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::ValueType`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::value::ValueType`
    = note: required for `read::value::ValueType` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:54:17
    |
54  | #[derive(Debug, Clone, Copy, PartialEq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:54:24
    |
54  | #[derive(Debug, Clone, Copy, PartialEq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `read::value::Value`
    = note: required for `read::value::Value` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:25:10
    |
25  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:25:10
    |
25  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:54:10
    |
54  | #[derive(Debug, Clone, Copy, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:54:10
    |
54  | #[derive(Debug, Clone, Copy, PartialEq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `read::value::ValueType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:93:73
    |
93  |     pub fn from_encoding(encoding: constants::DwAte, byte_size: u64) -> Option<ValueType> {
    |                                                                         ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::ValueType`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `rustc_std_workspace_core::option::Option<read::value::ValueType>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:113:10
    |
113 |     ) -> Result<Option<ValueType>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::option::Option<read::value::ValueType>`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:113:10
    |
113 |     ) -> Result<Option<ValueType>> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::ValueType` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:113:17
    |
113 |     ) -> Result<Option<ValueType>> {
    |                 ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::ValueType`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:171:69
    |
171 |     pub fn parse<R: Reader>(value_type: ValueType, mut bytes: R) -> Result<Value> {
    |                                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:171:69
    |
171 |     pub fn parse<R: Reader>(value_type: ValueType, mut bytes: R) -> Result<Value> {
    |                                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:192:44
    |
192 |     pub fn to_u64(self, addr_mask: u64) -> Result<u64> {
    |                                            ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:192:44
    |
192 |     pub fn to_u64(self, addr_mask: u64) -> Result<u64> {
    |                                            ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:213:59
    |
213 |     pub fn from_u64(value_type: ValueType, value: u64) -> Result<Value> {
    |                                                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:213:59
    |
213 |     pub fn from_u64(value_type: ValueType, value: u64) -> Result<Value> {
    |                                                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:235:55
    |
235 |     fn from_f32(value_type: ValueType, value: f32) -> Result<Value> {
    |                                                       ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:235:55
    |
235 |     fn from_f32(value_type: ValueType, value: f32) -> Result<Value> {
    |                                                       ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:257:55
    |
257 |     fn from_f64(value_type: ValueType, value: f64) -> Result<Value> {
    |                                                       ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:257:55
    |
257 |     fn from_f64(value_type: ValueType, value: f64) -> Result<Value> {
    |                                                       ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:282:68
    |
282 |     pub fn convert(self, value_type: ValueType, addr_mask: u64) -> Result<Value> {
    |                                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:282:68
    |
282 |     pub fn convert(self, value_type: ValueType, addr_mask: u64) -> Result<Value> {
    |                                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:295:72
    |
295 |     pub fn reinterpret(self, value_type: ValueType, addr_mask: u64) -> Result<Value> {
    |                                                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:295:72
    |
295 |     pub fn reinterpret(self, value_type: ValueType, addr_mask: u64) -> Result<Value> {
    |                                                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:333:41
    |
333 |     pub fn abs(self, addr_mask: u64) -> Result<Value> {
    |                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:333:41
    |
333 |     pub fn abs(self, addr_mask: u64) -> Result<Value> {
    |                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:357:41
    |
357 |     pub fn neg(self, addr_mask: u64) -> Result<Value> {
    |                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:357:41
    |
357 |     pub fn neg(self, addr_mask: u64) -> Result<Value> {
    |                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:384:53
    |
384 |     pub fn add(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:384:53
    |
384 |     pub fn add(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:409:53
    |
409 |     pub fn sub(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:409:53
    |
409 |     pub fn sub(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:434:53
    |
434 |     pub fn mul(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:434:53
    |
434 |     pub fn mul(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:460:53
    |
460 |     pub fn div(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:460:53
    |
460 |     pub fn div(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:505:53
    |
505 |     pub fn rem(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:505:53
    |
505 |     pub fn rem(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:547:41
    |
547 |     pub fn not(self, addr_mask: u64) -> Result<Value> {
    |                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:547:41
    |
547 |     pub fn not(self, addr_mask: u64) -> Result<Value> {
    |                                         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:558:53
    |
558 |     pub fn and(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:558:53
    |
558 |     pub fn and(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:573:52
    |
573 |     pub fn or(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:573:52
    |
573 |     pub fn or(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:588:53
    |
588 |     pub fn xor(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:588:53
    |
588 |     pub fn xor(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:601:30
    |
601 |     fn shift_length(self) -> Result<u64> {
    |                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u64`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:601:30
    |
601 |     fn shift_length(self) -> Result<u64> {
    |                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:624:53
    |
624 |     pub fn shl(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:624:53
    |
624 |     pub fn shl(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:655:53
    |
655 |     pub fn shr(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:655:53
    |
655 |     pub fn shr(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                     ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:688:54
    |
688 |     pub fn shra(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:688:54
    |
688 |     pub fn shra(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:756:52
    |
756 |     pub fn eq(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:756:52
    |
756 |     pub fn eq(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:782:52
    |
782 |     pub fn ge(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:782:52
    |
782 |     pub fn ge(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:808:52
    |
808 |     pub fn gt(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:808:52
    |
808 |     pub fn gt(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:834:52
    |
834 |     pub fn le(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:834:52
    |
834 |     pub fn le(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:860:52
    |
860 |     pub fn lt(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:860:52
    |
860 |     pub fn lt(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::value::Value` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:886:52
    |
886 |     pub fn ne(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::value::Value`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `read::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.26.2/src/read/value.rs:886:52
    |
886 |     pub fn ne(self, rhs: Value, addr_mask: u64) -> Result<Value> {
    |                                                    ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `read::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

   Compiling adler v1.0.2
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=adler CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2 CARGO_PKG_AUTHORS='Jonas Schievink <jonasschievink@gmail.com>' CARGO_PKG_DESCRIPTION='A simple clean-room implementation of the Adler-32 checksum' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='0BSD OR MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=adler CARGO_PKG_REPOSITORY='https://github.com/jonas-schievink/adler.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.2 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name adler /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="compiler_builtins"' --cfg 'feature="core"' --cfg 'feature="rustc-dep-of-std"' -C metadata=d104c45c709929b7 -C extra-filename=-d104c45c709929b7 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/lib.rs
error[E0277]: the size for values of type `Adler32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/lib.rs:86:17
    |
86  | #[derive(Debug, Copy, Clone)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `Adler32`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `Adler32`
    = note: required for `Adler32` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Adler32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/lib.rs:86:23
    |
86  | #[derive(Debug, Copy, Clone)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `Adler32`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Adler32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/lib.rs:147:18
    |
147 | impl Default for Adler32 {
    |                  ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `Adler32`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/lib.rs:86:10
    |
86  | #[derive(Debug, Copy, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/lib.rs:86:10
    |
86  | #[derive(Debug, Copy, Clone)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `algo::U32X4` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/algo.rs:110:10
    |
110 | #[derive(Copy, Clone)]
    |          ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `algo::U32X4`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `algo::U32X4`
    = note: required for `algo::U32X4` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `algo::U32X4` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/algo.rs:110:16
    |
110 | #[derive(Copy, Clone)]
    |                ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `algo::U32X4`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `algo::U32X4` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/algo.rs:124:26
    |
124 | impl AddAssign<Self> for U32X4 {
    |                          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `algo::U32X4`
note: required by a bound in `rustc_std_workspace_core::ops::AddAssign`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:742:21
    |
742 | pub trait AddAssign<Rhs = Self> {
    |                     ^^^^^^^^^^ required by this bound in `AddAssign`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/algo.rs:132:6
    |
132 | impl RemAssign<u32> for U32X4 {
    |      ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::ops::RemAssign`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:990:21
    |
990 | pub trait RemAssign<Rhs = Self> {
    |                     ^^^^^^^^^^ required by this bound in `RemAssign`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-1.0.2/src/algo.rs:140:6
    |
140 | impl MulAssign<u32> for U32X4 {
    |      ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::ops::MulAssign`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:869:21
    |
869 | pub trait MulAssign<Rhs = Self> {
    |                     ^^^^^^^^^^ required by this bound in `MulAssign`

   Compiling std v0.0.0 (/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std)
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='The Rust Standard Library' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=std CARGO_PKG_REPOSITORY='https://github.com/rust-lang/rust.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.0.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name build_script_build --edition=2021 /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="addr2line"' --cfg 'feature="backtrace"' --cfg 'feature="gimli-symbolize"' --cfg 'feature="miniz_oxide"' --cfg 'feature="object"' --cfg 'feature="panic_unwind"' --cfg 'feature="std_detect_dlsym_getauxval"' --cfg 'feature="std_detect_file_io"' -C metadata=d6067067e2e64d8f -C extra-filename=-d6067067e2e64d8f --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/std-d6067067e2e64d8f -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --cap-lints warn`
Path /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/build.rs
     Running `/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/build/std-d6067067e2e64d8f/build-script-build`
[std 0.0.0] cargo:rerun-if-changed=build.rs
[std 0.0.0] cargo:rustc-env=STD_ENV_ARCH=x86_64
[std 0.0.0] cargo:rustc-cfg=backtrace_in_libstd
   Compiling miniz_oxide v0.5.3
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=miniz_oxide CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3 CARGO_PKG_AUTHORS='Frommi <daniil.liferenko@gmail.com>:oyvindln <oyvindln@users.noreply.github.com>' CARGO_PKG_DESCRIPTION='DEFLATE compression and decompression library rewritten in Rust based on miniz' CARGO_PKG_HOMEPAGE='https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide' CARGO_PKG_LICENSE='MIT OR Zlib OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=miniz_oxide CARGO_PKG_REPOSITORY='https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.5.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name miniz_oxide --edition=2018 /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="alloc"' --cfg 'feature="compiler_builtins"' --cfg 'feature="core"' --cfg 'feature="rustc-dep-of-std"' -C metadata=1a6fc2dda9eee340 -C extra-filename=-1a6fc2dda9eee340 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern adler=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libadler-d104c45c709929b7.rmeta --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern alloc=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_alloc-c7009d4820688a57.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs
error: extern location for alloc does not exist: /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_alloc-c7009d4820688a57.rmeta
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:27:1
   |
27 | extern crate alloc;
   | ^^^^^^^^^^^^^^^^^^^

error: cannot determine resolution for the macro `vec`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/mod.rs:125:22
    |
125 |     let mut output = vec![0; ::core::cmp::max(input.len() / 2, 2)];
    |                      ^^^
    |
    = note: import resolution is stuck, try simplifying macro imports

error: cannot determine resolution for the macro `vec`
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:133:28
    |
133 |     let mut ret: Vec<u8> = vec![0; min(input.len().saturating_mul(2), max_output_size)];
    |                            ^^^
    |
    = note: import resolution is stuck, try simplifying macro imports

error: extern location for adler does not exist: /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libadler-d104c45c709929b7.rmeta
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/shared.rs:14:20
   |
14 |     let mut hash = adler::Adler32::from_checksum(adler);
   |                    ^^^^^

warning: unused import: `::core::cmp::min`
 --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:6:5
  |
6 | use ::core::cmp::min;
  |     ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0277]: the size for values of type `MZFlush` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:40:17
    |
40  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZFlush`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `MZFlush`
    = note: required for `MZFlush` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZFlush` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:40:23
    |
40  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZFlush`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:82:17
    |
82  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZStatus`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `MZStatus`
    = note: required for `MZStatus` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:82:23
    |
82  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZStatus`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:106:17
    |
106 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `MZError`
    = note: required for `MZError` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:106:23
    |
106 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `DataFormat` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:144:17
    |
144 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `DataFormat`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `DataFormat`
    = note: required for `DataFormat` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `DataFormat` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:144:23
    |
144 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `DataFormat`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:184:17
    |
184 |     pub status: MZResult,
    |                 ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:184:17
    |
184 |     pub status: MZResult,
    |                 ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `StreamResult` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:177:17
    |
177 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `StreamResult`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `StreamResult`
    = note: required for `StreamResult` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `StreamResult` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:177:23
    |
177 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `StreamResult`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `StreamResult` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:198:6
    |
198 | impl core::convert::From<StreamResult> for MZResult {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `StreamResult`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`

error[E0277]: the size for values of type `rustc_std_workspace_core::result::Result<MZStatus, MZError>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:198:44
    |
198 | impl core::convert::From<StreamResult> for MZResult {
    |                                            ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::result::Result<MZStatus, MZError>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `MZStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:198:44
    |
198 | impl core::convert::From<StreamResult> for MZResult {
    |                                            ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:198:44
    |
198 | impl core::convert::From<StreamResult> for MZResult {
    |                                            ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `&StreamResult` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:204:6
    |
204 | impl core::convert::From<&StreamResult> for MZResult {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&StreamResult`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`

error[E0277]: the size for values of type `rustc_std_workspace_core::result::Result<MZStatus, MZError>` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:204:45
    |
204 | impl core::convert::From<&StreamResult> for MZResult {
    |                                             ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::result::Result<MZStatus, MZError>`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `MZStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:204:45
    |
204 | impl core::convert::From<&StreamResult> for MZResult {
    |                                             ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:204:45
    |
204 | impl core::convert::From<&StreamResult> for MZResult {
    |                                             ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:40:10
    |
40  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:40:10
    |
40  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZFlush` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:66:31
    |
66  |     pub fn new(flush: i32) -> Result<Self, MZError> {
    |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZFlush`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:66:31
    |
66  |     pub fn new(flush: i32) -> Result<Self, MZError> {
    |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:82:10
    |
82  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:82:10
    |
82  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:106:10
    |
106 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:106:10
    |
106 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:144:10
    |
144 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:144:10
    |
144 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:177:10
    |
177 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:177:10
    |
177 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:199:35
    |
199 |     fn from(res: StreamResult) -> Self {
    |                                   ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:199:35
    |
199 |     fn from(res: StreamResult) -> Self {
    |                                   ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:205:36
    |
205 |     fn from(res: &StreamResult) -> Self {
    |                                    ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/lib.rs:205:36
    |
205 |     fn from(res: &StreamResult) -> Self {
    |                                    ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::CompressionLevel` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/mod.rs:15:17
    |
15  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::CompressionLevel`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `deflate::CompressionLevel`
    = note: required for `deflate::CompressionLevel` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::CompressionLevel` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/mod.rs:15:23
    |
15  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::CompressionLevel`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/mod.rs:15:10
    |
15  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/mod.rs:15:10
    |
15  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::buffer::HashBuffers` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/buffer.rs:38:18
    |
38  | impl Default for HashBuffers {
    |                  ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::buffer::HashBuffers`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `deflate::buffer::LocalBuf` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/buffer.rs:52:18
    |
52  | impl Default for LocalBuf {
    |                  ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::buffer::LocalBuf`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `deflate::core::SymFreq` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:162:10
    |
162 | #[derive(Copy, Clone)]
    |          ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::SymFreq`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `deflate::core::SymFreq`
    = note: required for `deflate::core::SymFreq` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::core::SymFreq` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:162:16
    |
162 | #[derive(Copy, Clone)]
    |                ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::SymFreq`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::core::CompressionStrategy` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:194:17
    |
194 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::CompressionStrategy`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `deflate::core::CompressionStrategy`
    = note: required for `deflate::core::CompressionStrategy` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::core::CompressionStrategy` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:194:23
    |
194 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::CompressionStrategy`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::core::TDEFLFlush` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:210:17
    |
210 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::TDEFLFlush`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `deflate::core::TDEFLFlush`
    = note: required for `deflate::core::TDEFLFlush` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::core::TDEFLFlush` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:210:23
    |
210 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::TDEFLFlush`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MZFlush` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:230:6
    |
230 | impl From<MZFlush> for TDEFLFlush {
    |      ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZFlush`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`

error[E0277]: the size for values of type `deflate::core::TDEFLFlush` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:230:24
    |
230 | impl From<MZFlush> for TDEFLFlush {
    |                        ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::TDEFLFlush`
note: required by a bound in `rustc_std_workspace_core::convert::From`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `deflate::core::TDEFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:256:17
    |
256 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::TDEFLStatus`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `deflate::core::TDEFLStatus`
    = note: required for `deflate::core::TDEFLStatus` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::core::TDEFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:256:23
    |
256 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::TDEFLStatus`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::core::CompressorOxide` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:517:18
    |
517 | impl Default for CompressorOxide {
    |                  ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::CompressorOxide`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `&'a [u8]` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:624:13
    |
624 |     in_buf: Option<&'a [u8]>,
    |             ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'a [u8]`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&'a mut usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:625:18
    |
625 |     in_buf_size: Option<&'a mut usize>,
    |                  ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `&'a mut usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:837:62
    |
837 | fn write(src: &[u8], dst: &mut [u8], dst_pos: &mut usize) -> Result<()> {
    |                                                              ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:837:62
    |
837 | fn write(src: &[u8], dst: &mut [u8], dst_pos: &mut usize) -> Result<()> {
    |                                                              ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::HuffmanOxide` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:846:18
    |
846 | impl Default for HuffmanOxide {
    |                  ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::HuffmanOxide`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `bool` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:1520:6
     |
1520 | ) -> Result<bool> {
     |      ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `bool`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:1520:6
     |
1520 | ) -> Result<bool> {
     |      ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `bool` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:1619:6
     |
1619 | ) -> Result<bool> {
     |      ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `bool`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:1619:6
     |
1619 | ) -> Result<bool> {
     |      ^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i32` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:1633:6
     |
1633 | ) -> Result<i32> {
     |      ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `i32`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:1633:6
     |
1633 | ) -> Result<i32> {
     |      ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:194:10
    |
194 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:194:10
    |
194 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:210:10
    |
210 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:210:10
    |
210 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `deflate::core::TDEFLFlush` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:243:31
    |
243 |     pub fn new(flush: i32) -> Result<Self, MZError> {
    |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::TDEFLFlush`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:243:31
    |
243 |     pub fn new(flush: i32) -> Result<Self, MZError> {
    |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:256:10
    |
256 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:256:10
    |
256 | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:649:40
    |
649 |     fn update_size(&mut self, in_size: Option<usize>, out_size: Option<usize>) {
    |                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:740:60
    |
740 |     fn flush(&mut self, output: &mut OutputBufferOxide) -> Result<()> {
    |                                                            ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:740:60
    |
740 |     fn flush(&mut self, output: &mut OutputBufferOxide) -> Result<()> {
    |                                                            ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:792:10
    |
792 |     ) -> Result<()> {
    |          ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:792:10
    |
792 |     ) -> Result<()> {
    |          ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:816:10
    |
816 |     ) -> Result<()> {
    |          ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:816:10
    |
816 |     ) -> Result<()> {
    |          ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:1083:74
     |
1083 |     fn start_dynamic_block(&mut self, output: &mut OutputBufferOxide) -> Result<()> {
     |                                                                          ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
     |
503  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `deflate::core::Error` cannot be known at compilation time
    --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/deflate/core.rs:1083:74
     |
1083 |     fn start_dynamic_block(&mut self, output: &mut OutputBufferOxide) -> Result<()> {
     |                                                                          ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `deflate::core::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
    --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
     |
503  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:24:17
    |
24  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `inflate::TINFLStatus`
    = note: required for `inflate::TINFLStatus` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:24:23
    |
24  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |                       ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:85:43
    |
85  | pub fn decompress_to_vec(input: &[u8]) -> Result<Vec<u8>, TINFLStatus> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:93:48
    |
93  | pub fn decompress_to_vec_zlib(input: &[u8]) -> Result<Vec<u8>, TINFLStatus> {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:107:71
    |
107 | pub fn decompress_to_vec_with_limit(input: &[u8], max_size: usize) -> Result<Vec<u8>, TINFLStatus> {
    |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:120:6
    |
120 | ) -> Result<Vec<u8>, TINFLStatus> {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:131:6
    |
131 | ) -> Result<Vec<u8>, TINFLStatus> {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:188:6
    |
188 | ) -> Result<usize, TINFLStatus> {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `usize`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:188:6
    |
188 | ) -> Result<usize, TINFLStatus> {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:24:10
    |
24  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:24:10
    |
24  | #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `inflate::TINFLStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/mod.rs:66:36
    |
66  |     pub fn from_i32(value: i32) -> Option<TINFLStatus> {
    |                                    ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::TINFLStatus`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `inflate::core::DecompressorOxide` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:233:18
    |
233 | impl Default for DecompressorOxide {
    |                  ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::core::DecompressorOxide`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `inflate::core::State` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:263:10
    |
263 | #[derive(Copy, Clone, PartialEq, Eq, Debug)]
    |          ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::core::State`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `inflate::core::State`
    = note: required for `inflate::core::State` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `inflate::core::State` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:263:16
    |
263 | #[derive(Copy, Clone, PartialEq, Eq, Debug)]
    |                ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::core::State`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:383:27
    |
383 | fn read_u16_le(iter: &mut slice::Iter<u8>) -> u16 {
    |                           ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:398:27
    |
398 | fn read_u32_le(iter: &mut slice::Iter<u8>) -> u32 {
    |                           ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:414:53
    |
414 | fn fill_bit_buffer(l: &mut LocalVars, in_iter: &mut slice::Iter<u8>) {
    |                                                     ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:482:19
    |
482 |     in_iter: &mut slice::Iter<u8>,
    |                   ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `(u8,)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:592:8
    |
592 |     F: FnOnce(u8) -> Action,
    |        ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(u8,)`
note: required by a bound in `rustc_std_workspace_core::ops::FnOnce`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:242:18
    |
242 | pub trait FnOnce<Args: Tuple> {
    |                  ^^^^ required by this bound in `FnOnce`

error[E0277]: `(u8,)` is not a tuple
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:592:8
    |
592 |     F: FnOnce(u8) -> Action,
    |        ^^^^^^^^^^^^^^^^^^^^ the trait `rustc_std_workspace_core::marker::Tuple` is not implemented for `(u8,)`
    |
note: required by a bound in `rustc_std_workspace_core::ops::FnOnce`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:242:24
    |
242 | pub trait FnOnce<Args: Tuple> {
    |                        ^^^^^ required by this bound in `FnOnce`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:590:31
    |
590 | fn read_byte<F>(in_iter: &mut slice::Iter<u8>, flags: u32, f: F) -> Action
    |                               ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:609:19
    |
609 |     in_iter: &mut slice::Iter<u8>,
    |                   ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:638:53
    |
638 | fn pad_to_bytes<F>(l: &mut LocalVars, in_iter: &mut slice::Iter<u8>, flags: u32, f: F) -> Action
    |                                                     ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `inflate::core::LocalVars` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:782:10
    |
782 | #[derive(Copy, Clone)]
    |          ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::core::LocalVars`
    = help: the trait `rustc_std_workspace_core::clone::Clone` is implemented for `inflate::core::LocalVars`
    = note: required for `inflate::core::LocalVars` to implement `rustc_std_workspace_core::clone::Clone`
note: required by a bound in `rustc_std_workspace_core::marker::Copy`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:391:17
    |
391 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `inflate::core::LocalVars` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:782:16
    |
782 | #[derive(Copy, Clone)]
    |                ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::core::LocalVars`
note: required by a bound in `rustc_std_workspace_core::clone::Clone`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:878:19
    |
878 |     in_iter: &mut slice::Iter<u8>,
    |                   ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u8`
note: required by a bound in `rustc_std_workspace_core::slice::Iter`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs:60:21
    |
60  | pub struct Iter<'a, T: 'a> {
    |                     ^ required by this bound in `Iter`

error[E0277]: the size for values of type `(i32, u32)` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:72:45
    |
72  |     fn lookup(&self, bit_buf: BitBuffer) -> Option<(i32, u32)> {
    |                                             ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `(i32, u32)`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:214:30
    |
214 |     pub fn adler32(&self) -> Option<u32> {
    |                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:224:37
    |
224 |     pub fn adler32_header(&self) -> Option<u32> {
    |                                     ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `u32`
note: required by a bound in `rustc_std_workspace_core::option::Option`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:562:17
    |
562 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:263:38
    |
263 | #[derive(Copy, Clone, PartialEq, Eq, Debug)]
    |                                      ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `()`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `rustc_std_workspace_core::fmt::Error` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/core.rs:263:38
    |
263 | #[derive(Copy, Clone, PartialEq, Eq, Debug)]
    |                                      ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `rustc_std_workspace_core::fmt::Error`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `inflate::stream::InflateState` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/stream.rs:83:18
    |
83  | impl Default for InflateState {
    |                  ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `inflate::stream::InflateState`
note: required by a bound in `rustc_std_workspace_core::default::Default`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `MZStatus` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/stream.rs:293:6
    |
293 | ) -> MZResult {
    |      ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZStatus`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:17
    |
503 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `MZError` cannot be known at compilation time
   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.5.3/src/inflate/stream.rs:293:6
    |
293 | ) -> MZResult {
    |      ^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `rustc_std_workspace_core::marker::Sized` is not implemented for `MZError`
note: required by a bound in `rustc_std_workspace_core::result::Result`
   --> /home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:503:20
    |
503 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

warning: `miniz_oxide` (lib) generated 1 warning
   Compiling addr2line v0.17.0
     Running `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=addr2line CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/addr2line-0.17.0 CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A cross-platform symbolication library written in Rust, using `gimli`' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=addr2line CARGO_PKG_REPOSITORY='https://github.com/gimli-rs/addr2line' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.17.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=17 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name addr2line /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/addr2line-0.17.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="alloc"' --cfg 'feature="compiler_builtins"' --cfg 'feature="core"' --cfg 'feature="rustc-dep-of-std"' -C metadata=29f5608c12e1c0e3 -C extra-filename=-29f5608c12e1c0e3 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern gimli=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libgimli-0da8bfc6daf04f14.rmeta --extern alloc=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_alloc-c7009d4820688a57.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn`
Path /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/addr2line-0.17.0/src/lib.rs
error: extern location for alloc does not exist: /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_alloc-c7009d4820688a57.rmeta
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/addr2line-0.17.0/src/lib.rs:30:1
   |
30 | extern crate alloc;
   | ^^^^^^^^^^^^^^^^^^^

error: extern location for gimli does not exist: /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libgimli-0da8bfc6daf04f14.rmeta
  --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/addr2line-0.17.0/src/lib.rs:36:1
   |
36 | pub extern crate gimli;
   | ^^^^^^^^^^^^^^^^^^^^^^^

For more information about this error, try `rustc --explain E0152`.
error: could not compile `addr2line` due to 4 previous errors

Caused by:
  process didn't exit successfully: `CARGO=/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=addr2line CARGO_MANIFEST_DIR=/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/addr2line-0.17.0 CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A cross-platform symbolication library written in Rust, using `gimli`' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=addr2line CARGO_PKG_REPOSITORY='https://github.com/gimli-rs/addr2line' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.17.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=17 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib:/home/simon/.rustup/toolchains/nightly-2023-01-20-x86_64-unknown-linux-gnu/lib' RUSTC_BOOTSTRAP=1 /home/simon/.cargo/bin/cargo-rustyrts rustc --crate-name addr2line /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/addr2line-0.17.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="alloc"' --cfg 'feature="compiler_builtins"' --cfg 'feature="core"' --cfg 'feature="rustc-dep-of-std"' -C metadata=29f5608c12e1c0e3 -C extra-filename=-29f5608c12e1c0e3 --out-dir /home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -Z force-unstable-if-unmarked -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/debug/deps --extern compiler_builtins=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libcompiler_builtins-9aef164463dc9f01.rmeta --extern gimli=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/libgimli-0da8bfc6daf04f14.rmeta --extern alloc=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_alloc-c7009d4820688a57.rmeta --extern core=/home/simon/Dokumente/HiWi-RustyRTS/Ausprobierprojekte/threading/target/x86_64-unknown-linux-gnu/debug/deps/librustc_std_workspace_core-806e9b447dbecf25.rmeta --cap-lints warn` (exit status: 1)
